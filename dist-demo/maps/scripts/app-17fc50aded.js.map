{"version":3,"sources":["scripts/app-17fc50aded.js"],"names":["angular","module","config","ngClipProvider","setPath","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","abstract","template","resolve","factory","$jsonapi","$stateParams","getResource","type","collection","all","object","get","id","otherwise","toTitleCase","string","out","replace","str","offset","toUpperCase","substr","toTitleCaseFilter","input","constant","filter","testForm","restrict","scope","$scope","$interval","forEach","form","data","val","attribute","$watch","nv","ov","validateField","isArray","updateDiff","Date","now","updatedAt","directive","testFormNew","search","link","schema","polymorphic","contentUrl","$timeout","isEmpty","obj","Object","keys","length","addLink","target","loading","reject","error","errorText","statusText","key","then","show","showResults","hideResults","setInput","value","getIndex","modelName","relationships","collections","allResources","resource","resourceName","cache","index","model","$inject","searchFilter","names","listResources","items","relationship","undefined","indexOf","searchWord","results","words","split","toString","toLowerCase","push","splice","join","promiseButton","$parse","$q","compile","$element","attr","loadingClass","errorClass","successClass","fn","ngClick","element","onClick","event","response","removeClass","addClass","on","preventDefault","stopImmediatePropagation","off","callback","$event","$apply","priority","errorMessage","errors","errorList","isObject","isString","RecursionHelper","close","$broadcast","clear","clearCache","add","initialize","newObjects","toggleTimmer","interval","cancel","showMore","$on","equals","unlink","nested","require","objectRelationships","AngularJsonAPIModelForm","emptyRelationship","parent","attributeField","sidebar","sidebarController","Spaceships","run","AngularJsonAPISynchronizationLocal","AngularJsonAPISynchronizationRest","AngularJsonAPISynchronizerSimple","apiURL","attributes","name","presence","maximum","minimum","durability","numericality","onlyInteger","quality","pilot","included","reflection","spaceshipModel","location","functions","this","localeSynchro","create","restSynchro","synchronizer","addResource","SpaceshipModels","code","speed","cargo","spaceships","Robots","nameFirst","nameLast","creationDate","datetime","pictureUrl","robotModel","job","laserGuns","powerArmors","include","RobotModels","robots","PowerArmors","armor","rarity","owner","Planets","cordsX","cordsY","cordsZ","size","locations","Locations","planet","entity","Jobs","power","salary","RequestCtrl","RequestGetCtrl","RequestAllCtrl","frameCtrl","logEvents","$rootScope","logOnEvent","eventName","watcher","status","watchers","clearWatchers","events","resources","_","app","$","each","site","settings","modules","charAt","substring","seModule","options","arguments","ngModel","iElement","onChange","clone","apply","$templateCache","put"],"mappings":"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","file":"scripts/app-17fc50aded.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample', [\n    'ui.router',\n    'angular-jsonapi',\n    'angular-jsonapi-local',\n    'angular-jsonapi-rest',\n    'jsonFormatter',\n    'ngClipboard',\n    'promise-button',\n    'RecursionHelper'\n  ])\n  .config(function(ngClipProvider) {\n    ngClipProvider.setPath('bower_components/zeroclipboard/dist/ZeroClipboard.swf');\n  })\n  .config(function($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('frame', {\n        url: '',\n        templateUrl: 'app/frame/frame.html',\n        controller: 'FrameCtrl',\n        abstract: true\n      })\n      .state('frame.hello', {\n        url: '',\n        templateUrl: 'app/frame/hello.html'\n      })\n      .state('frame.request', {\n        url: '/{type}',\n        template: '<ui-view></ui-view>',\n        controller: 'RequestCtrl',\n        abstract: true,\n        resolve: {\n          factory: function($jsonapi, $stateParams) {\n            return $jsonapi.getResource($stateParams.type);\n          }\n        }\n      })\n      .state('frame.request.all', {\n        url: '',\n        templateUrl: 'app/request/all.html',\n        controller: 'RequestAllCtrl',\n        resolve: {\n          collection: function(factory) {\n            return factory.all();\n          }\n        }\n      })\n      .state('frame.request.get', {\n        url: '/{id}',\n        templateUrl: 'app/request/get.html',\n        controller: 'RequestGetCtrl',\n        resolve: {\n          object: function(factory, $stateParams) {\n            return factory.get($stateParams.id);\n          }\n        }\n      });\n\n    $urlRouterProvider.otherwise('/robots');\n  });\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .constant('toTitleCase', toTitleCase)\n    .filter('toTitleCase', toTitleCaseFilter);\n\n  function toTitleCase(string) {\n    var out = string.replace(/^\\s*/, '');  // strip leading spaces\n    out = out.replace(/^[a-z]|[^\\s][A-Z]/g, function(str, offset) {\n      if (offset === 0) {\n        return str.toUpperCase();\n      } else {\n        return str.substr(0, 1) + ' ' + str.substr(1).toUpperCase();\n      }\n    });\n\n    return out;\n  }\n\n  function toTitleCaseFilter() {\n    return function(input) {\n      return toTitleCase(input);\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .directive('testForm', testForm);\n\n  function testForm() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/components/test-form/test-form.html',\n      scope: {\n        object: '='\n      },\n      controller: function($scope, $interval) {\n        angular.forEach($scope.object.form.data, function(val, attribute) {\n          $scope.$watch('object.form.data.' + attribute, function(nv, ov) {\n            if (nv !== ov) {\n              $scope.object.form.validateField(attribute);\n            }\n          });\n        });\n        $scope.isArray = angular.isArray;\n        $interval(function() {\n          $scope.updateDiff = (Date.now() - $scope.object.updatedAt) / 1000;\n        }, 100);\n      }\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .directive('testFormNew', testFormNew);\n\n  function testFormNew() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/components/test-form/test-form-new.html',\n      scope: {\n        object: '='\n      },\n      controller: function($scope, $interval) {\n        // angular.forEach($scope.object.form.data, function(val, attribute) {\n        //   $scope.$watch('object.form.data.' + attribute, function(nv, ov) {\n        //     if (nv !== ov) {\n        //       $scope.object.form.validateField(attribute);\n        //     }\n        //   });\n        // });\n\n        // $interval(function() {\n        //   $scope.updateDiff = (Date.now() - $scope.object.updatedAt) / 1000;\n        // }, 100);\n      }\n    };\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .directive('angularJsonapiSearch', search);\n\n  function search() {\n    return {\n      restrict: 'E',\n      template: '<div ng-include=\"contentUrl\"></div>',\n      controller: controller,\n      link: link,\n      scope: {\n        object: '=',\n        key: '=',\n      }\n    };\n\n    function link(scope) {\n      if (scope.schema.polymorphic === true) {\n        scope.contentUrl = 'app/components/search/search-polymorphic.html';\n      } else {\n        scope.contentUrl = 'app/components/search/search.html';\n      }\n    }\n\n    function controller($scope, $jsonapi, $timeout) {\n      $scope.schema = $scope.object.schema.relationships[$scope.key];\n      if ($scope.schema.polymorphic) {\n        $scope.collections = {};\n        angular.forEach($jsonapi.allResources(), function(resource, resourceName) {\n          $scope.collections[resourceName] = resource.cache.index();\n        });\n      } else {\n        $scope.model = $scope.schema.model;\n        $scope.collection = $jsonapi.getResource($scope.model).cache.index();\n      }\n\n      $scope.show = false;\n      $scope.isEmpty = isEmpty;\n      $scope.addLink = addLink;\n      $scope.showResults = showResults;\n      $scope.hideResults = hideResults;\n      $scope.setInput = setInput;\n      $scope.getIndex = getIndex;\n\n      function isEmpty(obj) {\n        return Object.keys(obj).length === 0;\n      }\n\n      function addLink(target) {\n        $scope.loading = true;\n        $scope.object.link($scope.key, target).then(resolve, reject);\n        $scope.show = false;\n\n        function resolve() {\n          $scope.loading = false;\n          $scope.input = '';\n        }\n\n        function reject(error) {\n          $scope.loading = false;\n          $scope.error = true;\n          $scope.errorText = error[0].statusText;\n        }\n      }\n\n      function showResults() {\n        $scope.error = false;\n        $scope.show = true;\n      }\n\n      function hideResults() {\n        $scope.show = false;\n      }\n\n      function setInput(value) {\n        $scope.input = value;\n      }\n\n      function getIndex(modelName) {\n        $timeout(function() {\n          $scope.collection = $jsonapi.getResource(modelName).all().data;\n        });\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .filter('angularJsonapiSearchObject', searchFilter);\n\n  function searchFilter($jsonapi) {\n    var names = $jsonapi.listResources();\n\n    return function(items, search, relationship, polymorphic) {\n      if(items === undefined) {\n        return;\n      }\n\n      if (!search) {\n        if (polymorphic === true) {\n          return [];\n        } else if (angular.isArray(relationship)) {\n          return items.filter(function(value) {\n            return relationship.indexOf(value) === -1;\n          });\n        } else {\n          return items;\n        }\n      }\n\n      var results = [];\n      var words = search.split(' ');\n      var searchWord;\n\n      if (polymorphic === false) {\n        searchWord = search;\n        angular.forEach(items, function(value) {\n          if (relationship.indexOf(value) === -1 && value.toString().toLowerCase().indexOf(searchWord.toLowerCase()) > -1) {\n            results.push(value);\n          }\n        });\n      } else {\n        if (words.length > 1) {\n          searchWord = words.splice(1).join(' ');\n          angular.forEach(items, function(value) {\n            if (relationship.indexOf(value) === -1 && value.toString().toLowerCase().indexOf(searchWord.toLowerCase()) > -1) {\n              results.push(value);\n            }\n          });\n        } else if (names.indexOf(words[0]) > -1) {\n          if (angular.isArray(relationship)) {\n            return items.filter(function(value) {\n              return relationship.indexOf(value) === -1;\n            });\n          } else {\n            return items.filter(function(value) {\n              return relationship !== value;\n            });\n          }\n        }\n      }\n\n      return results;\n    };\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .filter('angularJsonapiSearchCollection', searchFilter);\n\n  function searchFilter() {\n    return function(items, search) {\n      if (!search) {\n        return items;\n      }\n\n      var results = {};\n      var words = search.split(' ');\n      angular.forEach(items, function(value, key) {\n        if (key.indexOf(words[0]) > -1) {\n          results[key] = value;\n        }\n      });\n\n      return results;\n    };\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('promise-button', []);\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('promise-button')\n    .directive('promiseButton', promiseButton);\n\n  function promiseButton($parse, $q) {\n    return {\n      restrict: 'A',\n      priority: -1,\n      compile: compile\n    };\n\n    function compile($element, attr) {\n      var loadingClass = attr.loadingClass || 'loading';\n      var errorClass = attr.errorClass || 'negative';\n      var successClass = attr.successClass || 'positive';\n\n      var fn = $parse(attr.ngClick, null,  true);\n      return function ngEventHandler(scope, element) {\n        element.on('click', onClick);\n\n        function onClick(event) {\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          element.off('click');\n\n          var callback = function() {\n            element.addClass(loadingClass);\n            element.removeClass(errorClass);\n            element.removeClass(successClass);\n            $q.resolve(fn(scope, {$event:event})).then(resolve, reject);\n          };\n\n          function resolve(response) {\n            element.removeClass(loadingClass);\n            element.addClass(successClass);\n            element.on('click', onClick);\n\n            return response;\n          }\n\n          function reject(response) {\n            element.removeClass(loadingClass);\n            element.addClass(errorClass);\n            element.on('click', onClick);\n\n            return response;\n          }\n\n          scope.$apply(callback);\n        }\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .directive('errorMessage', errorMessage);\n\n  function errorMessage() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/components/error-message/error-message.html',\n      scope: {\n        errors: '=data'\n      }\n    };\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .directive('errorList', errorList);\n\n  function errorList() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/components/error-message/error-list.html',\n      scope: {\n        errors: '=data'\n      },\n      controller: controller\n    };\n\n    function controller($scope) {\n      $scope.isObject = angular.isObject;\n      $scope.isString = angular.isString;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .directive('angularJsonapiCollection', collection);\n\n  function collection(RecursionHelper, $jsonapi) {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/components/collection/collection.html',\n      scope: {\n        collection: '=data'\n      },\n      compile: RecursionHelper.compile,\n      controller: function($scope, $interval) {\n        $interval(function() {\n          $scope.updateDiff = (Date.now() - $scope.collection.updatedAt) / 1000;\n        }, 100);\n\n        $scope.newObjects = [];\n\n        $scope.close = close;\n        $scope.clear = clear;\n        $scope.add = add;\n\n        function close() {\n          $scope.$broadcast('close');\n        }\n\n        function clear() {\n          $jsonapi.clearCache();\n        }\n\n        function add() {\n          $scope.collection.data.push($scope.collection.resource.initialize());\n        }\n      }\n    };\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .directive('angularJsonapiObject', object);\n\n  function object(RecursionHelper) {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/components/object/object.html',\n      scope: {\n        object: '=data',\n        unlink: '&',\n        nested: '='\n      },\n      require: '^angularJsonapiObject',\n      compile: RecursionHelper.compile,\n      controller: controller\n    };\n\n    function controller($scope, $interval) {\n      var interval;\n\n      $scope.showMore = false;\n      $scope.isArray = angular.isArray;\n\n      $scope.$watch('showMore', toggleTimmer);\n\n      $scope.$on('close', function() {\n        $scope.showMore = false;\n      });\n\n      $scope.equals = angular.equals;\n\n      function toggleTimmer(value) {\n        if (value === true) {\n          $scope.updateDiff = (Date.now() - $scope.object.updatedAt) / 1000;\n          interval = $interval(function() {\n            $scope.updateDiff = (Date.now() - $scope.object.updatedAt) / 1000;\n          }, 100);\n        } else if (value === false) {\n          $interval.cancel(interval);\n        }\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .directive('angularJsonapiObjectRelationships', objectRelationships);\n\n  function objectRelationships(RecursionHelper, AngularJsonAPIModelForm) {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/components/object/object-relationships.html',\n      scope: {\n        object: '=data'\n      },\n      compile: RecursionHelper.compile,\n      controller: controller\n    };\n\n    function controller($scope) {\n      $scope.isArray = angular.isArray;\n      $scope.emptyRelationship = emptyRelationship;\n      $scope.form = $scope.object.parent !== undefined;\n\n      function emptyRelationship(relationship) {\n        return relationship === undefined ||\n          relationship === null ||\n          angular.isArray(relationship) &&\n          relationship.length === 0;\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('promise-button')\n    .directive('attributeField', attributeField);\n\n  function attributeField() {\n    return {\n      restrict: 'A',\n      controller: controller,\n      templateUrl: 'app/components/attribute-field/attribute-field.html',\n      scope: {\n        object: '=',\n        key: '='\n      }\n    };\n\n    function controller($scope) {\n\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .directive('sidebar', sidebar);\n\n  function sidebar() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/sidebar/sidebar.html',\n      controller: sidebarController,\n      replace: true\n    };\n\n    function sidebarController($scope, $jsonapi) {\n      $scope.names = $jsonapi.listResources();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n  .run(function(\n    $jsonapi,\n    AngularJsonAPISynchronizationLocal,\n    AngularJsonAPISynchronizationRest,\n    AngularJsonAPISynchronizerSimple,\n    apiURL\n  ) {\n    var schema = {\n      type: 'spaceships',\n      id: '',\n      attributes: {\n        name: {presence: true, length: {maximum: 20, minimum: 3}},\n        durability: {presence: true, numericality: {onlyInteger: true}},\n        quality: {presence: true, numericality: {onlyInteger: true}}\n      },\n      relationships: {\n        pilot: {\n          included: true,\n          type: 'hasOne',\n          reflection: 'spaceships',\n          polymorphic: true\n        },\n        spaceshipModel: {\n          included: true,\n          type: 'hasOne'\n        },\n        location: {\n          included: true,\n          type: 'hasOne',\n          reflection: 'entity'\n        }\n      },\n      functions: {\n        toString: function() {\n          if (!this.data.attributes.name) {\n            return this.data.id;\n          }\n\n          return this.data.attributes.name;\n        }\n      }\n    };\n\n    var localeSynchro = AngularJsonAPISynchronizationLocal.create('LocalStore synchronization', 'AngularJsonAPI');\n    var restSynchro = AngularJsonAPISynchronizationRest.create('Rest synchronization', apiURL + '/spaceships');\n    var synchronizer = AngularJsonAPISynchronizerSimple.create([localeSynchro, restSynchro]);\n\n    $jsonapi.addResource(schema, synchronizer);\n  })\n  .factory('Spaceships', Spaceships);\n\n  function Spaceships(\n    $jsonapi\n  ) {\n    return $jsonapi.getResource('spaceships');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n  .run(function(\n    $jsonapi,\n    AngularJsonAPISynchronizationLocal,\n    AngularJsonAPISynchronizationRest,\n    AngularJsonAPISynchronizerSimple,\n    apiURL\n  ) {\n    var schema = {\n      type: 'spaceshipModels',\n      id: '',\n      attributes: {\n        name: {presence: true, length: {maximum: 20, minimum: 3}},\n        code: {presence: true, length: {maximum: 20, minimum: 3}},\n        speed: {presence: true, numericality: {onlyInteger: true}},\n        cargo: {presence: true, numericality: {onlyInteger: true}},\n        type: {presence: true, length: {maximum: 20, minimum: 3}}\n      },\n      relationships: {\n        spaceships: {\n          included: true,\n          type: 'hasMany'\n        }\n      },\n      functions: {\n        toString: function() {\n          if (!this.data.attributes.name) {\n            return this.data.id;\n          }\n\n          return this.data.attributes.name;\n        }\n      }\n    };\n\n    var localeSynchro = AngularJsonAPISynchronizationLocal.create('LocalStore synchronization', 'AngularJsonAPI');\n    var restSynchro = AngularJsonAPISynchronizationRest.create('Rest synchronization', apiURL + '/spaceshipModels');\n    var synchronizer = AngularJsonAPISynchronizerSimple.create([localeSynchro, restSynchro]);\n\n    $jsonapi.addResource(schema, synchronizer);\n  })\n  .factory('SpaceshipModels', SpaceshipModels);\n\n  function SpaceshipModels(\n    $jsonapi\n  ) {\n    return $jsonapi.getResource('spaceshipModels');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n  .run(function(\n    $jsonapi,\n    AngularJsonAPISynchronizationLocal,\n    AngularJsonAPISynchronizationRest,\n    AngularJsonAPISynchronizerSimple,\n    apiURL\n  ) {\n    var schema = {\n      type: 'robots',\n      id: '',\n      attributes: {\n        nameFirst: {presence: true, length: {maximum: 20, minimum: 3}},\n        nameLast: {presence: true, length: {maximum: 20, minimum: 3}},\n        creationDate: {datetime: true},\n        pictureUrl: {presence: true}\n      },\n      relationships: {\n        location: {\n          included: true,\n          type: 'hasOne',\n          reflection: 'entity'\n        },\n        robotModel: {\n          included: true,\n          type: 'hasOne',\n        },\n        job: {\n          included: true,\n          type: 'hasOne',\n        },\n        laserGuns: {\n          included: true,\n          type: 'hasMany',\n          reflection: 'owner'\n        },\n        powerArmors: {\n          included: true,\n          type: 'hasMany',\n          reflection: 'owner'\n        },\n        spaceships: {\n          included: true,\n          type: 'hasMany',\n          reflection: 'pilot'\n        }\n      },\n      include: {\n        get: ['location.planet']\n      },\n      functions: {\n        toString: function() {\n          if (!this.data.attributes.nameFirst && !this.data.attributes.nameLast) {\n            return this.data.id;\n          }\n\n          return this.data.attributes.nameFirst + this.data.attributes.nameLast;\n        }\n      }\n    };\n\n    var localeSynchro = AngularJsonAPISynchronizationLocal.create('LocalStore synchronization', 'AngularJsonAPI');\n    var restSynchro = AngularJsonAPISynchronizationRest.create('Rest synchronization', apiURL + '/robots');\n    var synchronizer = AngularJsonAPISynchronizerSimple.create([localeSynchro, restSynchro]);\n\n    $jsonapi.addResource(schema, synchronizer);\n  })\n  .factory('Robots', Robots);\n\n  function Robots(\n    $jsonapi\n  ) {\n    return $jsonapi.getResource('robots');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n  .run(function(\n    $jsonapi,\n    AngularJsonAPISynchronizationLocal,\n    AngularJsonAPISynchronizationRest,\n    AngularJsonAPISynchronizerSimple,\n    apiURL\n  ) {\n    var schema = {\n      type: 'robotModels',\n      id: '',\n      attributes: {\n        name: {presence: true, length: {maximum: 20, minimum: 3}},\n        code: {presence: true, length: {maximum: 20, minimum: 3}}\n      },\n      relationships: {\n        robots: {\n          included: true,\n          type: 'hasMany'\n        }\n      },\n      functions: {\n        toString: function() {\n          if (!this.data.attributes.name) {\n            return this.data.id;\n          }\n\n          return this.data.attributes.name;\n        }\n      }\n    };\n\n    var localeSynchro = AngularJsonAPISynchronizationLocal.create('LocalStore synchronization', 'AngularJsonAPI');\n    var restSynchro = AngularJsonAPISynchronizationRest.create('Rest synchronization', apiURL + '/robotModels');\n    var synchronizer = AngularJsonAPISynchronizerSimple.create([localeSynchro, restSynchro]);\n\n    $jsonapi.addResource(schema, synchronizer);\n  })\n  .factory('RobotModels', RobotModels);\n\n  function RobotModels(\n    $jsonapi\n  ) {\n    return $jsonapi.getResource('robotModels');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n  .run(function(\n    $jsonapi,\n    AngularJsonAPISynchronizationLocal,\n    AngularJsonAPISynchronizationRest,\n    AngularJsonAPISynchronizerSimple,\n    apiURL\n  ) {\n    var schema = {\n      type: 'powerArmors',\n      id: '',\n      attributes: {\n        name: {presence: true, length: {maximum: 20, minimum: 3}},\n        durability: {presence: true, numericality: {onlyInteger: true}},\n        quality: {presence: true, numericality: {onlyInteger: true}},\n        armor: {presence: true, numericality: {onlyInteger: true}},\n        type: {presence: true, length: {maximum: 20, minimum: 3}},\n        rarity: {presence: true, length: {maximum: 20, minimum: 3}}\n      },\n      relationships: {\n        owner: {\n          included: true,\n          type: 'hasOne',\n          polymorphic: true\n        }\n      },\n      functions: {\n        toString: function() {\n          if (!this.data.attributes.name) {\n            return this.data.id;\n          }\n\n          return this.data.attributes.name;\n        }\n      }\n    };\n\n    var localeSynchro = AngularJsonAPISynchronizationLocal.create('LocalStore synchronization', 'AngularJsonAPI');\n    var restSynchro = AngularJsonAPISynchronizationRest.create('Rest synchronization', apiURL + '/powerArmors');\n    var synchronizer = AngularJsonAPISynchronizerSimple.create([localeSynchro, restSynchro]);\n\n    $jsonapi.addResource(schema, synchronizer);\n  })\n  .factory('PowerArmors', PowerArmors);\n\n  function PowerArmors(\n    $jsonapi\n  ) {\n    return $jsonapi.getResource('powerArmors');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n  .run(function(\n    $jsonapi,\n    AngularJsonAPISynchronizationLocal,\n    AngularJsonAPISynchronizationRest,\n    AngularJsonAPISynchronizerSimple,\n    apiURL\n  ) {\n    var schema = {\n      type: 'planets',\n      id: '',\n      attributes: {\n        name: {presence: true, length: {maximum: 20, minimum: 3}},\n        cordsX: {presence: true, numericality: {onlyInteger: true}},\n        cordsY: {presence: true, numericality: {onlyInteger: true}},\n        cordsZ: {presence: true, numericality: {onlyInteger: true}},\n        size: {presence: true, numericality: {onlyInteger: true}}\n      },\n      relationships: {\n        locations: {\n          included: true,\n          type: 'hasMany'\n        }\n      },\n      functions: {\n        toString: function() {\n          if (!this.data.attributes.name) {\n            return this.data.id;\n          }\n\n          return this.data.attributes.name;\n        }\n      }\n    };\n\n    var localeSynchro = AngularJsonAPISynchronizationLocal.create('LocalStore synchronization', 'AngularJsonAPI');\n    var restSynchro = AngularJsonAPISynchronizationRest.create('Rest synchronization', apiURL + '/planets');\n    var synchronizer = AngularJsonAPISynchronizerSimple.create([localeSynchro, restSynchro]);\n\n    $jsonapi.addResource(schema, synchronizer);\n  })\n  .factory('Planets', Planets);\n\n  function Planets(\n    $jsonapi\n  ) {\n    return $jsonapi.getResource('planets');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n  .run(function(\n    $jsonapi,\n    AngularJsonAPISynchronizationLocal,\n    AngularJsonAPISynchronizationRest,\n    AngularJsonAPISynchronizerSimple,\n    apiURL\n  ) {\n    var schema = {\n      type: 'locations',\n      id: '',\n      attributes: {\n        cordsX: {presence: true, numericality: {onlyInteger: true}},\n        cordsY: {presence: true, numericality: {onlyInteger: true}}\n      },\n      relationships: {\n        planet: {\n          included: true,\n          type: 'hasOne'\n        },\n        entity: {\n          included: true,\n          type: 'hasOne',\n          polymorphic: true,\n          reflection: 'location'\n        }\n      },\n      functions: {\n        toString: function() {\n          if (!this.relationships.planet || !this.relationships.planet.data.attributes.name) {\n            return this.data.id;\n          }\n\n          return this.relationships.planet.data.attributes.name;\n        }\n      }\n    };\n\n    var localeSynchro = AngularJsonAPISynchronizationLocal.create('LocalStore synchronization', 'AngularJsonAPI');\n    var restSynchro = AngularJsonAPISynchronizationRest.create('Rest synchronization', apiURL + '/locations');\n    var synchronizer = AngularJsonAPISynchronizerSimple.create([localeSynchro, restSynchro]);\n\n    $jsonapi.addResource(schema, synchronizer);\n  })\n  .factory('Locations', Locations);\n\n  function Locations(\n    $jsonapi\n  ) {\n    return $jsonapi.getResource('locations');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n  .run(function(\n    $jsonapi,\n    AngularJsonAPISynchronizationLocal,\n    AngularJsonAPISynchronizationRest,\n    AngularJsonAPISynchronizerSimple,\n    apiURL\n  ) {\n    var schema = {\n      type: 'laserGuns',\n      id: '',\n      attributes: {\n        name: {presence: true, length: {maximum: 20, minimum: 3}},\n        durability: {presence: true, numericality: {onlyInteger: true}},\n        quality: {presence: true, numericality: {onlyInteger: true}},\n        power: {presence: true, numericality: {onlyInteger: true}},\n        type: {presence: true, length: {maximum: 20, minimum: 3}},\n        rarity: {presence: true, length: {maximum: 20, minimum: 3}}\n      },\n      relationships: {\n        owner: {\n          included: true,\n          type: 'hasOne',\n          polymorphic: true\n        }\n      },\n      functions: {\n        toString: function() {\n          if (!this.data.attributes.name) {\n            return this.data.id;\n          }\n\n          return this.data.attributes.name;\n        }\n      }\n    };\n\n    var localeSynchro = AngularJsonAPISynchronizationLocal.create('LocalStore synchronization', 'AngularJsonAPI');\n    var restSynchro = AngularJsonAPISynchronizationRest.create('Rest synchronization', apiURL + '/laserGuns');\n    var synchronizer = AngularJsonAPISynchronizerSimple.create([localeSynchro, restSynchro]);\n\n    $jsonapi.addResource(schema, synchronizer);\n  })\n  .factory('Jobs', Jobs);\n\n  function Jobs(\n    $jsonapi\n  ) {\n    return $jsonapi.getResource('laserGuns');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n  .run(function(\n    $jsonapi,\n    AngularJsonAPISynchronizationLocal,\n    AngularJsonAPISynchronizationRest,\n    AngularJsonAPISynchronizerSimple,\n    apiURL\n  ) {\n    var schema = {\n      type: 'jobs',\n      id: '',\n      attributes: {\n        name: {presence: true, length: {maximum: 20, minimum: 3}},\n        salary: {presence: true, numericality: {onlyInteger: true}}\n      },\n      relationships: {\n        robots: {\n          included: true,\n          type: 'hasMany'\n        }\n      },\n      functions: {\n        toString: function() {\n          if (!this.data.attributes.name) {\n            return this.data.id;\n          }\n\n          return this.data.attributes.name;\n        }\n      }\n    };\n\n    var localeSynchro = AngularJsonAPISynchronizationLocal.create('LocalStore synchronization', 'AngularJsonAPI');\n    var restSynchro = AngularJsonAPISynchronizationRest.create('Rest synchronization', apiURL + '/jobs');\n    var synchronizer = AngularJsonAPISynchronizerSimple.create([localeSynchro, restSynchro]);\n\n    $jsonapi.addResource(schema, synchronizer);\n  })\n  .factory('Jobs', Jobs);\n\n  function Jobs(\n    $jsonapi\n  ) {\n    return $jsonapi.getResource('jobs');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .controller('RequestCtrl', RequestCtrl);\n\n  function RequestCtrl(\n  ) {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .controller('RequestGetCtrl', RequestGetCtrl);\n\n  function RequestGetCtrl(\n    $scope, object\n  ) {\n    $scope.object = object;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .controller('RequestAllCtrl', RequestAllCtrl);\n\n  function RequestAllCtrl(\n    $scope, collection\n  ) {\n    $scope.collection = collection;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .controller('FrameCtrl', frameCtrl);\n\n  function frameCtrl(\n    $jsonapi,\n    $scope\n  ) {\n    $scope.names = $jsonapi.listResources();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n    .run(logEvents);\n\n  function logEvents($rootScope, $jsonapi) {\n    var events = [\n      'resource:init',\n      'resource:clearCache',\n      'resource:initialize',\n      'object:add',\n      'object:update',\n      'object:refresh',\n      'object:remove',\n      'object:link',\n      'object:linkReflection',\n      'object:unlink',\n      'object:include',\n      'object:unlinkReflection',\n      'collection:fetch'\n    ];\n\n    var resources = $jsonapi.listResources();\n    var watchers = [];\n\n    angular.forEach(events, function(eventName) {\n      angular.forEach(resources, function(resourceName) {\n        logOnEvent(eventName, resourceName);\n      });\n    });\n\n    function logOnEvent(eventName, resource) {\n      var watcher = $rootScope.$on('angularJsonAPI:' + resource + ':' + eventName, function(event, status, object, response) {\n        // console.info(resource, eventName, status, object, response);\n      });\n\n      watchers.push(watcher);\n    }\n\n    $rootScope.$on('$destroy', clearWatchers);\n\n    function clearWatchers() {\n      angular.forEach(watchers, function(watcher) {\n        watcher();\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapiExample')\n  /* global _: false */\n    .constant('_', _)\n    .constant('apiURL', 'http://jsonapi-robot-wars.herokuapp.com')\n    ;\n})();\n\n(function() {\n  'use strict';\n  /* global $:false */\n\n  var app = angular.module('angularJsonapiExample');\n\n  $.each($.site.settings.modules, function(index, module) {\n    var fn = $.fn[module];\n    var name = 'ui' + module.charAt(0).toUpperCase() + module.substring(1);\n\n    /** @ngInject */\n    app.directive(name, ['$timeout', '_', '$rootScope', function($timeout, _, $rootScope) {\n      return {\n        restrict: 'A',\n        seModule: {\n          name: module,\n          fn: fn\n        },\n        scope: {\n          options: '&',\n          arguments: '=',\n          ngModel: '='\n        },\n        link: function(scope, iElement) {\n\n          if (!scope.options) {\n            scope.options = {};\n          }\n\n          scope.options.directive = scope;\n\n          scope.options.onChange = function(value) {\n            $timeout(function() {\n              scope.ngModel = value;\n            });\n          };\n\n          $timeout(function() {\n            var element = $(iElement)[module](_.clone(scope.options));\n            if (scope.arguments !== undefined) {\n              $(iElement)[module].apply(element, scope.arguments);\n            }\n          }, 300);\n\n          $rootScope.$on('semantic-ui:reload', function() {\n            $timeout(function() {\n              var element = $(iElement)[module](_.clone(scope.options));\n              if (scope.arguments !== undefined) {\n                $(iElement)[module].apply(element, scope.arguments);\n              }\n            }, 300);\n          });\n        }\n      };\n    }]);\n  });\n})();\n\nangular.module(\"angularJsonapiExample\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/footer/footer.html\",\"\");\n$templateCache.put(\"app/frame/frame.html\",\"<header class=\\\"ui container\\\"><div class=\\\"ui secondary pointing menu\\\"><a class=\\\"toc item\\\"><i class=\\\"sidebar icon\\\"></i></a> <a ng-repeat=\\\"name in names\\\" class=\\\"item\\\" ui-sref=\\\"frame.request.all({type: name})\\\" ui-sref-active=\\\"active\\\">{{name}}</a><div class=\\\"right item\\\"><a href=\\\"mailto:jakubrohleder@gmail.com?subject=Angular JsonAPI\\\"><i class=\\\"mail outline icon\\\"></i> Any questions? Contact me!</a></div></div><div class=\\\"ui divider hidden\\\"></div></header><main ui-view=\\\"\\\" class=\\\"ui container\\\"></main><footer></footer>\");\n$templateCache.put(\"app/frame/hello.html\",\"<div class=\\\"center aligned column\\\"><h1 class=\\\"ui icon header\\\">Angular-jsonapi showcase</h1><p>Go to one of the models in the menu and check out how this package works.</p><p>If you want to use it yourself check <a href=\\\"https://github.com/jakubrohleder/angular-jsonapi\\\">github readme</a> and <a href=\\\"https://github.com/jakubrohleder/angular-jsonapi/tree/master/demo/app\\\">source code</a> of this demo.</p></div>\");\n$templateCache.put(\"app/request/all.html\",\"<h2>All</h2><angular-jsonapi-collection data=\\\"collection\\\"></angular-jsonapi-collection>\");\n$templateCache.put(\"app/request/get.html\",\"<h2>Get</h2><p>{{object.toString()}}</p>\");\n$templateCache.put(\"app/sidebar/sidebar.html\",\"<div ui-sidebar=\\\"\\\" class=\\\"ui vertical inverted sidebar menu left\\\" arguments=\\\"[\\'attach events\\', \\'.toc.item\\']\\\"><a class=\\\"item logo\\\" ui-sref=\\\"frame.hello\\\" ui-sref-active=\\\"active\\\">Angular JSON API demo</a> <a ng-repeat=\\\"name in names\\\" class=\\\"item\\\" ui-sref=\\\"frame.request.all({type: name})\\\" ui-sref-active=\\\"active\\\">{{name}}</a></div>\");\n$templateCache.put(\"app/components/attribute-field/attribute-field.html\",\"<div class=\\\"field\\\" ng-class=\\\"{ error: object.errors.validation.hasErrors(key), success: !object.errors.validation.hasErrors(key) && object.form.data.attributes[key] !== object.data.attributes[key] }\\\"><label>{{key | toTitleCase}}</label> <input type=\\\"text\\\" name=\\\"{{key}}\\\" ng-model=\\\"object.form.data.attributes[key]\\\" ng-model-options=\\\"{ updateOn: \\'default blur\\', debounce: { \\'default\\': 500, \\'blur\\': 0 } }\\\" ng-change=\\\"object.form.validate(key)\\\"><div class=\\\"ui error message\\\" ng-show=\\\"object.errors.validation.hasErrors(key)\\\"><ul class=\\\"list\\\"><li ng-repeat=\\\"error in object.errors.validation.errors[key]\\\">{{error.message}}</li></ul></div></div>\");\n$templateCache.put(\"app/components/collection/collection.html\",\"<h3 class=\\\"h3\\\">{{collection.type}}</h3><small>Loading {{collection.loadingCount}}:{{collection.loading}}</small><div class=\\\"row\\\"><div class=\\\"ui mini icon input\\\"><input type=\\\"text\\\" placeholder=\\\"Object ID\\\" ng-model=\\\"getInput\\\"> <i class=\\\"search icon\\\"></i></div><button promise-button=\\\"\\\" class=\\\"ui button mini primary\\\" ng-click=\\\"collection.get(getInput)\\\">Get</button> <button promise-button=\\\"\\\" class=\\\"ui button mini green\\\" ng-click=\\\"collection.refresh()\\\">Refresh</button> <button class=\\\"ui button mini yellow\\\" ng-click=\\\"add()\\\">Add</button><div class=\\\"ui red basic mini right floated button\\\" ng-hide=\\\"collection.synchronized\\\">Synchronizing...</div><div class=\\\"ui basic mini right floated button\\\" ng-show=\\\"collection.synchronized\\\" ng-class=\\\"{ green: updateDiff <= 30, yellow: updateDiff > 30 && updateDiff < 240, red: updateDiff >= 240 }\\\">Synchronized {{updateDiff}} s. ago</div></div><div class=\\\"ui divider\\\"></div><error-message ng-show=\\\"collection.hasErrors()\\\" data=\\\"collection.errors\\\"></error-message><div ng-show=\\\"collection.error\\\" class=\\\"ui divider hidden\\\"></div><div class=\\\"collection\\\" ng-show=\\\"filteredObjects.length > 0\\\"><h3>New objects</h3><angular-jsonapi-object nested=\\\"false\\\" data=\\\"object\\\" ng-repeat=\\\"object in filteredObjects = (newObjects | filter: {saved: false})\\\"></angular-jsonapi-object></div><div class=\\\"collection\\\"><h3>All objects</h3><div ng-show=\\\"collection.pristine && collection.loading\\\" class=\\\"ui large active text loader\\\">Loading collection for the first time</div><div ng-show=\\\"collection.pristine && !collection.loading\\\" class=\\\"ui large active text loader\\\">Collection not synchronized, refresh it to fetch data</div><angular-jsonapi-object nested=\\\"false\\\" data=\\\"object\\\" ng-repeat=\\\"object in collection.data\\\"></angular-jsonapi-object><div class=\\\"ui basic segment fixed bottom\\\"><div class=\\\"ui black button\\\" ng-click=\\\"close()\\\">Close all models</div><div class=\\\"ui grey button\\\" ng-click=\\\"clear()\\\">Clear cache</div></div></div>\");\n$templateCache.put(\"app/components/error-message/error-list.html\",\"<div class=\\\"ui list\\\"><div class=\\\"item\\\" ng-repeat=\\\"errorManager in errors track by errorManager.name\\\" ng-show=\\\"errorManager.hasErrors()\\\"><i class=\\\"thumbs outline down icon\\\"></i><div class=\\\"content\\\"><div class=\\\"header\\\">{{errorManager.name}}</div><div class=\\\"description\\\">{{errorManager.description}}</div><div class=\\\"list\\\"><div class=\\\"item\\\" ng-repeat=\\\"(key, errors) in errorManager.errors\\\" ng-show=\\\"errorManager.hasErrors(key)\\\"><div class=\\\"content\\\"><div class=\\\"header\\\">{{key}}</div><div class=\\\"list\\\"><div class=\\\"item\\\" ng-repeat=\\\"error in errors\\\"><i class=\\\"warning icon\\\"></i><div class=\\\"content\\\"><div class=\\\"description\\\">{{error.message}}</div></div></div></div></div></div></div></div></div></div>\");\n$templateCache.put(\"app/components/error-message/error-message.html\",\"<div class=\\\"ui error message\\\"><div class=\\\"header\\\">There were some errors:</div><div class=\\\"ui divider\\\"></div><error-list data=\\\"errors\\\"></error-list></div>\");\n$templateCache.put(\"app/components/test-form/test-form-new.html\",\"<div><h3>New</h3><form name=\\\"form\\\"><div ng-repeat=\\\"(attribute, value) in object.form.data.attributes\\\" class=\\\"form-group\\\"><input ng-model-options=\\\"{ debounce: 100 }\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"{{attribute}}\\\" ng-model=\\\"object.form.data.attributes[attribute]\\\" placeholder=\\\"{{attribute}}\\\"> <span id=\\\"helpBlock\\\" ng-repeat=\\\"error in object.form.errors.validation[attribute]\\\" class=\\\"help-block\\\">{{error}}</span></div><button ng-click=\\\"object.form.save()\\\" class=\\\"btn btn-primary\\\">Add</button></form></div>\");\n$templateCache.put(\"app/components/test-form/test-form.html\",\"<div><br><small clip-copy=\\\"object.data.id\\\">Id: {{object.data.id}}</small> <button class=\\\"btn btn-default btn-xs\\\" clip-copy=\\\"object.data.id\\\">Copy ID</button><br><small>Updated {{updateDiff}} seconds from now</small><hr><div ng-init=\\\"collapsedEdit=true\\\" ng-click=\\\"collapsedEdit=!collapsedEdit\\\"><span class=\\\"h3\\\" style=\\\"margin-right:15px;\\\">Edit</span> <span ng-show=\\\"collapsedEdit\\\" class=\\\"glyphicon glyphicon-chevron-right\\\" aria-hidden=\\\"true\\\"></span> <span ng-hide=\\\"collapsedEdit\\\" class=\\\"glyphicon glyphicon-chevron-down\\\" aria-hidden=\\\"true\\\"></span></div><form collapse=\\\"collapsedEdit\\\"><br><div ng-repeat=\\\"(attribute, value) in object.form.data.attributes\\\" class=\\\"form-group\\\"><input ng-model-options=\\\"{ debounce: 100 }\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"{{attribute}}\\\" ng-model=\\\"object.form.data.attributes[attribute]\\\" placeholder=\\\"{{attribute}}\\\"> <span id=\\\"helpBlock\\\" ng-repeat=\\\"error in object.form.errors.validation[attribute]\\\" class=\\\"help-block\\\">{{error}}</span></div><button ng-click=\\\"object.form.save()\\\" class=\\\"btn btn-primary\\\">Update</button> <button ng-click=\\\"object.remove()\\\" class=\\\"btn btn-danger\\\">Remove</button> <button ng-click=\\\"object.refresh()\\\" class=\\\"btn btn-default\\\">Refresh</button></form><hr><div ng-init=\\\"collapsedLinks=false\\\" ng-click=\\\"collapsedLinks=!collapsedLinks\\\"><span class=\\\"h3\\\" style=\\\"margin-right:15px;\\\">Links</span> <span ng-show=\\\"collapsedLinks\\\" class=\\\"glyphicon glyphicon-chevron-right\\\" aria-hidden=\\\"true\\\"></span> <span ng-hide=\\\"collapsedLinks\\\" class=\\\"glyphicon glyphicon-chevron-down\\\" aria-hidden=\\\"true\\\"></span></div><div collapse=\\\"collapsedLinks\\\"><div ng-repeat=\\\"(link, value) in object.relationships\\\"><div ng-if=\\\"isArray(value)\\\"><h4>{{link}} hasMany</h4><div class=\\\"row\\\" ng-repeat=\\\"value in value\\\"><div class=\\\"col-md-12\\\"><p clip-copy=\\\"value.data.id\\\" class=\\\"pull-left\\\">{{value.toString()}}</p><button clip-copy=\\\"value.data.id\\\" class=\\\"btn btn-default btn-xs\\\">copy id</button> <button ng-click=\\\"object.removeLink(link, value)\\\" class=\\\"btn btn-danger btn-xs pull-right\\\">Remove</button></div></div></div><div ng-if=\\\"!isArray(value)\\\"><h4>{{link}} hasOne</h4><div ng-if=\\\"value\\\" class=\\\"row\\\"><div class=\\\"col-md-12\\\"><p clip-copy=\\\"value.data.id\\\" class=\\\"pull-left\\\">{{value.toString()}}</p><button clip-copy=\\\"value.data.id\\\" class=\\\"btn btn-default btn-xs\\\">copy id</button> <button ng-click=\\\"object.removeLink(link, value)\\\" class=\\\"btn btn-danger btn-xs pull-right\\\">Remove</button></div></div></div><form class=\\\"form-inline\\\"><div class=\\\"form-group\\\"><input type=\\\"text\\\" class=\\\"form-control input-sm\\\" ng-model=\\\"uuids[link]\\\" placeholder=\\\"uuid4\\\"></div><button class=\\\"btn btn-primary btn-sm pull-right\\\" ng-click=\\\"object.addLinkById(link, object.schema.relationships[link].model, uuids[link])\\\" type=\\\"button\\\">Add</button></form></div></div><hr><h3>Json</h3><json-formatter json=\\\"object\\\" open=\\\"0\\\"></json-formatter><hr></div>\");\n$templateCache.put(\"app/components/object/object-relationships.html\",\"<div class=\\\"ui padded segment\\\" ng-repeat=\\\"(relationshipName, relationshipCollection) in object.relationships\\\" ng-class=\\\"{red: form}\\\"><div class=\\\"ui stackable grid\\\"><div class=\\\"four wide column\\\" style=\\\"padding-left:0\\\"><h4 style=\\\"margin-bottom: 0;\\\" clip-copy=\\\"object.data.id\\\">{{object.schema.relationships[relationshipName].model}}</h4><small ng-show=\\\"object.schema.relationships[relationshipName].polymorphic\\\">polymorphic</small></div><div class=\\\"twelve wide column\\\"><button class=\\\"ui mini green left floated button\\\" ng-hide=\\\"object.schema.relationships[relationshipName].polymorphic\\\" ng-click=\\\"expression\\\">Create new {{object.schema.relationships[relationshipName].model}}</button><angular-jsonapi-search object=\\\"object\\\" key=\\\"relationshipName\\\" class=\\\"ui left floated\\\"></angular-jsonapi-search><button class=\\\"ui mini primary right floated button\\\" ng-hide=\\\"object.schema.relationships[relationshipName].polymorphic\\\" ui-sref=\\\"frame.request.all({type: object.schema.relationships[relationshipName].model})\\\">Go to {{object.schema.relationships[relationshipName].model}}</button></div></div><div class=\\\"ui divider hidden\\\"></div><div ng-show=\\\"object.new === true && form === false\\\"><strong>Relationship data locked for new object</strong><div>This object is new, you can only add relationships to its form.</div></div><div ng-show=\\\"object.new === false && relationshipCollection === undefined\\\"><strong>Relationship data undefined</strong><div>The relationship data hasn\\'t been fetched yet, refresh the model to fetch it.</div></div><div ng-show=\\\"object.new === false &&relationshipCollection === null\\\"><strong>Has one relationship null</strong><div>Set something as relationship object.</div></div><div ng-show=\\\"(object.new === false || (object.parent.new === true && form === true)) && isArray(relationshipCollection) && relationshipCollection.length === 0\\\"><strong>Has many relationship empty</strong><div>Add something to the relationship array.</div></div><angular-jsonapi-object data=\\\"relationshipObject\\\" nested=\\\"true\\\" unlink=\\\"object.unlink(relationshipName, relationshipObject)\\\" ng-if=\\\"relationshipCollection !== undefined && isArray(relationshipCollection)\\\" ng-repeat=\\\"relationshipObject in relationshipCollection\\\"></angular-jsonapi-object><angular-jsonapi-object data=\\\"relationshipCollection\\\" nested=\\\"true\\\" unlink=\\\"object.unlink(relationshipName, relationshipCollection)\\\" ng-if=\\\"relationshipCollection !== undefined && !isArray(relationshipCollection) && relationshipCollection !== null\\\"></angular-jsonapi-object></div>\");\n$templateCache.put(\"app/components/object/object.html\",\"<div class=\\\"ui padded segment\\\"><div class=\\\"ui stackable grid\\\"><div class=\\\"four wide column\\\" style=\\\"padding: 0;\\\"><small>Loading {{object.loadingCount}}:{{object.loading}} Saving {{object.savingCount}}:{{object.saving}}</small><h4 style=\\\"margin-bottom: 0; margin-top: 0;\\\" clip-copy=\\\"object.data.id\\\">{{object.toString()}}</h4><small>{{object.data.type}}:{{object.data.id}}</small></div><div class=\\\"twelve wide column\\\"><button class=\\\"ui mini button\\\" ng-init=\\\"showMore = $parent.$first && !nested\\\" ng-click=\\\"showMore = !showMore\\\" ng-class=\\\"{yellow: showMore, olive: !showMore, disabled: object.removed}\\\">Show more</button> <button ng-class=\\\"{disabled: object.removed}\\\" class=\\\"ui primary mini button\\\" clip-copy=\\\"object.data.id\\\">Copy ID</button> <button promise-button=\\\"\\\" ng-class=\\\"{disabled: object.removed}\\\" class=\\\"ui green mini button\\\" ng-click=\\\"object.refresh()\\\">Refresh</button> <button promise-button=\\\"\\\" ng-class=\\\"{disabled: object.removed}\\\" class=\\\"ui orange mini button\\\" ng-show=\\\"nested\\\" ng-click=\\\"unlink()\\\">Unlink</button> <button promise-button=\\\"\\\" ng-class=\\\"{disabled: object.removed}\\\" class=\\\"ui red mini button\\\" ng-click=\\\"object.remove()\\\" ng-hide=\\\"object.removed\\\">Remove</button> <button promise-button=\\\"\\\" ng-class=\\\"{red: !object.stable, green: object.stable}\\\" class=\\\"ui mini basic button\\\">Stable</button> <button promise-button=\\\"\\\" ng-class=\\\"{red: !object.new, green: object.new}\\\" class=\\\"ui mini basic button\\\">New</button><div class=\\\"ui red basic mini right floated button\\\" ng-hide=\\\"object.synchronized\\\">Not synchronized</div><div class=\\\"ui basic green mini right floated button\\\" ng-if=\\\"!showMore\\\" ng-show=\\\"object.synchronized\\\">Synchronized</div><div class=\\\"ui basic mini right floated button\\\" ng-if=\\\"showMore\\\" ng-show=\\\"object.synchronized\\\" ng-class=\\\"{ green: updateDiff <= 30, yellow: updateDiff > 30 && updateDiff < 240, red: updateDiff >= 240 }\\\">Synchronized {{updateDiff}} s. ago</div></div></div><div ng-if=\\\"showMore\\\"><div class=\\\"ui divider hidden\\\"></div><div ng-show=\\\"object.hasErrors()\\\"><error-message data=\\\"object.errors\\\"></error-message><div class=\\\"ui divider hidden\\\"></div></div><div class=\\\"ui stackable grid\\\"><div class=\\\"eight wide column\\\"><div class=\\\"ui segment\\\"><h4>Data</h4><div class=\\\"ui basic mini button\\\" style=\\\"position: absolute; top: 10px; right: 10px;\\\" ng-class=\\\"{purple: !showFormRelationships}\\\" ng-click=\\\"showFormRelationships = !showFormRelationships\\\">Show relationships</div><div class=\\\"ui list\\\"><div class=\\\"item\\\" ng-repeat=\\\"(attributeName, attributeValue) in object.data.attributes\\\"><div class=\\\"content\\\"><div class=\\\"header\\\">{{attributeValue}}</div><div class=\\\"description\\\">{{attributeName | toTitleCase}}</div></div></div><div class=\\\"item\\\"><div class=\\\"content\\\"><div class=\\\"header\\\">Relationships</div><div class=\\\"description\\\"><json-formatter json=\\\"object.data.relationships\\\" open=\\\"0\\\"></json-formatter></div></div></div></div></div></div><div class=\\\"eight wide column\\\"><div class=\\\"ui segment\\\" ng-class=\\\"{loading: !object.synchronized && !object.new}\\\"><h4>Form</h4><div class=\\\"ui basic mini button\\\" style=\\\"position: absolute; top: 10px; right: 10px;\\\" ng-class=\\\"{purple: showFormRelationships}\\\" ng-click=\\\"showFormRelationships = !showFormRelationships\\\">Show relationships</div><form class=\\\"ui small form\\\" ng-class=\\\"{error: object.error}\\\"><div attribute-field=\\\"\\\" key=\\\"attributeKey\\\" object=\\\"object\\\" ng-repeat=\\\"(attributeKey, attributeValue) in object.form.data.attributes\\\"></div><div class=\\\"ui divider hidden\\\"></div><button promise-button=\\\"\\\" ng-class=\\\"{disabled: object.removed}\\\" class=\\\"ui blue mini button\\\" ng-click=\\\"object.save()\\\">Save</button> <button promise-button=\\\"\\\" ng-class=\\\"{disabled: object.removed}\\\" class=\\\"ui red mini button\\\" ng-click=\\\"object.reset()\\\">Reset</button></form></div></div></div><div class=\\\"ui divider hidden\\\"></div><angular-jsonapi-object-relationships ng-hide=\\\"showFormRelationships\\\" data=\\\"object\\\"></angular-jsonapi-object-relationships><angular-jsonapi-object-relationships ng-show=\\\"showFormRelationships\\\" data=\\\"object.form\\\"></angular-jsonapi-object-relationships></div></div><div ng-show=\\\"showMore\\\" class=\\\"ui divider hidden\\\"></div>\");\n$templateCache.put(\"app/components/search/search-polymorphic.html\",\"<div class=\\\"ui category search focus\\\"><div class=\\\"ui mini left icon input\\\" ng-class=\\\"{loading: loading, error: error, \\'right action\\': show}\\\"><input ng-focus=\\\"showResults()\\\" ng-model=\\\"input\\\" placeholder=\\\"Add {{object.schema.relationships[key].model}}\\\" autocomplete=\\\"off\\\" ng-disabled=\\\"loading\\\"> <i class=\\\"plus icon\\\"></i> <button class=\\\"ui red mini icon button\\\" ng-show=\\\"show\\\" ng-focus=\\\"hideResults()\\\"><i class=\\\"remove icon\\\"></i></button></div><div class=\\\"ui left pointing red basic label\\\" ng-show=\\\"error\\\">{{errorText}}</div><div class=\\\"results\\\" ng-show=\\\"show\\\"><div class=\\\"category\\\" ng-repeat=\\\"(name, collection) in filteredCollections = (collections | angularJsonapiSearchCollection : input)\\\"><div class=\\\"name\\\" ng-click=\\\"setInput(\\'\\')\\\">{{name}}</div><a class=\\\"result\\\" ng-repeat=\\\"object in filteredCollection = (collection | angularJsonapiSearchObject : input : object.relationships[key] : true)\\\" ng-click=\\\"addLink(object)\\\"><div class=\\\"content\\\"><div class=\\\"title\\\">{{object.toString()}}</div><div class=\\\"description\\\">{{object.data.id}}</div></div></a> <a class=\\\"result\\\" ng-show=\\\"filteredCollection.length === 0\\\" ng-click=\\\"setInput(name)\\\"><div class=\\\"content\\\"><div class=\\\"title\\\">{{collection.length}} objects</div><div class=\\\"description\\\">Type full name of model to unroll or typeahead with new word</div></div></a></div><div class=\\\"message empty\\\" ng-show=\\\"isEmpty(filteredCollections)\\\"><div class=\\\"header\\\">No Results</div><div class=\\\"description\\\">Your search returned no results</div></div></div></div>\");\n$templateCache.put(\"app/components/search/search.html\",\"<div class=\\\"ui category search focus\\\"><div class=\\\"ui mini left icon input\\\" ng-class=\\\"{loading: loading, error: error, \\'right action\\': show}\\\"><input ng-focus=\\\"showResults()\\\" ng-model=\\\"input\\\" placeholder=\\\"Add {{object.schema.relationships[key].model}}\\\" autocomplete=\\\"off\\\" ng-disabled=\\\"loading || object.relationships[key] === undefined || object.saved === false\\\"> <i class=\\\"plus icon\\\"></i> <button class=\\\"ui red mini icon button\\\" ng-show=\\\"show\\\" ng-focus=\\\"hideResults()\\\"><i class=\\\"remove icon\\\"></i></button></div><div class=\\\"ui left pointing red basic label\\\" ng-show=\\\"error\\\">{{errorText}}</div><div class=\\\"results\\\" ng-show=\\\"show\\\"><div class=\\\"category\\\"><div class=\\\"name\\\" ng-click=\\\"setInput(\\'\\')\\\">{{model}}</div><a class=\\\"result\\\" ng-repeat=\\\"object in filteredCollection = (collection | angularJsonapiSearchObject : input : object.relationships[key] : false)\\\" ng-click=\\\"addLink(object)\\\"><div class=\\\"content\\\"><div class=\\\"title\\\">{{object.toString()}}</div><div class=\\\"description\\\">{{object.data.id}}</div></div></a> <a class=\\\"result\\\" ng-show=\\\"filteredCollection.length === 0\\\" ng-click=\\\"setInput(model)\\\"><div class=\\\"content\\\"><div class=\\\"title\\\">{{collection.length}} objects</div><div class=\\\"description\\\">Type full name of model to unroll or typeahead with new word</div></div></a> <a class=\\\"result\\\" ng-show=\\\"filteredCollection === undefined\\\" ng-click=\\\"getIndex(model)\\\"><div class=\\\"content\\\"><div class=\\\"title\\\">Not synchronized</div><div class=\\\"description\\\">These collection hasn\\'t been synchronized yet by ALL request, click to do it.</div></div></a></div></div></div>\");}]);"],"sourceRoot":"/source/"}