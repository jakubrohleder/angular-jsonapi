{"version":3,"sources":["/source/sources/parse/source-parse.module.js","/source/sources/parse/source-parse.factory.js","angular-jsonapi.min.js","/source/sources/parse/source-parse.decorator.js","/source/sources/rest/source-rest.module.js","/source/sources/rest/source-rest.factory.js","/source/sources/rest/source-rest.decorator.js","/source/sources/local/source-local.module.js","/source/sources/local/source-local.factory.js","/source/sources/local/source-local.decorator.js","/source/jsonapi.module.js","/source/model/model-linker/model-linker.js","/source/resource/resource-cache/resource-cache.factory.js","/source/model/model-form/model-form.factory.js","/source/model/abstract-model/abstract-model.js","/source/errors/validation-error/validation-error.factory.js","/source/errors/source-error/source-error.factory.js","/source/errors/errors-manager/errors-manager.factory.js","/source/utils/named-function.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/sources/source-prototype.js","/source/synchronizers/synchronizer-simple.factory.js","/source/synchronizers/synchronizer-prototype.js","/source/schema/schema.factory.js","/source/schema/schema-link.factory.js","/source/resource/resource.factory.js","/source/model/model-factory.factory.js","/source/collection/collection.factory.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","Parse","AngularJsonAPISourceParseWrapper","AngularJsonAPIModelSourceError","AngularJsonAPISourcePrototype","AngularJsonAPIModelLinkerService","pluralize","$log","$q","AngularJsonAPISourceParseFactory","name","table","AngularJsonAPISourceParse","all","config","query","Query","_this","ParseObject","undefined","params","limit","forEach","filter","equalTo","key","value","find","then","resolveParse","rejectParse","bind","get","object","data","id","remove","set","destroy","update","toParseObject","save","parseObject","form","attributes","attribute","schema","relationships","relationship","type","charAt","toUpperCase","slice","parsePointer","Object","extend","fromParseObject","synchronizer","resource","model","response","isArray","elem","isObject","resolve","action","error","reject","this","toLowerCase","apply","arguments","synchronization","initialize","appId","jsKey","prototype","create","constructor","$inject","factory","provide","$provide","decorator","$delegate","$jsonapi","sourceLocal","AngularJsonAPISourceRestWrapper","toKebabCase","$http","AngularJsonAPISourceRestFactory","url","AngularJsonAPISourceRest","method","headers","encodeParams","resolveHttp","rejectHttp","unlink","deferred","defer","removed","target","promise","link","errors","status","statusText","toLinkData","toJson","add","rejectServerOffline","rejectNoConnection","Accept","Content-Type","encodeValue","argument","join","encodedParams","paramValue","paramKey","paramInnerValue","paramInnerKey","decodeParams","decodedParams","objectKeyStart","indexOf","split","objectKey","substr","objectElementKey","sourceRest","AngularJsonAPISourceLocalWrapper","$window","AngularJsonAPISourceLocalFactory","prefix","AngularJsonAPISourceLocal","init","localStorage","getItem","clear","size","list","max","objectMaxKey","fraction","removeItem","updateStorage","cache","json","length","setItem","keys","reduce","m","k","__updateStorage","begin","finish","validate","oneWay","polymorphic","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","push","debug","reset","linkData","index","splice","newValue","array","item","i","service","AngularJsonAPIResourceCacheWrapper","uuid4","AngularJsonAPIResourceCacheFactory","AngularJsonAPIResourceCache","indexIds","addOrUpdate","validatedData","updatedAt","modelFactory","initialization","fromJson","collection","new","synchronized","stable","pristine","objectData","hasErrors","filterParams","valid","constraint","map","setIndexIds","element","isString","revertRemove","clearRemoved","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","copy","auto","validator","validation","errorsMap","attributesWrapper","constraintsWrapper","async","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","loading","saving","Date","now","loadingCount","savingCount","__setData","synchronize","notify","$emit","concat","meta","__decrementSavingCounter","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","__proccesResults","allSettled","unlinkAll","removeLink","linksObj","removeReflectionLink","resolveReflection","targets","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","unlinkOne","getResource","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","context","Error","AngularJsonAPIModelSourceErrorWrapper","SourceErrorFactory","source","code","SourceError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","namedFunction","fn","Function","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","promises","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","AngularJsonAPISourcePrototypeWrapper","allHooks","state","beginHooks","beforeHooks","synchronizationHooks","afterHooks","finishHooks","options","hookName","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","sources","AngularJsonAPISynchronizerSimple","step","resolved","hook","rejected","noop","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","AngularJsonAPISchema","include","generate","isNumber","identity","linkSchema","linkName","linkSchemaObj","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","AngularJsonAPIResourceWrapper","AngularJsonAPIModel","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","fetch","relationshipSchema","relationshipName","clearCache","createModelFactory","schemaObj","isNew","Model","constructorName","functions","metaFunction","metaFunctionName","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","clearWatchers","onObjectRemove","onFactoryClear","onObjectAdd","$on","jsonapiProvider","jsonapiFactory","addResource","memory","names","allResources","listResources","addValidator","warn","objects","synchronizerSimple","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"CAAA,WACE,YAGAA,SAAQC,OAAO,yBAA0B,oBACtCC,SAAS,QAASC,UCLvB,WACE,YAKA,SAASC,GACPC,EACAC,EACAC,EACAC,EACAL,EACAM,EACAC,GAWA,QAASC,GAAiCC,EAAMC,GAC9C,MAAO,IAAIC,GAA0BF,EAAMC,GAG7C,QAASC,GAA0BF,EAAMC,GAevC,QAASE,GAAIC,GACX,GAAIC,GAAQ,GAAId,GAAMe,MAAMC,EAAMC,YAUlC,OAR4BC,UAAxBL,EAAOM,OAAOC,OAChBN,EAAMM,MAAMP,EAAOM,OAAOC,OAG5BvB,QAAQwB,QAAQR,EAAOM,OAAOG,OAAQ,SAASA,GAC7CR,EAAMS,QAAQD,EAAOE,IAAKF,EAAOG,SAG5BX,EAAMY,OAAOC,KAAKC,EAAcC,EAAYC,KAAK,KAAM,QAGhE,QAASC,GAAIlB,GACX,GAAIC,GAAQ,GAAId,GAAMe,MAAMC,EAAMC,YAClC,OAAOH,GAAMiB,IAAIlB,EAAOmB,OAAOC,KAAKC,IAAIP,KAAKC,EAAcC,EAAYC,KAAK,KAAM,QAGpF,QAASK,GAAOtB,GACd,GAAImB,GAAS,GAAIhB,GAAMC,WAEvB,OADAe,GAAOI,IAAI,KAAMvB,EAAOmB,OAAOC,KAAKC,IAC7BF,EAAOK,UAAUV,KAAKC,EAAcC,EAAYC,KAAK,KAAM,WAGpE,QAASQ,GAAOzB,GACd,GAAImB,GAASO,EAAc1B,EAAOmB,OAClC,OAAOA,GAAOQ,KAAK,MAAMb,KAAKC,EAAcC,EAAYC,KAAK,KAAM,WAGrE,QAASS,GAAcP,GACrB,GAAIS,GAAc,GAAIzB,GAAMC,WAiB5B,OAhBApB,SAAQwB,QAAQW,EAAOU,KAAKT,KAAKU,WAAY,SAASC,EAAWpB,GAC/DiB,EAAYL,IAAIZ,EAAKoB,KAGvB/C,QAAQwB,QAAQW,EAAOa,OAAOC,cAAe,SAASC,EAAcvB,GAClE,GAA0B,WAAtBuB,EAAaC,MACiC,OAA7ChB,EAAOU,KAAKT,KAAKa,cAActB,GAAKS,MACSf,SAA7Cc,EAAOU,KAAKT,KAAKa,cAActB,GAAKS,KACvC,CACA,GAAIvB,GAAQL,EAAUmB,EAAK,GAAGyB,OAAO,GAAGC,cAAgB7C,EAAUmB,EAAK,GAAG2B,MAAM,GAC5EC,EAAe,IAAKpD,EAAMqD,OAAOC,OAAO5C,GAC5C0C,GAAahB,IAAI,KAAMJ,EAAOU,KAAKT,KAAKa,cAActB,GAAKS,KAAKC,IAChEO,EAAYL,IAAIZ,EAAK4B,MAIlBX,EAGT,QAASc,GAAgBvB,GACvB,GAAIc,GAAgB9B,EAAMwC,aAAaC,SAASZ,OAAOC,aAcvD,OAbAd,GAAOgB,KAAOhC,EAAMgC,KACpBhB,EAAOc,cAAgBd,EAAOc,kBAC9BjD,QAAQwB,QAAQyB,EAAe,SAASC,EAAcvB,GAChDQ,EAAOW,WAAWnB,IAA8B,WAAtBuB,EAAaC,OACzChB,EAAOc,cAActB,IACnBS,MACEe,KAAMD,EAAaW,MACnBxB,GAAIF,EAAOW,WAAWnB,GAAKU,QAM5BF,EAGT,QAASJ,GAAa+B,GASpB,MARI9D,SAAQ+D,QAAQD,GAClB9D,QAAQwB,QAAQsC,EAAU,SAASE,EAAMrC,GACvCmC,EAASnC,GAAO+B,EAAgBM,KAEzBhE,QAAQiE,SAASH,KAC1BA,EAAWJ,EAAgBI,IAGtBpD,EAAGwD,SACR9B,KAAM0B,IAIV,QAAS9B,GAAYmC,EAAQL,GAE3B,MADArD,GAAK2D,MAAM,kBAAmBD,EAAQL,GAC/BpD,EAAG2D,OAAOP,GAnGnB,GAAI3C,GAAQmD,IAEZnD,GAAMC,YAAcjB,EAAMqD,OAAOC,OAAO5C,GACxCM,EAAMgC,KAAO3C,EAAUK,GAAOuC,OAAO,GAAGmB,cAAgB/D,EAAUK,GAAOyC,MAAM,GAE/EhD,EAA8BkE,MAAMrD,EAAOsD,WAE3CtD,EAAMuD,gBAAgB,SAAUpC,GAChCnB,EAAMuD,gBAAgB,SAAUjC,GAChCtB,EAAMuD,gBAAgB,MAAOjC,GAC7BtB,EAAMuD,gBAAgB,MAAO3D,GAC7BI,EAAMuD,gBAAgB,MAAOxC,GAC7Bf,EAAMuD,gBAAgB,UAAWxC,GA2FnC,QAASyC,GAAWC,EAAOC,GACzB1E,EAAMwE,WAAWC,EAAOC,GAjH1B,MAJA/D,GAA0BgE,UAAYtB,OAAOuB,OAAOzE,EAA8BwE,WAClFhE,EAA0BgE,UAAUE,YAAclE,EAClDA,EAA0BgE,UAAUH,WAAaA,GAG/CI,OAAQpE,GCVZP,EAAiC6E,SAAW,iCAAkC,gCAAiC,mCAAoC,YAAa,QAAS,OAAQ,MDRjLjF,QAAQC,OAAO,yBACdiF,QAAQ,4BAA6B9E,MEJxC,WACE,YAKA,SAAS+E,GAAQC,GACfA,EAASC,UAAU,WAAYA,GAGjC,QAASA,GAAUC,EAAWxE,GAC5B,GAAIyE,GAAWD,CAIf,OAFAC,GAASC,YAAc1E,EAEhByE,EDuITJ,EAAQF,SAAW,YACnBI,EAAUJ,SAAW,YAAa,6BCpJlCjF,QAAQC,OAAO,yBACde,OAAOmE,MCJV,WACE,YAEAnF,SAAQC,OAAO,wBAAyB,uBCH1C,WACE,YAKA,SAASwF,GACPpF,EACAC,EACAC,EACAmF,EACAhF,EACAiF,GAYA,QAASC,GAAgChF,EAAMiF,GAC7C,MAAO,IAAIC,GAAyBlF,EAAMiF,GAG5C,QAASC,GAAyBlF,EAAMiF,GAkBtC,QAAS9E,GAAIC,GACX,MAAO2E,IACLI,OAAQ,MACRC,QAASA,EACTH,IAAKA,EACLvE,OAAQ2E,EAAajF,EAAOM,UAC3BQ,KAAKoE,EAAaC,EAAWlE,KAAK,KAAM,QAG7C,QAASC,GAAIlB,GACX,MAAO2E,IACLI,OAAQ,MACRC,QAASA,EACTH,IAAKA,EAAM,IAAM7E,EAAOmB,OAAOC,KAAKC,GACpCf,OAAQ2E,EAAajF,EAAOM,UAC3BQ,KAAKoE,EAAaC,EAAWlE,KAAK,KAAM,QAG7C,QAASK,GAAOtB,GACd,MAAO2E,IACLI,OAAQ,SACRC,QAASA,EACTH,IAAKA,EAAM,IAAM7E,EAAOmB,OAAOC,KAAKC,KACnCP,KAAKoE,EAAaC,EAAWlE,KAAK,KAAM,WAG7C,QAASmE,GAAOpF,GACd,GAAIqF,GAAW3F,EAAG4F,QACdtD,EAAShC,EAAOmB,OAAOa,OAAOC,cAAcjC,EAAOW,IA6BvD,OA3BIX,GAAOmB,OAAOoE,WAAY,EAC5BF,EAAShC,OAAOhE,EAA+B0E,OAAO,0BAA2B5D,EAAO,EAAG,WAChEE,SAAlBL,EAAOwF,QAAkDnF,SAA1BL,EAAOwF,OAAOpE,KAAKC,GAC3DgE,EAAShC,OAAOhE,EAA+B0E,OAAO,mDAAqD5D,EAAO,EAAG,WAC5F,WAAhB6B,EAAOG,KAChBwC,GACEI,OAAQ,SACRC,QAASA,EACTH,IAAKA,EAAM,IAAM7E,EAAOmB,OAAOC,KAAKC,GAAK,kBAAoBrB,EAAOW,MACnEG,KAAKoE,EAAaC,EAAWlE,KAAK,KAAM,QAAQH,KAAKuE,EAASnC,QAASmC,EAAShC,QAC1D,YAAhBrB,EAAOG,OACM9B,SAAlBL,EAAOwF,OACTb,GACEI,OAAQ,MACRC,QAASA,EACT5D,MAAOA,SACPyD,IAAKA,EAAM,IAAM7E,EAAOmB,OAAOC,KAAKC,GAAK,kBAAoBrB,EAAOW,MACnEG,KAAKoE,EAAaC,EAAWlE,KAAK,KAAM,WAAWH,KAAKuE,EAASnC,QAASmC,EAAShC,QAEtFsB,GACEI,OAAQ,SACRC,QAASA,EACTH,IAAKA,EAAM,IAAM7E,EAAOmB,OAAOC,KAAKC,GAAK,kBAAoBrB,EAAOW,IAAM,IAAMX,EAAOwF,OAAOpE,KAAKC,KAClGP,KAAKoE,EAAaC,EAAWlE,KAAK,KAAM,WAAWH,KAAKuE,EAASnC,QAASmC,EAAShC,SAInFgC,EAASI,QAGlB,QAASC,GAAK1F,GACZ,GAAIqF,GAAW3F,EAAG4F,QACdtD,EAAShC,EAAOmB,OAAOa,OAAOC,cAAcjC,EAAOW,IAsBvD,OApBIX,GAAOmB,OAAOoE,WAAY,EAC5BF,EAAShC,QAAQsC,SAAUC,OAAQ,EAAGC,WAAY,8BACvBxF,SAAlBL,EAAOwF,QAAkDnF,SAA1BL,EAAOwF,OAAOpE,KAAKC,GAC3DgE,EAAShC,QAAQsC,SAAUC,OAAQ,EAAGC,WAAY,qDACzB,WAAhB7D,EAAOG,KAChBwC,GACEI,OAAQ,MACRC,QAASA,EACT5D,MAAOA,KAAM7B,EAAiCuG,WAAW9F,EAAOwF,SAChEX,IAAKA,EAAM,IAAM7E,EAAOmB,OAAOC,KAAKC,GAAK,kBAAoBrB,EAAOW,MACnEG,KAAKoE,EAAaC,EAAWlE,KAAK,KAAM,SAASH,KAAKuE,EAASnC,QAASmC,EAAShC,QAC3D,YAAhBrB,EAAOG,MAChBwC,GACEI,OAAQ,OACRC,QAASA,EACT5D,MAAOA,MAAO7B,EAAiCuG,WAAW9F,EAAOwF,UACjEX,IAAKA,EAAM,IAAM7E,EAAOmB,OAAOC,KAAKC,GAAK,kBAAoBrB,EAAOW,MACnEG,KAAKoE,EAAaC,EAAWlE,KAAK,KAAM,SAASH,KAAKuE,EAASnC,QAASmC,EAAShC,QAG/EgC,EAASI,QAGlB,QAAShE,GAAOzB,GACd,MAAO2E,IACLI,OAAQ,MACRC,QAASA,EACTH,IAAKA,EAAM,IAAM7E,EAAOmB,OAAOC,KAAKC,GACpCD,KAAMpB,EAAOmB,OAAOU,KAAKkE,WACxBjF,KAAKoE,EAAaC,EAAWlE,KAAK,KAAM,WAG7C,QAAS+E,GAAIhG,GACX,MAAO2E,IACLI,OAAQ,OACRC,QAASA,EACTH,IAAKA,EACLzD,KAAMpB,EAAOmB,OAAOU,KAAKkE,WACxBjF,KAAKoE,EAAaC,EAAWlE,KAAK,KAAM,QAG7C,QAASiE,GAAYpC,GACnB,MAAOpD,GAAGwD,QAAQJ,EAAS1B,MAG7B,QAAS+D,GAAWhC,EAAQL,GAc1B,QAASmD,GAAoBnD,GAC3BuC,EAAShC,OAAOhE,EAA+B0E,OAAO,oBAAqB5D,EAAO2C,EAAS8C,OAAQzC,IAGrG,QAAS+C,KACPb,EAAShC,OAAOhE,EAA+B0E,OAAO,yBAA0B5D,EAAO2C,EAAS8C,OAAQzC,IAlB1G,GAAIkC,GAAW3F,EAAG4F,OAWlB,OATwB,KAApBxC,EAAS8C,OACXjB,GACEI,OAAQ,MACRF,IAAK,0DACJ/D,KAAKmF,EAAqBC,GAE7Bb,EAAShC,OAAOhE,EAA+B0E,OAAOjB,EAAS+C,WAAY1F,EAAO2C,EAAS8C,OAAQzC,IAG9FkC,EAASI,QA1IlB,GAAItF,GAAQmD,KACR0B,GACFmB,OAAU,2BACVC,eAAgB,2BAGlB9G,GAA8BkE,MAAMrD,EAAOsD,WAE3CtD,EAAMuD,gBAAgB,SAAUpC,GAChCnB,EAAMuD,gBAAgB,SAAU0B,GAChCjF,EAAMuD,gBAAgB,OAAQgC,GAC9BvF,EAAMuD,gBAAgB,SAAUjC,GAChCtB,EAAMuD,gBAAgB,MAAOsC,GAC7B7F,EAAMuD,gBAAgB,MAAO3D,GAC7BI,EAAMuD,gBAAgB,MAAOxC,GAC7Bf,EAAMuD,gBAAgB,UAAWxC,GAuInC,QAAS+D,GAAa3E,GAqBpB,QAAS+F,GAAYC,GACnB,MAAItH,SAAQ+D,QAAQuD,GACXA,EAASC,KAAK,KAEdD,EAxBX,GAAIE,KAEJ,OAAenG,UAAXC,MAIJtB,QAAQwB,QAAQF,EAAQ,SAASmG,EAAYC,GACvC1H,QAAQ+D,QAAQ0D,GAClBD,EAAcE,GAAYL,EAAYI,GAC7BzH,QAAQiE,SAASwD,GAC1BzH,QAAQwB,QAAQiG,EAAY,SAASE,EAAiBC,GACpDJ,EAAcE,EAAW,IAAME,EAAgB,KAAOP,EAAYM,KAGpEH,EAAcE,GAAYD,IAIvBD,GAWT,QAASK,GAAavG,GACpB,GAAIwG,KAiBJ,OAfA9H,SAAQwB,QAAQF,EAAQ,SAASM,EAAOD,GACtC,GAAIoG,GAAiBpG,EAAIqG,QAAQ,IAGjC,IAFApG,EAAQA,EAAMqG,MAAM,KAEhBF,EAAiB,GAAI,CACvB,GAAIG,GAAYvG,EAAIwG,OAAO,EAAGJ,GAC1BK,EAAmBzG,EAAIwG,OAAOJ,EAAiB,EAAGpG,EAAIqG,QAAQ,KAAOD,EAAiB,EAE1FD,GAAcI,GAAaJ,EAAcI,OACzCJ,EAAcI,GAAWE,GAAoBxG,MAE7CkG,GAAcnG,GAAOC,IAIlBkG,EAjNT,MAHAhC,GAAyBhB,UAAYtB,OAAOuB,OAAOzE,EAA8BwE,WACjFgB,EAAyBhB,UAAUE,YAAcc,GAG/Cf,OAAQa,EACRK,aAAcA,EACd4B,aAAcA,GH6JlBpC,EAAgCR,SAAW,iCAAkC,gCAAiC,mCAAoC,cAAe,KAAM,SG/KvKjF,QAAQC,OAAO,wBACdiF,QAAQ,2BAA4BO,MCJvC,WACE,YAKA,SAASN,GAAQC,GACfA,EAASC,UAAU,WAAYA,GAGjC,QAASA,GAAUC,EAAWQ,GAC5B,GAAIP,GAAWD,CAIf,OAFAC,GAAS8C,WAAavC,EAEfP,EJ4YTJ,EAAQF,SAAW,YACnBI,EAAUJ,SAAW,YAAa,4BIzZlCjF,QAAQC,OAAO,wBACde,OAAOmE,MCJV,WACE,YAEAnF,SAAQC,OAAO,yBAA0B,uBCH3C,WACE,YAKA,SAASqI,GACPhI,EACAiI,EACA7H,GAiBA,QAAS8H,GAAiC5H,EAAM6H,GAC9C,MAAO,IAAIC,GAA0B9H,EAAM6H,GAG7C,QAASC,GAA0B9H,EAAM6H,GA2BvC,QAASE,KACP,GAAIxF,GAAOhC,EAAMwC,aAAaC,SAASZ,OAAOG,IAC9C,OAAOzC,GAAGwD,QAAQqE,EAAQK,aAAaC,QAAQJ,EAAS,IAAMtF,IAGhE,QAAS2F,KACP,GAAI3F,GAAOhC,EAAMwC,aAAaC,SAASZ,OAAOG,KAC1CxB,EAAM8G,EAAS,IAAMtF,CAEzB4F,GAAKhI,KAAOgI,EAAKC,KAAKrH,SACfoH,GAAKC,KAAKrH,GACjBoH,EAAKE,IAAMC,EAAaH,EAAKC,MAC7BD,EAAKI,SAAWJ,EAAKC,KAAKD,EAAKE,KAAOF,EAAKxH,MAAQ,IAEnDgH,EAAQK,aAAaQ,WAAWzH,GAGlC,QAAS0H,KACP,GAAIlG,GAAOhC,EAAMwC,aAAaC,SAASZ,OAAOG,KAC1CmG,EAAQnI,EAAMwC,aAAaC,SAAS0F,MACpCC,EAAOD,EAAMvC,SACbpF,EAAM8G,EAAS,IAAMtF,CAEzB4F,GAAKC,KAAKrH,GAA0BN,SAAnB0H,EAAKC,KAAKrH,GAAqB,EAAIoH,EAAKC,KAAKrH,GAC9DoH,EAAKhI,KAAOwI,EAAKC,OAAST,EAAKC,KAAKrH,GACpCoH,EAAKC,KAAKrH,GAAO4H,EAAKC,OACtBT,EAAKE,IAAMC,EAAaH,EAAKC,MAC7BD,EAAKI,SAAWJ,EAAKC,KAAKD,EAAKE,KAAOF,EAAKxH,MAAQ,IAEnDgH,EAAQK,aAAaa,QAAQ9H,EAAK4H,GAGpC,QAASL,GAAa/G,GACpB,MAAOqB,QAAOkG,KAAKvH,GAAQwH,OAAO,SAASC,EAAGC,GAC5C,MAAO1H,GAAO0H,GAAK1H,EAAOyH,GAAKC,EAAID,GAClCpG,OAAOkG,KAAKvH,GAAQ,IA7DzB,GAAIhB,GAAQmD,IAEZmE,GAASA,GAAU,iBAEnBtH,EAAM2I,gBAAkBT,EAExB/I,EAA8BkE,MAAMrD,EAAOsD,WAE3CtD,EAAMuD,gBAAgB,OAAQiE,GAE9BxH,EAAM4I,MAAM,aAAcjB,GAE1B3H,EAAM6I,OAAO,OAAQX,GACrBlI,EAAM6I,OAAO,aAAcX,GAC3BlI,EAAM6I,OAAO,SAAUX,GACvBlI,EAAM6I,OAAO,UAAWX,GACxBlI,EAAM6I,OAAO,SAAUX,GACvBlI,EAAM6I,OAAO,mBAAoBX,GACjClI,EAAM6I,OAAO,OAAQX,GACrBlI,EAAM6I,OAAO,iBAAkBX,GAC/BlI,EAAM6I,OAAO,SAAUX,GACvBlI,EAAM6I,OAAO,MAAOX,GACpBlI,EAAM6I,OAAO,MAAOX,GACpBlI,EAAM6I,OAAO,MAAOX,GACpBlI,EAAM6I,OAAO,UAAWX,GA5C1B,GAAIN,IACFE,IAAK,EACLlI,IAAK,EACLQ,MAAO,KACPyH,QAMF,OAHAN,GAA0B5D,UAAYtB,OAAOuB,OAAOzE,EAA8BwE,WAClF4D,EAA0B5D,UAAUE,YAAc0D,GAGhD3D,OAAQyD,EACRO,KAAMA,GNgaVT,EAAiCrD,SAAW,gCAAiC,UAAW,MMpbxFjF,QAAQC,OAAO,yBACdiF,QAAQ,4BAA6BoD,MCJxC,WACE,YAKA,SAASnD,GAAQC,GACfA,EAASC,UAAU,WAAYA,GAGjC,QAASA,GAAUC,EAAWoD,GAC5B,GAAInD,GAAWD,CAIf,OAFAC,GAASC,YAAckD,EAEhBnD,EP2gBTJ,EAAQF,SAAW,YACnBI,EAAUJ,SAAW,YAAa,6BOxhBlCjF,QAAQC,OAAO,yBACde,OAAOmE,MCJV,WACE,YAEAnF,SAAQC,OAAO,mBAAoB,UAElCC,SAAS,YAAaM,WACtBN,SAAS,aAAc+J,aCN1B,WACE,YAKA,SAAS1J,GAAiCE,GAexC,QAASqG,GAAW3E,GAClB,MAAe,QAAXA,EACK,MAGDgB,KAAMhB,EAAOC,KAAKe,KAAMd,GAAIF,EAAOC,KAAKC,IAUlD,QAASqE,GAAKvE,EAAQR,EAAK6E,EAAQ0D,EAAQrH,GACzC,GAAIG,EAGJ,OAFAH,GAAgBxB,SAATwB,GAAqB,EAAQA,EAErBxB,SAAXc,GACF1B,EAAK2D,MAAM,wCAA0CjC,EAAQR,EAAK6E,GAClE/F,EAAK2D,MAAM,UAAWjC,EAAOC,KAAKe,KAAMhB,GACxC1B,EAAK2D,MAAM,UAAWoC,EAAOpE,KAAKe,KAAMqD,GACxC/F,EAAK2D,MAAM,OAAQzC,QAIrBqB,EAASb,EAAOa,OAAOC,cAActB,GAEtBN,SAAXmF,GACF/F,EAAK2D,MAAM,iCAAmCjC,EAAQR,EAAK6E,EAAQxD,GACnEvC,EAAK2D,MAAM,UAAWjC,EAAOC,KAAKe,KAAMhB,GACxC1B,EAAK2D,MAAM,UAAWoC,EAAOpE,KAAKe,KAAMqD,GACxC/F,EAAK2D,MAAM,OAAQzC,GACnBlB,EAAK2D,MAAM,UAAWpB,OAIT3B,SAAX2B,GACFvC,EAAK2D,MAAM,wCAA0CjC,EAAQR,EAAK6E,EAAQxD,GAC1EvC,EAAK2D,MAAM,UAAWjC,EAAOC,KAAKe,KAAMhB,GACxC1B,EAAK2D,MAAM,UAAWoC,EAAOpE,KAAKe,KAAMqD,GACxC/F,EAAK2D,MAAM,OAAQzC,GACnBlB,EAAK2D,MAAM,UAAWpB,OAIT,OAAXwD,GAAmBxD,EAAOmH,eAAgB,GAASnH,EAAOa,QAAU2C,EAAOpE,KAAKe,MAClF1C,EAAK2D,MAAM,+CAAiDpB,EAAOa,MAAQ,eAAiB2C,EAAOpE,KAAKe,MACxG1C,EAAK2D,MAAM,UAAWjC,EAAOC,KAAKe,KAAMhB,GACxC1B,EAAK2D,MAAM,UAAWoC,EAAOpE,KAAKe,KAAMqD,GACxC/F,EAAK2D,MAAM,OAAQzC,GACnBlB,EAAK2D,MAAM,UAAWpB,OAIJ,YAAhBA,EAAOG,KACL+G,KAAW,GACbE,EAAajI,EAAQR,EAAK6E,EAAQ3D,OAG3BwH,EAAoBlI,EAAQR,EAAK6E,EAAQ3D,GAEzB,WAAhBG,EAAOG,KACZ+G,KAAW,GACbI,EAAYnI,EAAQR,EAAK6E,EAAQ3D,OAG1B0H,EAAmBpI,EAAQR,EAAK6E,EAAQ3D,GAL5C,QAiBT,QAASuD,GAAOjE,EAAQR,EAAK6E,EAAQ0D,EAAQrH,GAC3C,GAAIG,EAGJ,OAFAH,GAAgBxB,SAATwB,GAAqB,EAAQA,EAErBxB,SAAXc,GACF1B,EAAK2D,MAAM,6CAA+CjC,EAAQR,EAAK6E,GACvE/F,EAAK2D,MAAM,UAAWjC,EAAOC,KAAKe,KAAMhB,GACxC1B,EAAK2D,MAAM,UAAWoC,EAAOpE,KAAKe,KAAMqD,GACxC/F,EAAK2D,MAAM,OAAQzC,QAIrBqB,EAASb,EAAOa,OAAOC,cAActB,GAEtBN,SAAX2B,GACFvC,EAAK2D,MAAM,2CAA6CjC,EAAQR,EAAK6E,EAAQxD,GAC7EvC,EAAK2D,MAAM,UAAWjC,EAAOC,KAAKe,KAAMhB,GACxC1B,EAAK2D,MAAM,UAAWoC,EAAOpE,KAAKe,KAAMqD,GACxC/F,EAAK2D,MAAM,OAAQzC,GACnBlB,EAAK2D,MAAM,UAAWpB,OAIpBkH,KAAW,GACbM,EAAgBrI,EAAQR,EAAK6E,EAAQ3D,OAG9B4H,EAAgBtI,EAAQR,EAAK6E,EAAQ3D,IAQhD,QAASwH,GAAoBlI,EAAQR,EAAK6E,EAAQ3D,GAChD,GACI6H,GADAC,EAAgBxI,EAAOa,OAAOC,cAActB,GAAKiJ,UAGrD,OAAID,MAAkB,GACpBP,EAAajI,EAAQR,EAAK6E,EAAQ3D,QAIpC6H,EAAmBlE,EAAOxD,OAAOC,cAAc0H,GAEtBtJ,SAArBqJ,GACFjK,EAAK2D,MAAM,4BAA6BzC,EAAK,mBAAoBQ,EAAOC,KAAKe,KAAM,KAAMqD,EAAOpE,KAAKe,MACrG1C,EAAK2D,MAAM,iEAEwB,WAA1BsG,EAAiBvH,KACnB0H,EACLC,EAAc3I,EAAQR,EAAK6E,GAC3BsE,EAActE,EAAQmE,EAAexI,GACrCoI,EAAmB/D,EAAQmE,EAAexI,EAAQU,IAEjB,YAA1B6H,EAAiBvH,MAC1BiH,EAAajI,EAAQR,EAAK6E,EAAQ3D,GAClCuH,EAAa5D,EAAQmE,EAAexI,EAAQU,IACpCiI,EAActE,EAAQmE,EAAexI,KAHxC,QAOT,QAASoI,GAAmBpI,EAAQR,EAAK6E,EAAQ3D,GAC/C,GAEI6H,GACAK,EAHAJ,EAAgBxI,EAAOa,OAAOC,cAActB,GAAKiJ,WACjDI,EAAgB7I,EAAOc,cAActB,GAGrCsJ,IAIJ,OAFAX,GAAYnI,EAAQR,EAAK6E,EAAQ3D,GAE7B8H,KAAkB,MAIAtJ,SAAlB2J,GAAiD,OAAlBA,IACjCD,EAAsBC,EAAchI,OAAOC,cAAc0H,GAE7BtJ,SAAxB0J,GAC+B,WAA7BA,EAAoB5H,KACtB+H,EAAeF,EAAeL,EAAexI,EAAQU,GACf,YAA7BkI,EAAoB5H,MAC7BqH,EAAgBQ,EAAeL,EAAexI,EAAQU,GAGxDoI,EAAOE,KAAKL,EAAcE,EAAeL,EAAexI,MAExD1B,EAAK2D,MAAM,4BAA6BzC,EAAK,mBAAoBQ,EAAOC,KAAKe,KAAM,KAAMqD,EAAOpE,KAAKe,MACrG1C,EAAK2D,MAAM,+DAIA/C,SAAXmF,GAAmC,OAAXA,GAAmBmE,KAAkB,IAC/DD,EAAmBlE,EAAOxD,OAAOC,cAAc0H,GACtBtJ,SAArBqJ,GAC4B,WAA1BA,EAAiBvH,KACnBmH,EAAY9D,EAAQmE,EAAexI,EAAQU,GACR,YAA1B6H,EAAiBvH,MAC1BiH,EAAa5D,EAAQmE,EAAexI,EAAQU,GAG9CoI,EAAOE,KAAKL,EAActE,EAAQmE,EAAexI,MAEjD1B,EAAK2D,MAAM,4BAA6BzC,EAAK,mBAAoBQ,EAAOC,KAAKe,KAAM,KAAMqD,EAAOpE,KAAKe,MACrG1C,EAAK2D,MAAM,+DAIR6G,GAGT,QAASR,GAAgBtI,EAAQR,EAAK6E,EAAQ3D,GAC5C,GAEI6H,GAFA1H,EAASb,EAAOa,OAAOC,cAActB,GACrCgJ,EAAgB3H,EAAO4H,UAS3B,OANoB,YAAhB5H,EAAOG,KACTqH,EAAgBrI,EAAQR,EAAK6E,EAAQ3D,GACZ,WAAhBG,EAAOG,MAChB+H,EAAe/I,EAAQR,EAAK6E,EAAQ3D,GAGlC8H,KAAkB,MAItBD,EAAmBlE,EAAOxD,OAAOC,cAAc0H,GAEtBtJ,SAArBqJ,GAOFjK,EAAK2D,MAAM,4BAA6BzC,EAAK,mBAAoBQ,EAAOC,KAAKe,KAAM,KAAMqD,EAAOpE,KAAKe,MACrG1C,EAAK2D,MAAM,kEAPmB,WAA1BsG,EAAiBvH,KACnB+H,EAAe1E,EAAQmE,EAAexI,EAAQU,GACX,YAA1B6H,EAAiBvH,MAC1BqH,EAAgBhE,EAAQmE,EAAexI,EAAQU,IAQ3CiI,EAActE,EAAQmE,EAAexI,MAG/C,QAASmI,GAAYnI,EAAQR,EAAK6E,EAAQ3D,GAcxC,MAbApC,GAAK2K,MAAM,YAAajJ,EAAQR,EAAK6E,GAEjC3D,KAAS,IACXV,EAASA,EAAOU,MAGlBV,EAAOc,cAActB,GAAO6E,EAC5BrE,EAAOC,KAAKa,cAActB,GAAKS,KAAO0E,EAAWN,GAE7C3D,KAAS,GACXV,EAAOkJ,OAAM,IAGR,EAGT,QAASjB,GAAajI,EAAQR,EAAK6E,EAAQ3D,GACzCpC,EAAK2K,MAAM,aAAcjJ,EAAQR,EAAK6E,EAEtC,IAAI8E,GAAWxE,EAAWN,EAK1B,OAJI3D,MAAS,IACXV,EAASA,EAAOU,MAGd7C,QAAQ+D,QAAQ5B,EAAOc,cAActB,KAASQ,EAAOc,cAActB,GAAKqG,QAAQxB,GAAU,IACrF,GAGTrE,EAAOc,cAActB,GAAOQ,EAAOc,cAActB,OACjDQ,EAAOC,KAAKa,cAActB,GAAKS,KAAOD,EAAOC,KAAKa,cAActB,GAAKS,SAErED,EAAOc,cAActB,GAAKwJ,KAAK3E,GAC/BrE,EAAOC,KAAKa,cAActB,GAAKS,KAAK+I,KAAKG,GAErCzI,KAAS,GACXV,EAAOkJ,OAAM,IAGR,GAGT,QAASH,GAAe/I,EAAQR,EAAK6E,EAAQ3D,GAO3C,MANApC,GAAK2K,MAAM,eAAgBjJ,EAAQR,EAAK6E,GAEpC3D,KAAS,IACXV,EAASA,EAAOU,MAGHxB,SAAXmF,GAAwBrE,EAAOc,cAActB,KAAS6E,GACjD,GAGTrE,EAAOc,cAActB,GAAO,KAC5BQ,EAAOC,KAAKa,cAActB,GAAKS,KAAOf,OAElCwB,KAAS,GACXV,EAAOkJ,OAAM,IAGR,GAGT,QAASb,GAAgBrI,EAAQR,EAAK6E,EAAQ3D,GAO5C,GANApC,EAAK2K,MAAM,gBAAiBjJ,EAAQR,EAAK6E,GAErC3D,KAAS,IACXV,EAASA,EAAOU,MAGgBxB,SAA9Bc,EAAOc,cAActB,GAAzB,CAIA,GAAeN,SAAXmF,EAOF,MANArE,GAAOc,cAActB,MACrBQ,EAAOC,KAAKa,cAActB,GAAKS,QAC3BS,KAAS,GACXV,EAAOkJ,OAAM,IAGR,CAGT,IAAIE,GAAQpJ,EAAOc,cAActB,GAAKqG,QAAQxB,EAE9C,OAAc,KAAV+E,GACK,GAGTpJ,EAAOc,cAActB,GAAK6J,OAAOD,EAAO,GACxCpJ,EAAOC,KAAKa,cAActB,GAAKS,KAAKoJ,OAAOD,EAAO,GAE9C1I,KAAS,GACXV,EAAOkJ,OAAM,IAGR,IAGT,QAASP,GAAc3I,EAAQR,EAAK6E,GAClC,OACErE,OAAQA,EACRR,IAAKA,EACL6E,OAAQA,GAIZ,QAASqE,GAAcjJ,EAAO6J,EAAUC,GACtC,GAAIH,GAAQ,EAaZ,OAZAvL,SAAQwB,QAAQkK,EAAO,SAASC,EAAMC,GAChCD,EAAKxJ,SAAWP,EAAMO,QAAUwJ,EAAKhK,MAAQC,EAAMD,KAAOgK,EAAKnF,SAAW5E,EAAM4E,SAClF+E,EAAQK,KAIRL,EAAQ,GACVG,EAAMH,GAASE,EAEfC,EAAMP,KAAKM,GAGNC,EAxWT,GAAIvK,GAAQmD,IAOZ,OALAnD,GAAM2F,WAAaA,EAEnB3F,EAAMuF,KAAOA,EACbvF,EAAMiF,OAASA,EAER9B,KT0iBT/D,EAAiC0E,SAAW,QSrjB5CjF,QAAQC,OAAO,mBACd4L,QAAQ,mCAAoCtL,MCJ/C,WACE,YAKA,SAASuL,GACPC,EACAtL,GAoBA,QAASuL,GAAmCpI,GAC1C,MAAO,IAAIqI,GAA4BrI,GAMzC,QAASqI,GAA4BrI,GACnC,GAAIzC,GAAQmD,IAEZnD,GAAMyC,SAAWA,EACjBzC,EAAMiB,QACNjB,EAAMoF,WACNpF,EAAM4H,KAAO,EAEb5H,EAAM+K,SAAW7K,OAQnB,QAAS8K,GAAYC,EAAepL,EAAQqL,GAC1C,GAAIlL,GAAQmD,KACRjC,EAAK+J,EAAc/J,EAEvB,OAAWhB,UAAPgB,MACF5B,GAAK2D,MAAM,6BAA+BgI,IAIrB/K,SAAnBF,EAAMiB,KAAKC,IACblB,EAAMiB,KAAKC,GAAMlB,EAAMyC,SAAS0I,aAAaF,EAAepL,EAAQqL,GACpElL,EAAM4H,MAAQ,GAEd5H,EAAMiB,KAAKC,GAAII,OAAO2J,GAAgBpL,EAAAA,OAAYA,EAAOuL,gBAGpDpL,EAAMiB,KAAKC,IASpB,QAASmK,GAASjD,GAChB,GAAIpI,GAAQmD,KACRmI,EAAazM,QAAQwM,SAASjD,GAE9BvI,GACF0L,OAAK,EACLC,gBAAc,EACdC,QAAQ,EACRC,UAAU,EACVN,gBAAgB,EAGdvM,SAAQiE,SAASwI,IAAmCpL,SAApBoL,EAAWrK,OAC7CjB,EAAMkL,UAAYI,EAAWJ,UAC7BlL,EAAM+K,SAAWO,EAAWP,SAE5BlM,QAAQwB,QAAQiL,EAAWrK,KAAM,SAAS0K,GACxC,GAAI1K,GAAO0K,EAAW1K,IACtBjB,GAAMgL,YAAY/J,EAAMpB,EAAQ8L,EAAWT,cASjD,QAAStF,KACP,GAAI5F,GAAQmD,KACRiF,GACFnH,QACAiK,UAAWlL,EAAMkL,UACjBH,SAAU/K,EAAM+K,SASlB,OANAlM,SAAQwB,QAAQL,EAAMiB,KAAM,SAASD,GAC/BA,EAAO4K,eAAgB,GACzBxD,EAAKnH,KAAK+I,KAAKhJ,EAAO4E,YAInB/G,QAAQ+G,OAAOwC,GAOxB,QAAST,KACP,GAAI3H,GAAQmD,IAEZnD,GAAM+K,SAAW7K,OACjBF,EAAMiB,QACNjB,EAAMoF,WAQR,QAASrE,GAAIG,GACX,GAAIlB,GAAQmD,KAERlC,GACFC,GAAIA,EACJc,KAAMhC,EAAMyC,SAASZ,OAAOG,MAG1BnC,GACF0L,OAAK,EACLC,gBAAc,EACdC,QAAQ,EACRC,UAAU,EAOZ,OAJuBxL,UAAnBF,EAAMiB,KAAKC,KACblB,EAAMiB,KAAKC,GAAMlB,EAAMyC,SAAS0I,aAAalK,EAAMpB,IAG9CG,EAAMiB,KAAKC,GAQpB,QAASkJ,GAAMjK,GAUb,QAASG,GAAO6F,GACd,GAAI0F,GAAgB1L,EAAOG,OACvBwL,GAAQ,CAMZ,OAJAjN,SAAQwB,QAAQwL,EAAc,SAASE,GACrCD,EAAQA,GAAS3F,EAASlF,KAAKU,WAAWoK,EAAWvL,OAASuL,EAAWtL,QAGpEqL,EAjBT,GAAI9L,GAAQmD,IAGZ,OAFAhD,GAASA,MAEcD,SAAnBF,EAAM+K,SACD/K,EAAM+K,SAGR/K,EAAM+K,SAASiB,IAAIhM,EAAMe,IAAID,KAAKd,IAAQM,OAAOA,GAkB1D,QAAS2L,GAAY1B,GACnB,GAAIvK,GAAQmD,IAEZnD,GAAM+K,YAENlM,QAAQwB,QAAQkK,EAAO,SAAS2B,GAC1BrN,QAAQsN,SAASD,IAAYlM,EAAMyC,SAASZ,OAAOX,GAAG4H,SAASoD,GACjElM,EAAM+K,SAASf,KAAKkC,GACXrN,QAAQiE,SAASoJ,IAAYlM,EAAMyC,SAASZ,OAAOX,GAAG4H,SAASoD,EAAQjL,KAAKC,KACrFlB,EAAM+K,SAASf,KAAKkC,EAAQjL,KAAKC,MAWvC,QAASC,GAAOD,GACd,GAAIlB,GAAQmD,IAQZ,OANuBjD,UAAnBF,EAAMiB,KAAKC,KACblB,EAAMoF,QAAQlE,GAAMlB,EAAMiB,KAAKC,SACxBlB,GAAMiB,KAAKC,GAClBlB,EAAM4H,MAAQ,GAGT5H,EAAMoF,QAAQlE,GASvB,QAASkL,GAAalL,GACpB,GAAIlB,GAAQmD,IAQZ,OAN0BjD,UAAtBF,EAAMoF,QAAQlE,KAChBlB,EAAMiB,KAAKC,GAAMlB,EAAMoF,QAAQlE,SACxBlB,GAAMoF,QAAQlE,GACrBlB,EAAM4H,MAAQ,GAGT5H,EAAMiB,KAAKC,GAQpB,QAASmL,GAAanL,GACpB,GAAIlB,GAAQmD,WAELnD,GAAMoF,QAAQlE,GAhOvB,MAbA4J,GAA4BnH,UAAU5C,IAAMA,EAC5C+J,EAA4BnH,UAAUyG,MAAQA,EAC9CU,EAA4BnH,UAAUsI,YAAcA,EACpDnB,EAA4BnH,UAAUqH,YAAcA,EAEpDF,EAA4BnH,UAAU0H,SAAWA,EACjDP,EAA4BnH,UAAUiC,OAASA,EAC/CkF,EAA4BnH,UAAUgE,MAAQA,EAE9CmD,EAA4BnH,UAAUxC,OAASA,EAC/C2J,EAA4BnH,UAAUyI,aAAeA,EACrDtB,EAA4BnH,UAAU0I,aAAeA,GAGnDzI,OAAQiH,GVo5BZF,EAAmC7G,SAAW,QAAS,QU16BvDjF,QAAQC,OAAO,mBACdiF,QAAQ,8BAA+B4G,MCJ1C,WACE,YAKA,SAAS2B,GACPC,EACAnN,EACAoN,EACAjN,GAgBA,QAASkN,GAA+BC,GACtC,MAAO,IAAIC,GAAwBD,GAGrC,QAASC,GAAwBD,GAC/B,GAAI1M,GAAQmD,IAEZnD,GAAMiB,MACJC,GAAIwL,EAAOzL,KAAKC,GAChBc,KAAM0K,EAAOzL,KAAKe,KAClBL,cACAG,kBAGF9B,EAAM8B,iBACN9B,EAAM0M,OAASA,EACf1M,EAAM6B,OAAS6K,EAAO7K,OACtB7B,EAAMkK,QAOR,QAAStE,KACP,GAAI5F,GAAQmD,KACRlC,EAAOpC,QAAQ+N,KAAK5M,EAAMiB,MAC1Ba,IAUJ,OARAjD,SAAQwB,QAAQY,EAAKa,cAAe,SAASrB,EAAOD,GAC/BN,SAAfO,EAAMQ,OACRa,EAActB,GAAOC,KAIzBQ,EAAKa,cAAgBA,GAGnBb,KAAMA,GAQV,QAASO,KACP,GAAIxB,GAAQmD,IAEZ,OAAOnD,GAAM0M,OAAOlL,OAOtB,QAAS0I,GAAM2C,GACb,GAAI7M,GAAQmD,IAEZtE,SAAQwB,QAAQL,EAAM6B,OAAOC,cAAe,SAASb,EAAMT,GACzDR,EAAMiB,KAAKa,cAActB,GAAO3B,QAAQ+N,KAAK5M,EAAM0M,OAAOzL,KAAKa,cAActB,QACzE3B,QAAQ+D,QAAQ5C,EAAM8B,cAActB,IACtCR,EAAM8B,cAActB,GAAOR,EAAM0M,OAAO5K,cAActB,GAAK2B,QAE3DnC,EAAM8B,cAActB,GAAOR,EAAM0M,OAAO5K,cAActB,MAItDqM,KAAS,GAAQ7M,EAAM0M,OAAN1M,mBAA8B,KAInDnB,QAAQwB,QAAQL,EAAM6B,OAAOF,WAAY,SAASmL,EAAWtM,GAC3DR,EAAMiB,KAAKU,WAAWnB,GAAO3B,QAAQ+N,KAAK5M,EAAM0M,OAAOzL,KAAKU,WAAWnB,MAGzER,EAAM0M,OAAOlH,OAAOuH,WAAWpF,SAQjC,QAASmB,GAAStI,GAsBhB,QAASuC,KACK7C,SAARM,EACFR,EAAM0M,OAAOlH,OAAOuH,WAAWpF,QAE/B3H,EAAM0M,OAAOlH,OAAOuH,WAAWpF,MAAMnH,GAGvC0E,EAASnC,UAGX,QAASG,GAAO8J,GACdhN,EAAM0M,OAAOzJ,OAAQ,EACT/C,SAARM,EACFR,EAAM0M,OAAOlH,OAAOuH,WAAWpF,QAE/B3H,EAAM0M,OAAOlH,OAAOuH,WAAWpF,MAAMnH,GAGvC3B,QAAQwB,QAAQ2M,EAAW,SAASxH,EAAQ5D,GAC1C/C,QAAQwB,QAAQmF,EAAQ,SAASvC,GAC/BjD,EAAM0M,OAAOlH,OAAOuH,WAAWlH,IAAIjE,EAAW2K,EAAmC3I,OAAOX,EAAOrB,QAInGsD,EAAShC,OAAOlD,EAAM0M,OAAOlH,OAAOuH,YA7CtC,GACIE,GACAC,EAFAlN,EAAQmD,KAGR+B,EAAW3F,EAAG4F,OA6ClB,OA3CYjF,UAARM,GACFyM,EAAoBjN,EAAMiB,KAAKU,WAC/BuL,EAAqBlN,EAAM6B,OAAOF,aAElCsL,KACAC,KAEAD,EAAkBzM,GAAOR,EAAMiB,KAAKU,WAAWnB,GAC/C0M,EAAmB1M,GAAOR,EAAM6B,OAAOF,WAAWnB,IAGpDgM,EAAWW,MACTF,EACAC,GACAvM,KAAKoC,EAASG,GA6BTgC,EAASI,QASlB,QAASC,GAAK/E,EAAK6E,EAAQ0D,GACzB,GAAI/I,GAAQmD,IAGZ,OAFA4F,GAAoB7I,SAAX6I,GAAuB,GAAQ,EAEjCxJ,EAAGwD,QAAQ3D,EAAiCmG,KAAKvF,EAAM0M,OAAQlM,EAAK6E,EAAQ0D,GAAQ,IAS7F,QAAS9D,GAAOzE,EAAK6E,EAAQ0D,GAC3B,GAAI/I,GAAQmD,IAGZ,OAFA4F,GAAoB7I,SAAX6I,GAAuB,GAAQ,EAEjCxJ,EAAGwD,QAAQ3D,EAAiC6F,OAAOjF,EAAM0M,OAAQlM,EAAK6E,EAAQ0D,GAAQ,IAnK/F,MATA4D,GAAwBhJ,UAAUnC,KAAOA,EACzCmL,EAAwBhJ,UAAUuG,MAAQA,EAC1CyC,EAAwBhJ,UAAUmF,SAAWA,EAE7C6D,EAAwBhJ,UAAU4B,KAAOA,EACzCoH,EAAwBhJ,UAAUsB,OAASA,EAE3C0H,EAAwBhJ,UAAUiC,OAASA,GAGzChC,OAAQ6I,GXopCZH,EAA+BxI,SAAW,qCAAsC,mCAAoC,aAAc,MWxqClIjF,QAAQC,OAAO,mBACdiF,QAAQ,0BAA2BuI,MCJtC,WACE,YAKA,SAASc,GACPlO,EACAqN,EACAc,EACAjO,EACAuN,EACAW,EACAC,EACAjO,EACAC,GAwBA,QAASiO,GAA4BvM,EAAMpB,EAAQqL,GACjD,GAAIlL,GAAQmD,IAEZlC,GAAKa,cAAgBb,EAAKa,kBAM1B9B,EAAAA,OAA2BE,SAAfL,EAAAA,QAA2B,EAAQA,EAAAA,OAM/CG,EAAMyL,OAA2BvL,SAAlBL,EAAO4L,QAAuB,EAAO5L,EAAO4L,OAM3DzL,EAAAA,gBAA6CE,SAAxBL,EAAAA,iBAAoC,EAAOA,EAAAA,gBAMhEG,EAAM0L,SAA+BxL,SAApBL,EAAO6L,UAAyB,EAAO7L,EAAO6L,SAE/D1L,EAAMoF,SAAU,EAChBpF,EAAMyN,SAAU,EAChBzN,EAAM0N,QAAS,EACf1N,EAAMkL,UAAYlL,EAAAA,mBAAuB,EAAO2N,KAAKC,MAAQ1C,EAE7DlL,EAAM6N,aAAe,EACrB7N,EAAM8N,YAAc,EAEpB9N,EAAMiB,MACJa,iBACAH,eAEF3B,EAAM8B,iBAENjD,QAAQwB,QAAQL,EAAM6B,OAAOC,cAAe,SAASD,EAAQrB,GAC3DR,EAAM8B,cAActB,GAAON,SAG7BF,EAAMwF,QACJuH,WAAYM,EAAiCzJ,OAC3C,aACA,kCACA2I,GAEFhJ,gBAAiB8J,EAAiCzJ,OAChD,SACA,6BACA1E,IAIJc,EAAMsF,QAAU/F,EAAGwD,QAAQ/C,GAE3B+N,EAAU/N,EAAOiB,GAEjBjB,EAAM0B,KAAOiL,EAAwB/I,OAAO5D,GAO9C,QAASwB,KAiBP,QAASwM,KACPhO,EAAMgO,YAAYnO,GAAQc,KAAKoC,EAASG,EAAQ+K,GAGlD,QAASlL,GAAQJ,GACf2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,WAAanC,EAAOmD,OAAQ,WAAYhD,EAAO2C,GACtG3C,EAAMsB,OAAOqB,EAAS1B,KAAKA,MAEvBjB,EAAAA,UAAc,IAChBA,EAAMyC,SAAS0F,MAAM4C,SAAW/K,EAAMyC,SAAS0F,MAAM4C,aACrD/K,EAAMyC,SAAS0F,MAAM4C,SAASf,KAAKhK,EAAMiB,KAAKC,KAGhDlB,EAAAA,iBAAqB,EACrBA,EAAAA,QAAY,EACZA,EAAM0L,UAAW,EACjB1L,EAAMyL,QAAS,EAEf9I,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAC7CN,EAASnC,QAAQJ,EAAS1B,KAAKmN,MAGjC,QAASlL,GAAOP,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,eAAgB,WAAYhC,EAAO2C,GAE1FA,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAC7CN,EAAShC,OAAOlD,GAGlB,QAASiO,GAAOtL,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,eAAgB,SAAUhC,EAAO2C,GAExFuC,EAAS+I,OAAOtL,GAlDlB,GAAI3C,GAAQmD,KACR+B,EAAW3F,EAAG4F,QACdtF,GACFmD,OAAQhD,EAAAA,UAAc,EAAO,MAAQ,SACrCgB,OAAQhB,EAUV,OAPAA,GAAM0B,KAAKoH,WAAWnI,KACpBqN,EACA9I,EAAShC,QAFXlD,WAGUqO,EAAyBvN,KAAKd,EAAOE,SAE/CoO,EAAyBtO,GAElBkF,EAASI,QA4ClB,QAAS4E,KACP,GAAIlK,GAAQmD,IAEOjD,UAAfF,EAAM0B,MACR1B,EAAM0B,KAAKwI,QAQf,QAASqE,GAAQpO,GA0Bf,QAAS4C,GAAQJ,GAYf,QAAS6L,GAAoBxN,GAG3B,MAFAyN,GAA0BzN,GAEnBA,EAAOgN,aACZhL,OAAQ,UACRhC,OAAQA,IAFHA,WAGI0N,EAA0B5N,KAAKE,EAAQd,SAGpD,QAASyO,GAAgBC,GACvB/P,QAAQwB,QAAQuO,EAAkB,SAASC,EAAWrO,GAChDqO,EAAUC,WAAY,IACxBxB,EAAWY,MAAM,kBAAoBa,EAAQC,SAASxO,GAAKS,KAAKe,KAAO,kBAAmB,WAAY+M,EAAQC,SAASxO,GAAMqO,GAC7HA,EAAUpO,MAAMoI,YAIpB3D,EAASnC,QAAQJ,EAAS1B,KAAKmN,MA5BjC,GAAIW,GAAU3K,EAAS6K,iBAAiBtM,EAAS1B,KACjDqM,GAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,kBAAmB,WAAYhC,EAAO2C,GAC7FpD,EAAG2P,WAAWH,EAAQC,SAAShD,IAAIwC,IAAsB7N,KAAKgO,EAAiBzJ,EAAShC,QAExFlD,EAAAA,iBAAqB,EACrBA,EAAMyL,QAAS,EACfzL,EAAM0L,UAAW,EAEjB/I,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAuB/C,QAAStC,GAAOP,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,kBAAmB,WAAYhC,EAAO2C,GAE7FA,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAC7CN,EAAShC,OAAOlD,GAGlB,QAASiO,GAAOtL,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,kBAAmB,SAAUhC,EAAO2C,GAE3FuC,EAAS+I,OAAOtL,GArElB,GAAIyB,GAAWmJ,EAAUxM,IAAI,YACzBmE,EAAW3F,EAAG4F,QACdnF,EAAQmD,IACZhD,GAAoBD,SAAXC,EAAuBH,EAAM6B,OAAO1B,OAAOY,IAAMZ,CAE1D,IAAIN,IACFmD,OAAQ,UACRhC,OAAQhB,EACRG,OAAQA,EAGV,IAAIH,EAAAA,UAAc,EAAM,CACtB,GAAIiD,GAAQ/D,EAA+B0E,OAAO,2BAA6B,KAAM,EAAG,UACxF5D,GAAMwF,OAAOjC,gBAAgBsC,IAAI,UAAW5C,GAC5CiC,EAAShC,OAAOD,OAEhBwL,GAA0BzO,GAE1BA,EAAMgO,YAAYnO,GACfc,KAAKoC,EAASG,EAAQ+K,GADzBjO,WAEW0O,EAA0B5N,KAAKd,EAAOE,QAGnD,OAAOgF,GAASI,QAsDlB,QAASM,KACP,GAAI5F,GAAQmD,KACRlC,EAAOjB,EAAMiB,KACba,IAUJ,OARAjD,SAAQwB,QAAQY,EAAKa,cAAe,SAASrB,EAAOD,GAC/BN,SAAfO,EAAMQ,OACRa,EAActB,GAAOC,KAIzBQ,EAAKa,cAAgBA,GAGnBb,KAAMA,EACNiK,UAAWlL,EAAMkL,WAQrB,QAAS/J,KAuBP,QAAS4B,GAAQJ,GACf2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,iBAAkB,WAAYhC,EAAO2C,GAC5F3C,EAAMoF,SAAU,EAChBpF,EAAMmP,YACNnP,EAAMyC,SAAS0F,MAAMkE,aAAarM,EAAMiB,KAAKC,IAE7CyB,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAE7CN,EAASnC,UAGX,QAASG,GAAOP,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,iBAAkB,WAAYhC,EAAO2C,GAC5F3C,EAAMyC,SAAS0F,MAAMiE,aAAapM,EAAMiB,KAAKC,IAE7CyB,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAC7CN,EAAShC,OAAOlD,GAGlB,QAASiO,GAAOtL,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,iBAAkB,SAAUhC,EAAO2C,GAE1FuC,EAAS+I,OAAOtL,GA9ClB,GAAI3C,GAAQmD,KACR+B,EAAW3F,EAAG4F,QAEdtF,GACFmD,OAAQ,SACRhC,OAAQhB,EAeV,OAZAA,GAAMyC,SAAS0F,MAAMhH,OAAOnB,EAAMiB,KAAKC,IAEnClB,EAAAA,UAAc,EAChBkF,EAASnC,WAETuL,EAAyBtO,GAEzBA,EAAMgO,YAAYnO,GACfc,KAAKoC,EAASG,EAAQ+K,GADzBjO,WAEWqO,EAAyBvN,KAAKd,EAAOE,UAG3CgF,EAASI,QAkClB,QAAS6J,GAAU3O,GAgBjB,QAAS4O,GAAWC,EAAU7O,GAC5B,GAAIqB,GAAS7B,EAAM6B,OAAOC,cAActB,GACpCgJ,EAAgB3H,EAAO4H,UAEvB5K,SAAQ+D,QAAQyM,GAClBxQ,QAAQwB,QAAQgP,EAAUC,EAAqBxO,KAAKZ,OAAWsJ,IACtD3K,QAAQiE,SAASuM,IAC1BC,EAAqB9F,EAAe6F,GAGlB,WAAhBxN,EAAOG,KACThC,EAAM8B,cAActB,GAAO,KACF,YAAhBqB,EAAOG,OAChBhC,EAAM8B,cAActB,OAIxB,QAAS8O,GAAqB9F,EAAenE,GAgB3C,QAAStC,GAAQJ,GACf2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,2BAA4B,UAAWhC,EAAO2C,GAErGA,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAC7CN,EAASnC,UAGX,QAASG,GAAOP,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,2BAA4B,WAAYhC,EAAO2C,GAEtGA,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAC7CN,EAAShC,OAAOlD,GAGlB,QAASiO,GAAOtL,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,2BAA4B,SAAUhC,EAAO2C,GAEpGA,EAASkG,SACT3D,EAAS+I,OAAOtL,GAnClB,GAAI4G,GAAmBlE,EAAOxD,OAAOC,cAAc0H,GAC/C3J,GACFmD,OAAQ,mBACRhC,OAAQqE,EACRA,OAAQrF,EACRQ,IAAKgJ,EAGPiF,GAA0BpJ,GAC1BjG,EAAiC6F,OAAOI,EAAQmE,EAAexJ,EAAOuJ,GAEtElE,EAAO2I,YAAYnO,GAChBc,KAAKoC,EAASG,EAAQ+K,GADzB5I,WAEWqJ,EAA0B5N,KAAKuE,EAAQnF,SA9CpD,GAAIF,GAAQmD,KACR+B,EAAW3F,EAAG4F,OAYlB,OAVAsJ,GAA0BzO,GAEdE,SAARM,EACF3B,QAAQwB,QAAQL,EAAM8B,cAAesN,GAErCA,EAAWpP,EAAM8B,cAActB,GAAMA,GAGvCkO,EAA0B1O,GAEnBkF,EAASI,QAkElB,QAASC,GAAK/E,EAAK6E,GA6BjB,QAAStC,GAAQJ,GAaf,QAASqL,GAAYlE,GAGnB,MAFA2E,GAA0BpJ,GAEnBA,EAAO2I,aACZhL,OAAQ,iBACRhC,OAAQ8I,EAAO9I,OACfqE,OAAQyE,EAAOzE,OACf7E,IAAKsJ,EAAOtJ,MAJP6E,WAKIqJ,EAA0B5N,KAAKuE,EAAQnF,SAGpD,QAASqP,GAAkB5M,GACzB9D,QAAQwB,QAAQsC,EAAU,SAASkM,EAAWrO,GACxCqO,EAAUC,WAAY,IACxBxB,EAAWY,MAAM,kBAAoBsB,EAAQhP,GAAKQ,OAAOC,KAAKe,KAAO,yBAA0B,WAAYwN,EAAQhP,GAAMqO,GACzHA,EAAUpO,MAAMoI,YAIpB3D,EAASnC,QAAQJ,EAAS1B,KAAKmN,MA/BjCd,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,eAAgB,WAAYhC,EAAO2C,EAE1F,IAAI6M,GAAUpQ,EAAiCmG,KAAKvF,EAAOQ,EAAK6E,EAEhErF,GAAMyL,QAAS,EACfzL,EAAM0L,UAAW,EACjB/I,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAE7CjG,EAAG2P,WAAWM,EAAQxD,IAAIgC,IACvBrN,KAAK4O,EAAmBrK,EAAShC,QAyBtC,QAASA,GAAOP,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,eAAgB,WAAYhC,EAAO2C,GAE1FuC,EAAShC,OAAOP,EAAS6C,QACzB7C,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAC7CN,EAAShC,OAAOlD,GAGlB,QAASiO,GAAOtL,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,eAAgB,SAAUhC,EAAO2C,GAExFuC,EAAS+I,OAAOtL,GA5ElB,GAEIM,GAFAiC,EAAW3F,EAAG4F,QACdnF,EAAQmD,KAERtD,GACFmD,OAAQ,OACRhC,OAAQhB,EACRqF,OAAQA,EACR7E,IAAKA,EAmBP,OAhBeN,UAAXmF,GACFpC,EAAQ/D,EAA+B0E,OAAO,uBAAyB,KAAM,EAAG,QAChF5D,EAAMwF,OAAOjC,gBAAgBsC,IAAI,OAAQ5C,GACzCiC,EAAShC,OAAOD,IACPjD,EAAAA,UAAc,GACvBiD,EAAQ/D,EAA+B0E,OAAO,wBAA0B,KAAM,EAAG,QACjF5D,EAAMwF,OAAOjC,gBAAgBsC,IAAI,OAAQ5C,GACzCiC,EAAShC,OAAOD,KAEhBqL,EAAyBtO,GAEzBA,EAAMgO,YAAYnO,GACfc,KAAKoC,EAASG,EAAQ+K,GADzBjO,WAEWqO,EAAyBvN,KAAKd,EAAOE,UAG3CgF,EAASI,QA4DlB,QAASL,GAAOzE,EAAK6E,GA6BnB,QAAStC,GAAQJ,GAaf,QAASqL,GAAYlE,GAGnB,MAFA2E,GAA0BpJ,GAEnBA,EAAO2I,aACZhL,OAAQ,mBACRhC,OAAQ8I,EAAO9I,OACfqE,OAAQyE,EAAOzE,OACf7E,IAAKsJ,EAAOtJ,MAJP6E,WAKIqJ,EAA0B5N,KAAKuE,EAAQnF,SAGpD,QAASqP,GAAkB5M,GACzB9D,QAAQwB,QAAQsC,EAAU,SAASkM,GAC7BA,EAAUC,WAAY,IACxBxB,EAAWY,MAAM,kBAAoBsB,EAAQhP,GAAKS,KAAKe,KAAO,2BAA4B,WAAYwN,EAAQhP,GAAMqO,GACpHlM,EAASlC,MAAMoI,YAInB3D,EAASnC,UA/BXuK,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,iBAAkB,WAAYhC,EAAO2C,EAE5F,IAAI6M,GAAUpQ,EAAiCmG,KAAKvF,EAAOQ,EAAK6E,EAEhErF,GAAMyL,QAAS,EACfzL,EAAM0L,UAAW,EACjB/I,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAE7CjG,EAAG2P,WAAWM,EAAQxD,IAAIgC,IACvBrN,KAAK4O,EAAmBrK,EAAShC,QAyBtC,QAASA,GAAOP,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,iBAAkB,WAAYhC,EAAO2C,GAE5FuC,EAAShC,OAAOP,EAAS6C,QACzB7C,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAC7CN,EAAShC,OAAOlD,GAGlB,QAASiO,GAAOtL,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMiB,KAAKe,KAAO,iBAAkB,SAAUhC,EAAO2C,GAE1FuC,EAAS+I,OAAOtL,GA5ElB,GAEIM,GAFAiC,EAAW3F,EAAG4F,QACdnF,EAAQmD,KAERtD,GACFmD,OAAQ,SACRhC,OAAQhB,EACRqF,OAAQA,EACR7E,IAAKA,EAmBP,OAhBeN,UAAXmF,GACFpC,EAAQ/D,EAA+B0E,OAAO,yBAA2B,KAAM,EAAG,UAClF5D,EAAMwF,OAAOjC,gBAAgBsC,IAAI,SAAU5C,GAC3CiC,EAAShC,OAAOlD,IACPA,EAAAA,UAAc,GACvBiD,EAAQ/D,EAA+B0E,OAAO,0BAA4B,KAAM,EAAG,UACnF5D,EAAMwF,OAAOjC,gBAAgBsC,IAAI,SAAU5C,GAC3CiC,EAAShC,OAAOlD,KAEhBsO,EAAyBtO,GAEzBA,EAAMgO,YAAYnO,GACfc,KAAKoC,EAASG,EAAQ+K,GADzBjO,WAEWqO,EAAyBvN,KAAKd,EAAOE,UAG3CgF,EAASI,QA2DlB,QAAShE,GAAO2J,EAAe4B,EAAMzB,GACnC,GAAIpL,GAAQmD,IAEZsL,GAA0BzO,GAE1B+N,EAAU/N,EAAOiL,GACjBjL,EAAMkK,MAAM2C,GACZ7M,EAAAA,gBAAqBoL,KAAmB,GAAO,GAAQ,EACvDpL,EAAMyL,OAASL,KAAmB,GAAO,GAAQ,EACjDpL,EAAMkL,UAAYyC,KAAKC,MAEvBc,EAA0B1O,GAO5B,QAAS4L,KACP,GAAI5L,GAAQmD,KACRsM,GAAS,CAMb,OAJA5Q,SAAQwB,QAAQL,EAAMwF,OAAQ,SAASvC,GACrCwM,EAASxM,EAAM2I,aAAe6D,IAGzBA,EAaT,QAAS1B,GAAU/M,EAAQiK,GA2BzB,QAASyE,GAAcC,EAAYnP,GACjCQ,EAAOC,KAAKU,WAAWnB,GAAOyK,EAActJ,WAAWnB,GAGzD,QAASoP,GAAiB/N,EAAQrB,GAChC,GAAIqP,GAAmB5E,EAAcnJ,cAActB,EAEnD,OAAyBN,UAArB2P,OACqC3P,SAAnCc,EAAOC,KAAKa,cAActB,KAC5BQ,EAAOC,KAAKa,cAActB,IAAQS,KAAMf,WAM5Cc,EAAOC,KAAKa,cAActB,GAAOQ,EAAOC,KAAKa,cAActB,OAC3DQ,EAAOC,KAAKa,cAActB,GAAKsP,MAAQD,EAAiBC,WAEpC,WAAhBjO,EAAOG,KACT+N,EAAQ/O,EAAQR,EAAKqP,EAAiB5O,MACb,YAAhBY,EAAOG,MACZnD,QAAQ+D,QAAQiN,EAAiB5O,QACE,IAAjC4O,EAAiB5O,KAAKoH,QACxBrH,EAAOC,KAAKa,cAActB,GAAKS,QAC/BD,EAAOmO,UAAU3O,KAEjB3B,QAAQwB,QACNW,EAAOc,cAActB,GACrBwP,EAAUlP,KAAKZ,OAAWc,EAAQR,EAAKqP,EAAiB5O,OAE1DpC,QAAQwB,QACNwP,EAAiB5O,KACjB8O,EAAQjP,KAAKZ,OAAWc,EAAQR,QAO1C,QAASuP,GAAQ/O,EAAQR,EAAKS,GAC5B,GAAIwB,EAEJ,IAAa,OAATxB,EAEF,WADA7B,GAAiCmG,KAAKvE,EAAQR,EAAK,KAIrD,IAAaN,SAATe,EAAJ,CAMA,GAFAwB,EAAW2B,EAAS6L,YAAYhP,EAAKe,MAEpB9B,SAAbuC,EAEF,WADAnD,GAAK2D,MAAM,oBAAqBhC,EAAKe,KAAMf,EAI7C,IAAIoE,GAAS5C,EAAS0F,MAAMpH,IAAIE,EAAKC,GAErC9B,GAAiCmG,KAAKvE,EAAQR,EAAK6E,IAGrD,QAAS2K,GAAUhP,EAAQR,EAAKqP,EAAkBxK,GAC5CwK,EAAiBhJ,QAAQxB,EAAOpE,KAAKC,IAAM,IAI/C9B,EAAiC6F,OAAOjE,EAAQR,EAAK6E,GA7FvD,GAAIjB,GAAWmJ,EAAUxM,IAAI,YACzBc,EAASb,EAAOa,MAKpB,OAHAb,GAAOC,KAAKC,GAAK+J,EAAc/J,GAC/BF,EAAOC,KAAKe,KAAOiJ,EAAcjJ,KAE7BhB,EAAOyB,SAASZ,OAAOG,OAASiJ,EAAcjJ,MAChD1C,EAAK2D,MAAM,+BAAgCjC,EAAOyB,SAASZ,OAAOG,KAAMiJ,IACjE,GAGJjK,EAAOa,OAAOX,GAAG4H,SAAS9H,EAAOC,KAAKC,KAK3CF,EAAOC,KAAK6O,MAAQ7E,EAAc6E,MAClC7E,EAActJ,WAAasJ,EAActJ,eACzCsJ,EAAcnJ,cAAgBmJ,EAAcnJ,kBAE5CjD,QAAQwB,QAAQwB,EAAOF,WAAY+N,GACnC7Q,QAAQwB,QAAQwB,EAAOC,cAAe8N,IAE/B,IAXLtQ,EAAK2D,MAAM,eACJ,GApmBX,MAfAuK,GAA4B7J,UAAU4K,QAAUA,EAChDf,EAA4B7J,UAAUxC,OAASA,EAC/CqM,EAA4B7J,UAAUuG,MAAQA,EAC9CsD,EAA4B7J,UAAUnC,KAAOA,EAE7CgM,EAA4B7J,UAAUrC,OAASA,EAE/CkM,EAA4B7J,UAAU4B,KAAOA,EAC7CiI,EAA4B7J,UAAUsB,OAASA,EAC/CuI,EAA4B7J,UAAUwL,UAAYA,EAElD3B,EAA4B7J,UAAUiC,OAASA,EAE/C4H,EAA4B7J,UAAUiI,UAAYA,EAE3C4B,EA6rBT,QAASiB,GAA0BzN,GACjCA,EAAoBd,SAAXc,EAAuBmC,KAAOnC,EACvCA,EAAO6M,cAAgB,EACvB7M,EAAOyM,SAAU,EAGnB,QAASiB,GAA0B1N,GACjCA,EAAoBd,SAAXc,EAAuBmC,KAAOnC,EACvCA,EAAO6M,cAAgB,EACvB7M,EAAOyM,QAAUzM,EAAO6M,aAAe,EAGzC,QAASS,GAAyBtN,GAChCA,EAAoBd,SAAXc,EAAuBmC,KAAOnC,EACvCA,EAAO8M,aAAe,EACtB9M,EAAO0M,QAAS,EAGlB,QAASW,GAAyBrN,GAChCA,EAAoBd,SAAXc,EAAuBmC,KAAOnC,EACvCA,EAAO8M,aAAe,EACtB9M,EAAO0M,OAAS1M,EAAO8M,YAAc,EZwnBvCV,EAAmCtJ,SAAW,iCAAkC,qCAAsC,mCAAoC,mCAAoC,0BAA2B,aAAc,YAAa,OAAQ,MYv2C5PjF,QAAQC,OAAO,mBACdiF,QAAQ,8BAA+BqJ,MCJ1C,WACE,YAKA,SAAS8C,KASP,QAASC,GAAuBC,EAASxO,GACvC,MAAO,IAAIyO,GAAgBD,EAASxO,GAGtC,QAASyO,GAAgBD,EAASxO,GAChC,GAAI5B,GAAQmD,IAEZnD,GAAMoQ,QAAUA,EAChBpQ,EAAMsQ,SACJ1O,UAAWA,GAbf,MAJAyO,GAAgB1M,UAAYtB,OAAOuB,OAAO2M,MAAM5M,WAChD0M,EAAgB1M,UAAUE,YAAcwM,EACxCA,EAAgB1M,UAAUlE,KAAO,mBAG/BmE,OAAQuM,GATZtR,QAAQC,OAAO,mBACdiF,QAAQ,qCAAsCmM,MCJjD,WACE,YAKA,SAASM,KASP,QAASC,GAAmBL,EAASM,EAAQC,EAAM3N,GACjD,MAAO,IAAI4N,GAAYR,EAASM,EAAQC,EAAM3N,GAGhD,QAAS4N,GAAYR,EAASM,EAAQC,EAAM3N,GAC1C,GAAIhD,GAAQmD,IAEZnD,GAAMoQ,QAAUA,EAChBpQ,EAAMsQ,SACJI,OAAQA,EACRC,KAAMA,EACN3N,OAAQA,GAfZ,MAJA4N,GAAYjN,UAAYtB,OAAOuB,OAAO2M,MAAM5M,WAC5CiN,EAAYjN,UAAUE,YAAc+M,EACpCA,EAAYjN,UAAUlE,KAAO,eAG3BmE,OAAQ6M,GATZ5R,QAAQC,OAAO,mBACdiF,QAAQ,iCAAkCyM,MCJ7C,WACE,YAKA,SAASK,KAWP,QAASC,GAAqBrR,EAAMsR,EAAaC,EAAkBC,GACjE,MAAO,IAAIC,GAAczR,EAAMsR,EAAaC,EAAkBC,GAGhE,QAASC,GAAczR,EAAMsR,EAAaC,EAAkBC,GAC1D,GAAIjR,GAAQmD,IACZnD,GAAMP,KAAOA,EACbO,EAAM+Q,YAAcA,EAEpB/Q,EAAMgR,iBAAmBA,EACzBhR,EAAMwF,UACNxF,EAAMiR,cAAgBA,GAAiB,WAAa,OAAO,GAG7D,QAAStJ,GAAMnH,GACb,GAAIR,GAAQmD,IAEAjD,UAARM,EACF3B,QAAQwB,QAAQL,EAAMwF,OAAQ,SAAS2L,EAAK3Q,GAC1CR,EAAMwF,OAAOhF,QAGfR,EAAMwF,OAAOhF,MAIjB,QAASqF,GAAIrF,EAAKyC,GAChB,GAAIjD,GAAQmD,IAEZnD,GAAMwF,OAAOhF,GAAOR,EAAMwF,OAAOhF,OACjCR,EAAMwF,OAAOhF,GAAKwJ,KAAK/G,GAGzB,QAASkL,GAAO3I,GACd,GAAIxF,GAAQmD,IAEZtE,SAAQwB,QAAQmF,EAAQ,SAASvC,GAC/BjD,EAAMwF,OAAOvC,EAAMzC,UAGrB3B,QAAQwB,QAAQmF,EAAQ,SAASvC,GAC/BjD,EAAMwF,OAAOvC,EAAMzC,KAAKwJ,KAAK/G,EAAMjC,UAKvC,QAAS4K,GAAUpL,GACjB,GAAIR,GAAQmD,IAEZ,IAAYjD,SAARM,EAAmB,CACrB,GAAIiP,IAAS,CAMb,OAJA5Q,SAAQwB,QAAQL,EAAMwF,OAAQ,SAASvC,GACrCwM,EAASA,GAAUxM,EAAMoF,OAAS,IAG7BoH,EAEP,MAA6BvP,UAAtBF,EAAMwF,OAAOhF,IAAsBR,EAAMwF,OAAOhF,GAAK6H,OAAS,EA9DzE,MANA6I,GAAcvN,UAAUE,YAAcqN,EACtCA,EAAcvN,UAAUwK,OAASA,EACjC+C,EAAcvN,UAAUgE,MAAQA,EAChCuJ,EAAcvN,UAAUkC,IAAMA,EAC9BqL,EAAcvN,UAAUiI,UAAYA,GAGlChI,OAAQkN,GAXZjS,QAAQC,OAAO,mBACdiF,QAAQ,mCAAoC8M,MCJ/C,WACE,YAKA,SAASO,GAAc3R,EAAM4R,GAC3B,MAAO,IAAIC,UAAS,KAClB,mBAAqB7R,EAAO,wCAC5B4R,GANJxS,QAAQC,OAAO,mBACZC,SAAS,gBAAiBqS,MCH/B,WACE,YAEAvS,SAAQC,OAAO,mBACZC,SAAS,eAAgB,SAASsG,EAAQkM,EAAcC,GACvD,GAAI1H,GACA2H,CACJpP,QAAOqP,eAAerM,EAAQkM,GAC5BxQ,IAAK,WAOH,MANK0Q,KAEHA,GAAO,EACP3H,EAAS0H,EAASG,KAAKtM,IAGlByE,GAIT8H,YAAY,EACZC,cAAc,SCrBtB,WACE,YAEAhT,SAAQC,OAAO,mBACZC,SAAS,cAAe,SAAS+S,GAChC,MAAOA,GAAIC,QAAQ,kBAAmB,SAAS3O,mBCLrD,WACE,YAKA,SAASY,GAAQC,GACfA,EAASC,UAAU,KAAMA,GAG3B,QAASA,GAAUC,GAKjB,QAAS+K,GAAW8C,EAAUC,EAAkBC,GAe9C,QAASC,GAAK7M,GACZ,MAAO/F,GAAGwD,QAAQuC,GACf3E,KAAK,SAASF,GAKb,MAJI5B,SAAQuT,WAAWH,IACrBA,EAAiBxR,IAGVqO,SAAS,EAAMrO,MAAOA,IAGjC,SAAS4R,GAKP,MAJIxT,SAAQuT,WAAWF,IACrBA,EAAiBG,IAGVvD,SAAS,EAAOuD,OAAQA,KAzBvC,GAAIC,GAAUzT,QAAQ+D,QAAQoP,QAQ9B,OANAnT,SAAQwB,QAAQ2R,EAAU,SAAS1M,EAAS9E,GACrC8R,EAAQC,eAAe/R,KAC1B8R,EAAQ9R,GAAO2R,EAAK7M,MAIjB/F,EAAGK,IAAI0S,GAjBhB,GAAI/S,GAAK4E,CAuCT,OArCA5E,GAAG2P,WAAa3P,EAAG2P,YAAcA,EAqC1B3P,EnBgvETyE,EAAQF,SAAW,YACnBI,EAAUJ,SAAW,amBhyErBjF,QAAQC,OAAO,mBACde,OAAOmE,MCJV,WACE,YAKA,SAASwO,KASP,QAASrT,GAA8BM,GACrC,GAAIO,GAAQmD,KACRsP,GACF,MACA,OACA,MACA,MACA,aACA,SACA,SACA,mBACA,OACA,iBACA,SACA,UACA,UAGFzS,GAAMP,KAAOA,EACbO,EAAM0S,SAEN1S,EAAM2S,cACN3S,EAAM4S,eACN5S,EAAM6S,wBACN7S,EAAM8S,cACN9S,EAAM+S,eAEN/S,EAAMgT,WAENnU,QAAQwB,QAAQoS,EAAU,SAASQ,GACjCjT,EAAM2S,WAAWM,MACjBjT,EAAM4S,YAAYK,MAClBjT,EAAM6S,qBAAqBI,MAC3BjT,EAAM8S,WAAWG,MACjBjT,EAAM+S,YAAYE,MAClBjT,EAAM0S,MAAMO,IACVxF,SAAS,EACTqB,SAAS,KAKf,QAASlG,GAAM5F,EAAQwO,GACrB,GAAIxR,GAAQmD,IAEZnD,GAAM2S,WAAW3P,GAAQgH,KAAKwH,GAGhC,QAAS3I,GAAO7F,EAAQwO,GACtB,GAAIxR,GAAQmD,IAEZnD,GAAM+S,YAAY/P,GAAQgH,KAAKwH,GAGjC,QAAS0B,GAAclQ,EAAQwO,GAC7B,GAAIxR,GAAQmD,IAEZnD,GAAM4S,YAAY5P,GAAQgH,KAAKwH,GAGjC,QAAS2B,GAAanQ,EAAQwO,GAC5B,GAAIxR,GAAQmD,IAEZnD,GAAM8S,WAAW9P,GAAQgH,KAAKwH,GAGhC,QAASjO,GAAgBP,EAAQwO,GAC/B,GAAIxR,GAAQmD,IAEZnD,GAAM6S,qBAAqB7P,GAAQgH,KAAKwH,GAvE1C,MANArS,GAA8BwE,UAAUyP,OAASF,EACjD/T,EAA8BwE,UAAU0P,MAAQF,EAChDhU,EAA8BwE,UAAUiF,MAAQA,EAChDzJ,EAA8BwE,UAAUkF,OAASA,EACjD1J,EAA8BwE,UAAUJ,gBAAkBA,EAEnDpE,EAVTN,QAAQC,OAAO,mBACdiF,QAAQ,gCAAiCyO,MCJ5C,WACE,YAKA,SAASc,GAAwCC,EAAqChU,EAAID,GAWxF,QAASkU,GAAwCC,GAC/C,MAAO,IAAIC,GAAiCD,GAG9C,QAASC,GAAiCD,GACxC,GAAIzT,GAAQmD,IAEZnD,GAAM0S,SAENa,EAAoC5B,KAAK3R,EAAOyT,GAEhD5U,QAAQwB,QAAQoT,EAAS,SAAS/C,GAChCA,EAAOlO,aAAexC,IAI1B,QAASgO,GAAYnO,GA4BnB,QAASoS,GAAiBxR,GACxByE,EAAS+I,QAAQ0F,KAAM,kBAAmB1S,KAAMR,IAGlD,QAASyR,GAAiBG,GACxBnN,EAAS+I,QAAQ0F,KAAM,kBAAmBnO,OAAQ6M,IAGpD,QAASuB,GAAS7E,GAChB/O,EAAM0S,MAAM1P,GAAUhD,EAAM0S,MAAM1P,OAClChD,EAAM0S,MAAM1P,GAAQ8L,SAAU,EAE9BjQ,QAAQwB,QAAQ0O,EAAS,SAASjF,GAC5BA,EAAOgF,WAAY,IACrB9O,EAAM0S,MAAM1P,GAAQ8L,SAAU,KAIlCjQ,QAAQwB,QAAQL,EAAMyT,QAAS,SAAS/C,GACtC7R,QAAQwB,QAAQqQ,EAAOoC,WAAW9P,GAAS,SAAS6Q,GAClD3O,EAAS+I,QAAQ0F,KAAM,QAASnO,OAAQqO,EAAKlC,KAAK3R,EAAOH,EAAQkP,QAIrE,IAAI9N,GACAuE,IAEJ3G,SAAQwB,QAAQ0O,EAAS,SAASjF,GAC5BA,EAAOgF,WAAY,EACrB7N,EAAO6I,EAAOrJ,MAEd+E,EAAOwE,MACLxJ,IAAKwC,EACLhC,OAAQ8I,EAAOuI,WAKjB7M,EAAO6C,OAAS,EAClBnD,EAAShC,QAAQjC,KAAMA,MAAY4H,OAAQA,EAAQrD,OAAQA,IAE3DN,EAASnC,SAAS9B,KAAMA,MAAY4H,OAAQA,EAAQrD,OAAQA,IAIhE,QAASqD,KACPhK,QAAQwB,QAAQL,EAAMyT,QAAS,SAAS/C,GACtC7R,QAAQwB,QAAQqQ,EAAOqC,YAAY/P,GAAS,SAAS6Q,GACnD3O,EAAS+I,QAAQ0F,KAAM,SAAUnO,OAAQqO,EAAKlC,KAAK3R,EAAOH,SAKhE,QAASiU,GAAStO,GAChBlG,EAAK2D,MAAM,8CAEXiC,EAAShC,QAAQ2F,OAAQhK,QAAQkV,KAAMvO,OAAQA,IAnFjD,GAAIxF,GAAQmD,KACR6O,KACA9M,EAAW3F,EAAG4F,QACdnC,EAASnD,EAAOmD,MAmFpB,OAjFAuQ,GAAoC5P,UAAUqK,YAAY2D,KAAK3R,EAAOH,GAEtEhB,QAAQwB,QAAQL,EAAMyT,QAAS,SAAS/C,GACtC7R,QAAQwB,QAAQqQ,EAAOiC,WAAW3P,GAAS,SAAS6Q,GAClD3O,EAAS+I,QAAQ0F,KAAM,QAAS1S,KAAM4S,EAAKlC,KAAK3R,EAAOH,SAI3DhB,QAAQwB,QAAQL,EAAMyT,QAAS,SAAS/C,GACtC7R,QAAQwB,QAAQqQ,EAAOkC,YAAY5P,GAAS,SAAS6Q,GACnD3O,EAAS+I,QAAQ0F,KAAM,SAAU1S,KAAM4S,EAAKlC,KAAK3R,EAAOH,SAI5DhB,QAAQwB,QAAQL,EAAMyT,QAAS,SAAS/C,GACtC7R,QAAQwB,QAAQqQ,EAAOmC,qBAAqB7P,GAAS,SAAS6Q,GAC5D7B,EAAShI,KAAK6J,EAAKlC,KAAK3R,EAAOH,QAInCN,EAAG2P,WAAW8C,EAAUC,EAAkBC,GAAkBvR,KAAKiT,EAAUE,GA6DpE5O,EAASI,QA3GlB,MALAoO,GAAiC/P,UAAYtB,OAAOuB,OAAO2P,EAAoC5P,WAC/F+P,EAAiC/P,UAAUE,YAAc6P,EAEzDA,EAAiC/P,UAAUqK,YAAcA,GAGvDpK,OAAQ4P,GrBs6EZF,EAAwCxP,SAAW,sCAAuC,KAAM,QqBj7EhGjF,QAAQC,OAAO,mBACdiF,QAAQ,mCAAoCuP,MCJ/C,WACE,YAKA,SAASU,GAA2C1U,GAMlD,QAASiU,GAAoCE,GAC3C,GAAIzT,GAAQmD,IAEZnD,GAAMyT,QAAUA,EAGlB,QAASzF,GAAYnO,GACnB,GAAIG,GAAQmD,IAEZ7D,GAAK2K,MAAM,qBAAsBjK,EAAMyC,SAASZ,OAAOG,KAAMnC,GAEvCK,SAAlBL,EAAOmD,QACT1D,EAAK2D,MAAM,qCAAuCpD;CAdtD,MAFA0T,GAAoC5P,UAAUqK,YAAcA,EAErDuF,EtBwiFTS,EAA2ClQ,SAAW,QsB/iFtDjF,QAAQC,OAAO,mBACdiF,QAAQ,sCAAuCiQ,MCJlD,WACE,YAKA,SAASC,GACP3U,EACAD,EACAuL,EACAsJ,GAOA,QAASC,GAA4BtS,GACnC,MAAO,IAAIuS,GAAqBvS,GAGlC,QAASuS,GAAqBvS,GAC5B,GAAI7B,GAAQmD,KACRkR,EAAUxS,EAAOwS,WACrBxS,GAAOwS,QAAUA,EACjBA,EAAQtT,IAAMc,EAAOwS,QAAQtT,QAC7BsT,EAAQzU,IAAMiC,EAAOwS,QAAQzU,QAE7BI,EAAMG,QACJY,OACAnB,QAGgB,UAAdiC,EAAOX,GACTW,EAAOX,GAAK0J,EACW,QAAd/I,EAAOX,GAChBW,EAAOX,IACLoT,SAAUzV,QAAQkV,KAClBjL,SAAUjK,QAAQ0V,UAEX1V,QAAQiE,SAASjB,EAAOX,IAC5BrC,QAAQuT,WAAWvQ,EAAOX,GAAGoT,YAChCzS,EAAOX,GAAGoT,SAAWzV,QAAQkV,MAG/BlS,EAAOX,IACLoT,SAAUzV,QAAQkV,KAClBjL,SAAUjK,QAAQ2V,SAAS1T,KAAK,MAAM,IAI1CjC,QAAQwB,QAAQwB,EAAOC,cAAe,SAAS2S,EAAYC,GACzD,GAAIC,GAAgBT,EAAyBtQ,OAAO6Q,EAAYC,EAAU7S,EAAOG,KACjFH,GAAOC,cAAc4S,GAAYC,EAC7BA,EAAc3F,YAAa,IAC7BqF,EAAQtT,IAAIiJ,KAAK0K,GACU,WAAvBC,EAAc3S,MAChBqS,EAAQzU,IAAIoK,KAAK0K,MAKvB7V,QAAQyD,OAAOtC,EAAO6B,GAElBwS,EAAQtT,IAAIsH,OAAS,IACvBrI,EAAMG,OAAOY,IAAIsT,QAAUA,EAAQtT,KAGjCsT,EAAQzU,IAAIyI,OAAS,IACvBrI,EAAMG,OAAOP,IAAIyU,QAAUA,EAAQzU,KAxDvC,OACEgE,OAAQuQ,GvBmkFZF,EAA4BnQ,SAAW,OAAQ,YAAa,QAAS,4BuB9kFrEjF,QAAQC,OAAO,mBACdiF,QAAQ,uBAAwBkQ,MCJnC,WACE,YAKA,SAASW,GAAgCtV,EAAMD,GAM7C,QAASwV,GAAgCJ,EAAYC,EAAU1S,GAC7D,MAAO,IAAIkS,GAAyBO,EAAYC,EAAU1S,GAG5D,QAASkS,GAAyBO,EAAYC,EAAU1S,GACtD,GAAIhC,GAAQmD,IAERtE,SAAQsN,SAASsI,IACnBzU,EAAM0C,MAAQrD,EAAUyV,OAAOJ,GAC/B1U,EAAMgC,KAAOyS,EACbzU,EAAMgJ,aAAc,EACpBhJ,EAAMyJ,WAAazH,IAEK9B,SAApBuU,EAAWzS,MACb1C,EAAK2D,MAAM,kCAAmCwR,EAAYC,GAGpC,YAApBD,EAAWzS,MAA0C,WAApByS,EAAWzS,MAC9C1C,EAAK2D,MAAM,mCAAoCwR,EAAWzS,KAAM,8BAGlEhC,EAAM0C,MAAQ+R,EAAW/R,OAASrD,EAAUyV,OAAOJ,GACnD1U,EAAMgC,KAAOyS,EAAWzS,KACxBhC,EAAMgJ,YAAcyL,EAAWzL,cAAe,EAEhB9I,SAA1BuU,EAAWhL,WACbzJ,EAAMyJ,WAA4B,YAAfzJ,EAAMgC,KAAqB3C,EAAU0V,SAAS/S,GAAQA,EAEzEhC,EAAMyJ,WAAagL,EAAWhL,WAGhCzJ,EAAMgP,SAAWyF,EAAWzF,WAAY,GAnC5C,OACEpL,OAAQiR,GxBqpFZD,EAAgC9Q,SAAW,OAAQ,awB3pFnDjF,QAAQC,OAAO,mBACdiF,QAAQ,2BAA4B6Q,MCJvC,WACE,YAKA,SAASI,GACPC,EACAb,EACAtJ,EACAoK,EACA5H,EACAhO,EACAC,GAaA,QAAS4V,GAA8BtT,EAAQW,GAC7C,MAAO,IAAI4S,GAAuBvT,EAAQW,GAQ5C,QAAS4S,GAAuBvT,EAAQW,GAwBtC,QAASO,GAAQJ,GACf2K,EAAWY,MAAM,kBAAoBlO,EAAMgC,KAAO,iBAAkB,WAAYW,GAChF3C,EAAMmI,MAAMkD,SAAS1I,EAAS1B,MAC9BjB,EAAMqV,aAAc,EAEpB1S,EAASkG,SAGX,QAAS3F,GAAOP,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMgC,KAAO,iBAAkB,WAAYW,GAChFA,EAASkG,SACT7I,EAAMqV,aAAc,EAGtB,QAASpH,GAAOtL,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMgC,KAAO,iBAAkB,SAAUW,GAtChF,GAAI3C,GAAQmD,KACRtD,GACFmD,OAAQ,OAGVhD,GAAM6B,OAASuS,EAAqBxQ,OAAO/B,GAC3C7B,EAAMmI,MAAQ2C,EAA4BlH,OAAO5D,GAEjDA,EAAMwC,aAAeA,EACrBxC,EAAMwC,aAAaC,SAAWzC,EAE9BA,EAAMmL,aAAe8J,EAAoB9J,aACvCnL,EAAM6B,OACN7B,GAGFA,EAAMqV,aAAc,EACpBrV,EAAMgC,KAAOhC,EAAM6B,OAAOG,KAE1BQ,EAAaC,SAAWzC,EAExBA,EAAMwC,aAAawL,YAAYnO,GAAQc,KAAKoC,EAASG,EAAQ+K,GA0B/D,QAASlN,GAAIG,EAAIf,GACf,GAAIH,GAAQmD,IAEZ,KAAKnD,EAAM6B,OAAOX,GAAG4H,SAAS5H,GAC5B,MAAO3B,GAAG2D,QAAQsC,SAAUC,OAAQ,EAAGC,WAAY,gBAGrD,IAAI1E,GAAShB,EAAMmI,MAAMpH,IAAIG,EAI7B,OAFAF,GAAOsE,QAAUtE,EAAOuN,QAAQpO,GAEzBa,EAQT,QAASpB,GAAIO,GACX,GAAIH,GAAQmD,IACZhD,GAAStB,QAAQyD,UAAWtC,EAAM6B,OAAO1B,OAAOP,IAAKO,EAErD,IAAImL,GAAa4J,EAAyBtR,OACxC5D,EACAG,EAKF,OAFAmL,GAAWhG,QAAUgG,EAAWgK,QAEzBhK,EAST,QAASnK,GAAOD,GACd,GAAIlB,GAAQmD,KACRnC,EAAShB,EAAMmI,MAAMhH,OAAOD,EAEhC,OAAOF,GAAOG,SAOhB,QAASqC,KACP,GAAIxD,GAAQmD,KACRrB,IAEJjD,SAAQwB,QAAQL,EAAM6B,OAAOC,cAAe,SAASyT,EAAoBC,GACvC,WAA5BD,EAAmBvT,KACrBF,EAAc0T,IACZvU,KAAM,MAE6B,YAA5BsU,EAAmBvT,OAC5BF,EAAc0T,IACZvU,WAKN,IAAIA,IACFe,KAAMhC,EAAMgC,KACZd,GAAIlB,EAAM6B,OAAOX,GAAGoT,WACpB3S,cACAG,cAAeA,GAGbjC,GACF0L,OAAK,EACLC,gBAAc,EACdC,QAAQ,EACRC,UAAU,EACVN,gBAAgB,GAGdpK,EAAShB,EAAMmL,aAAalK,EAAMpB,EAItC,OAFAyN,GAAWY,MAAM,kBAAoBlO,EAAMgC,KAAO,uBAAwB,WAAYhB,GAE/EA,EAOT,QAASyU,KAaP,QAAS1S,GAAQJ,GACf2K,EAAWY,MAAM,kBAAoBlO,EAAMgC,KAAO,uBAAwB,WAAYW,GACtFA,EAASkG,SAET3D,EAASnC,QAAQJ,GAGnB,QAASO,GAAOP,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMgC,KAAO,uBAAwB,WAAYW,GACtFA,EAASkG,SAET3D,EAAShC,OAAOP,GAGlB,QAASsL,GAAOtL,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMgC,KAAO,uBAAwB,SAAUW,GAEpFuC,EAAS+I,OAAOtL,GA7BlB,GAAI3C,GAAQmD,KACR+B,EAAW3F,EAAG4F,QACdtF,GACFmD,OAAQ,aAOV,OAJAhD,GAAMmI,MAAMR,QAEZ3H,EAAMwC,aAAawL,YAAYnO,GAAQc,KAAKoC,EAASG,EAAQ+K,GAEtD/I,EApKT,MAPAkQ,GAAuBzR,UAAU5C,IAAMA,EACvCqU,EAAuBzR,UAAU/D,IAAMA,EACvCwV,EAAuBzR,UAAUxC,OAASA,EAC1CiU,EAAuBzR,UAAUH,WAAaA,EAE9C4R,EAAuBzR,UAAU8R,WAAaA,GAG5C7R,OAAQuR,GzB0rFZH,EAA8BlR,SAAW,sBAAuB,uBAAwB,8BAA+B,2BAA4B,aAAc,OAAQ,MyB9sFzKjF,QAAQC,OAAO,mBACdiF,QAAQ,yBAA0BiR,MCJrC,WACE,YAKA,SAASC,GACPzH,EACA4G,EACAhD,EACA/R,EACAC,GAOA,QAASoW,GAAmBC,EAAWlT,GA8BrC,QAAS0I,GAAalK,EAAMiK,EAAW0K,GACrC,MAAO,IAAIC,GAAM5U,EAAMiK,EAAW0K,GA9BpC,GAAIE,GAAkBzW,EAAUyV,OAAOa,EAAU3T,KAAM,GAEnD6T,EAAQzE,EAAc0E,EAAiB,SAAS7U,EAAMpB,EAAQqL,GAChE,GAAIlL,GAAQmD,IAERlC,GAAKe,OAAShC,EAAM6B,OAAOG,MAC7B1C,EAAK2D,MAAM,4CAA6ChC,EAAKe,KAAM,eAAgBhC,EAAM6B,OAAOG,MAGlGwL,EAA4BmE,KAAK3R,EAAOiB,EAAMpB,EAAQqL,GAEtDlL,EAAM0B,KAAKgL,OAAS1M,GAgBtB,OAbA6V,GAAMlS,UAAYtB,OAAOuB,OAAO4J,EAA4B7J,WAC5DkS,EAAMlS,UAAUE,YAAcgS,EAE9BA,EAAMlS,UAAU9B,OAAS8T,EACzBE,EAAMlS,UAAUlB,SAAWA,EAC3BoT,EAAMlS,UAAUqK,YAAcvL,EAASD,aAAawL,YAAYlN,KAAK2B,EAASD,cAE9E3D,QAAQwB,QAAQsV,EAAUI,UAAW,SAASC,EAAcC,GAC1DJ,EAAMlS,UAAUsS,GAAoB,WAClC,MAAOD,GAAa3S,MAAMF,KAAMG,cAI7B6H,EAhCT,OACEA,aAAcuK,G1Bs5FlBT,EAAoBnR,SAAW,8BAA+B,uBAAwB,gBAAiB,YAAa,Q0Bl6FpHjF,QAAQC,OAAO,mBACdiF,QAAQ,sBAAuBkR,MCJlC,WACE,YAKA,SAASiB,GACPhX,EACAmO,EACAC,EACAC,EACAhO,GAYA,QAAS4W,GAAgC1T,EAAUtC,GACjD,MAAO,IAAI+U,GAAyBzS,EAAUtC,GAQhD,QAAS+U,GAAyBzS,EAAUtC,GA8B1C,QAASgB,GAAOiV,EAAO3Q,EAAQzE,GAC7B,GAAIoJ,EAEW,cAAX3E,GAAwCvF,SAAfF,EAAMiB,OACjCmJ,EAAQpK,EAAMiB,KAAK4F,QAAQ7F,GACvBoJ,EAAQ,KACVpK,EAAMiB,KAAKoJ,OAAOD,EAAO,GACzBpK,EAAMyC,SAAS0F,MAAM8D,YAAYjM,EAAMiB,QAK7C,QAAS0G,KACP3H,EAAMiB,KAAOf,OACbF,EAAM0L,UAAW,EAGnB,QAAS7F,GAAIuQ,EAAO3Q,EAAQzE,GACX,aAAXyE,IACFzF,EAAMiB,KAAOjB,EAAMiB,SACnBjB,EAAMiB,KAAK+I,KAAKhJ,IAIpB,QAASqV,KACPC,IACAC,IACAC,IAxDF,GAAIxW,GAAQmD,IAEZnD,GAAMyC,SAAWA,EACjBzC,EAAMgC,KAAOS,EAASZ,OAAOG,KAC7BhC,EAAMG,OAASA,MAEfH,EAAMwF,QACJjC,gBAAiB8J,EAAiCzJ,OAChD,SACA,6BACA1E,IAIJc,EAAMiB,KAAOjB,EAAMyC,SAAS0F,MAAMiC,MAAMpK,EAAMG,QAE9CH,EAAMyN,SAAU,EAChBzN,EAAM6N,aAAe,EACrB7N,EAAAA,iBAAqB,EACrBA,EAAM0L,SAA0BxL,SAAfF,EAAMiB,KAEvBjB,EAAMsF,QAAU/F,EAAGwD,QAAQ/C,EAE3B,IAAIsW,GAAiBhJ,EAAWmJ,IAAI,kBAAoBzW,EAAMgC,KAAO,iBAAkBb,GACnFoV,EAAiBjJ,EAAWmJ,IAAI,kBAAoBzW,EAAMgC,KAAO,uBAAwB2F,GACzF6O,EAAclJ,EAAWmJ,IAAI,kBAAoBzW,EAAMgC,KAAO,cAAe6D,EAEjFyH,GAAWmJ,IAAI,WAAYJ,GAqC7B,QAASzK,KACP,GAAI5L,GAAQmD,KACRsM,GAAS,CAMb,OAJA5Q,SAAQwB,QAAQL,EAAMwF,OAAQ,SAASvC,GACrCwM,EAASxM,EAAM2I,aAAe6D,IAGzBA,EAQT,QAAS1O,GAAIG,EAAIf,GACf,GAAIH,GAAQmD,IAEZ,OAAOnD,GAAMyC,SAAS1B,IAAIG,EAAIf,GAOhC,QAASmV,KAmBP,QAASvS,GAAQJ,GAkBf,QAAS6L,GAAoBxN,GAG3B,MAFAyN,GAA0BzN,GAEnBA,EAAOgN,aACZhL,OAAQ,UACRhC,OAAQA,IAFHA,WAGI0N,EAA0B5N,KAAKE,EAAQd,SAGpD,QAASyO,GAAgBC,GACvB/P,QAAQwB,QAAQuO,EAAkB,SAASC,EAAWrO,GAChDqO,EAAUC,WAAY,IACxBxB,EAAWY,MAAM,kBAAoBa,EAAQC,SAASxO,GAAKS,KAAKe,KAAO,kBAAmB,WAAY+M,EAAQC,SAASxO,GAAMqO,GAE7HA,EAAUpO,MAAMoI,YAIpB3D,EAASnC,QAAQJ,EAAS1B,KAAKmN,MAnCjC,GAAIW,GAAU3K,EAAS6K,iBAAiBtM,EAAS1B,KACjDqM,GAAWY,MAAM,kBAAoBlO,EAAMgC,KAAO,oBAAqB,WAAYhC,EAAO2C,GAC1FpD,EAAG2P,WAAWH,EAAQC,SAAShD,IAAIwC,IAAsB7N,KAAKgO,EAAiBzJ,EAAShC,QAExFrE,QAAQwB,QAAQL,EAAMiB,KAAMyN,GAE5B1O,EAAMiB,KAAO8N,EAAQ9N,KACrBjB,EAAM8P,MAAQnN,EAAS1B,KAAK6O,MAE5B9P,EAAMkL,UAAYyC,KAAKC,MACvB5N,EAAAA,iBAAqB,EACrBA,EAAM0L,UAAW,EAEjB1L,EAAMyC,SAAS0F,MAAM8D,YAAYjM,EAAMiB,MACvC0B,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAwB/C,QAAStC,GAAOP,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMgC,KAAO,oBAAqB,WAAYhC,EAAO2C,GAE1F9D,QAAQwB,QAAQL,EAAMiB,KAAMyN,GAC5B/L,EAASkG,SACT7I,EAAMwF,OAAOjC,gBAAgB4K,OAAOxL,EAAS6C,QAC7CN,EAAShC,OAAOlD,GAGlB,QAASiO,GAAOtL,GACd2K,EAAWY,MAAM,kBAAoBlO,EAAMgC,KAAO,oBAAqB,SAAUhC,EAAO2C,GAExFuC,EAAS+I,OAAOtL,GAtElB,GAAI3C,GAAQmD,KACR+B,EAAW3F,EAAG4F,QACdf,EAAWmJ,EAAUxM,IAAI,YACzBlB,GACFmD,OAAQ,MACR7C,OAAQH,EAAMG,OAWhB,OARAsO,GAA0BzO,GAE1BnB,QAAQwB,QAAQL,EAAMiB,KAAMwN,GAE5BzO,EAAMyC,SAASD,aAAawL,YAAYnO,GACrCc,KAAKoC,EAASG,EAAQ+K,GADzBjO,WAEW0O,EAA0B5N,KAAKd,EAAOE,SAE1CgF,EAASI,QAzHlB,MALA4P,GAAyBvR,UAAU2R,MAAQA,EAC3CJ,EAAyBvR,UAAU4K,QAAU+G,EAC7CJ,EAAyBvR,UAAU5C,IAAMA,EACzCmU,EAAyBvR,UAAUiI,UAAYA,GAG7ChI,OAAQuS,GAmLZ,QAAS1H,GAA0BzN,GACjCA,EAAoBd,SAAXc,EAAuBmC,KAAOnC,EACvCA,EAAO6M,cAAgB,EACvB7M,EAAOyM,SAAU,EAGnB,QAASiB,GAA0B1N,GACjCA,EAAoBd,SAAXc,EAAuBmC,KAAOnC,EACvCA,EAAO6M,cAAgB,EACvB7M,EAAOyM,QAAUzM,EAAO6M,aAAe,E3B6wFzCqI,EAAgCpS,SAAW,iCAAkC,mCAAoC,aAAc,YAAa,M2B19F5IjF,QAAQC,OAAO,mBACdiF,QAAQ,2BAA4BmS,MCJvC,WACE,Y5BqrGA,SAASQ,GAAgBlK,G4B3qGvB,QAASmK,GACPrX,EACA8V,EACA1B,GAcA,QAASkD,GAAY/U,EAAQW,GAC3B,GAAIC,GAAW2S,EAAuBxR,OAAO/B,EAAQW,EAErDqU,GAAOhV,EAAOG,MAAQS,EACtBqU,EAAM9M,KAAKnI,EAAOG,MAGpB,QAASiO,GAAYjO,GACnB,MAAO6U,GAAO7U,GAGhB,QAAS+U,KACP,MAAOF,GAGT,QAASG,KACP,MAAOF,GAGT,QAASrB,KACP5W,QAAQwB,QAAQwW,EAAQ,SAASpU,GAC/BA,EAASgT,eAIb,QAASwB,GAAaxX,EAAMqN,GAC1B,MAAKjO,SAAQsN,SAAS1M,IAGqBS,SAAhCsM,EAAWmD,WAAWlQ,IAC/BH,EAAK4X,KAAK,wBAAyBzX,QAGrC+M,EAAWmD,WAAWlQ,GAAQqN,QAN5BxN,GAAK2D,MAAM,iCAAkCxD,GASjD,QAASwP,GAAiBF,GACxB,GAAIoI,IACFlW,QACA+N,YAGF,IAAgB9O,SAAZ6O,EAEF,WADAzP,GAAK2D,MAAM,0BAA4B8L,EAIzC,IAAIlP,IACF0L,OAAK,EACLC,gBAAc,EACdC,QAAQ,EACRC,UAAU,EACVN,gBAAgB,EAelB,OAZAvM,SAAQwB,QAAQ0O,EAAQC,SAAU,SAAS/N,GACzCkW,EAAQnI,SAAShF,KAAKiG,EAAYhP,EAAKe,MAAMmG,MAAM6C,YAAY/J,EAAMpB,MAGnEhB,QAAQ+D,QAAQmM,EAAQ9N,MAC1BpC,QAAQwB,QAAQ0O,EAAQ9N,KAAM,SAASA,GACrCkW,EAAQlW,KAAK+I,KAAKiG,EAAYhP,EAAKe,MAAMmG,MAAM6C,YAAY/J,EAAMpB,MAEzCK,SAAjB6O,EAAQ9N,MACjBkW,EAAQlW,KAAK+I,KAAKiG,EAAYlB,EAAQ9N,KAAKe,MAAMmG,MAAM6C,YAAY+D,EAAQ9N,KAAMpB,IAG5EsX,EA/ET,OACEP,YAAaA,EACb3G,YAAaA,EACbwF,WAAYA,EACZsB,aAAcA,EACdC,cAAeA,EACfC,aAAcA,EACdG,mBAAoB1D,EAEpBzE,iBAAkBA,G5B8pGtB0H,EAAe7S,SAAW,OAAQ,yBAA0B,mC4BhrG5D,IAAI+S,MACAC,IACJ3T,MAAKkU,KAAOV,E5ByqGdD,EAAgB5S,SAAW,c4B/qG3BjF,QAAQC,OAAO,mBACdwY,SAAS,WAAYZ,MCJxB,WACE,YAEA7X,SAAQC,OAAO,mBACde,QAAA,eAAO,SAAS0X,GACfA,EAAaC,cAAa,MAE3BC,KAAA,aAAA,KAAI,SAASjL,EAAYjN,GACxBiN,EAAWkL,QAAUnY","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  /* global Parse: false */\n  angular.module('angular-jsonapi-parse', ['angular-jsonapi'])\n    .constant('Parse', Parse);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-parse')\n  .factory('AngularJsonAPISourceParse', AngularJsonAPISourceParseWrapper);\n\n  function AngularJsonAPISourceParseWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    pluralize,\n    Parse,\n    $log,\n    $q\n  ) {\n\n    AngularJsonAPISourceParse.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceParse.prototype.constructor = AngularJsonAPISourceParse;\n    AngularJsonAPISourceParse.prototype.initialize = initialize;\n\n    return {\n      create: AngularJsonAPISourceParseFactory\n    };\n\n    function AngularJsonAPISourceParseFactory(name, table) {\n      return new AngularJsonAPISourceParse(name, table);\n    }\n\n    function AngularJsonAPISourceParse(name, table) {\n      var _this = this;\n\n      _this.ParseObject = Parse.Object.extend(table);\n      _this.type = pluralize(table).charAt(0).toLowerCase() + pluralize(table).slice(1);\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('update', update);\n      _this.synchronization('add', update);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        var query = new Parse.Query(_this.ParseObject);\n\n        if (config.params.limit !== undefined) {\n          query.limit(config.params.limit);\n        }\n\n        angular.forEach(config.params.filter, function(filter) {\n          query.equalTo(filter.key, filter.value);\n        });\n\n        return query.find().then(resolveParse, rejectParse.bind(null, 'all'));\n      }\n\n      function get(config) {\n        var query = new Parse.Query(_this.ParseObject);\n        return query.get(config.object.data.id).then(resolveParse, rejectParse.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        var object = new _this.ParseObject();\n        object.set('id', config.object.data.id);\n        return object.destroy().then(resolveParse, rejectParse.bind(null, 'remove'));\n      }\n\n      function update(config) {\n        var object = toParseObject(config.object);\n        return object.save(null).then(resolveParse, rejectParse.bind(null, 'update'));\n      }\n\n      function toParseObject(object) {\n        var parseObject = new _this.ParseObject();\n        angular.forEach(object.form.data.attributes, function(attribute, key) {\n          parseObject.set(key, attribute);\n        });\n\n        angular.forEach(object.schema.relationships, function(relationship, key) {\n          if (relationship.type === 'hasOne'\n            && object.form.data.relationships[key].data !== null\n            && object.form.data.relationships[key].data !== undefined\n          ) {\n            var table = pluralize(key, 1).charAt(0).toUpperCase() + pluralize(key, 1).slice(1);\n            var parsePointer = new (Parse.Object.extend(table))();\n            parsePointer.set('id', object.form.data.relationships[key].data.id);\n            parseObject.set(key, parsePointer);\n          }\n        });\n\n        return parseObject;\n      }\n\n      function fromParseObject(object) {\n        var relationships = _this.synchronizer.resource.schema.relationships;\n        object.type = _this.type;\n        object.relationships = object.relationships || [];\n        angular.forEach(relationships, function(relationship, key) {\n          if (object.attributes[key] && relationship.type === 'hasOne') {\n            object.relationships[key] = {\n              data: {\n                type: relationship.model,\n                id: object.attributes[key].id\n              }\n            };\n          }\n        });\n\n        return object;\n      }\n\n      function resolveParse(response) {\n        if (angular.isArray(response)) {\n          angular.forEach(response, function(elem, key) {\n            response[key] = fromParseObject(elem);\n          });\n        } else if (angular.isObject(response)) {\n          response = fromParseObject(response);\n        }\n\n        return $q.resolve({\n          data: response\n        });\n      }\n\n      function rejectParse(action, response) {\n        $log.error('Parse error for', action, response);\n        return $q.reject(response);\n      }\n    }\n\n    function initialize(appId, jsKey) {\n      Parse.initialize(appId, jsKey);\n    }\n  }\n})();\n",null,"(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-parse')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceParse) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceLocal = AngularJsonAPISourceParse;\n\n    return $jsonapi;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi']);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .factory('AngularJsonAPISourceRest', AngularJsonAPISourceRestWrapper);\n\n  function AngularJsonAPISourceRestWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISourceRest.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceRest.prototype.constructor = AngularJsonAPISourceRest;\n\n    return {\n      create: AngularJsonAPISourceRestFactory,\n      encodeParams: encodeParams,\n      decodeParams: decodeParams\n    };\n\n    function AngularJsonAPISourceRestFactory(name, url) {\n      return new AngularJsonAPISourceRest(name, url);\n    }\n\n    function AngularJsonAPISourceRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSourceError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSourceError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n\n    function encodeParams(params) {\n      var encodedParams = {};\n\n      if (params === undefined) {\n        return {};\n      }\n\n      angular.forEach(params, function(paramValue, paramKey) {\n        if (angular.isArray(paramValue)) {\n          encodedParams[paramKey] = encodeValue(paramValue);\n        } else if (angular.isObject(paramValue)) {\n          angular.forEach(paramValue, function(paramInnerValue, paramInnerKey) {\n            encodedParams[paramKey + '[' + paramInnerKey + ']'] = encodeValue(paramInnerValue);\n          });\n        } else {\n          encodedParams[paramKey] = paramValue;\n        }\n      });\n\n      return encodedParams;\n\n      function encodeValue(argument) {\n        if (angular.isArray(argument)) {\n          return argument.join(',');\n        } else {\n          return argument;\n        }\n      }\n    }\n\n    function decodeParams(params) {\n      var decodedParams = {};\n\n      angular.forEach(params, function(value, key) {\n        var objectKeyStart = key.indexOf('[');\n        value = value.split(',');\n\n        if (objectKeyStart > -1) {\n          var objectKey = key.substr(0, objectKeyStart);\n          var objectElementKey = key.substr(objectKeyStart + 1, key.indexOf(']') - objectKeyStart - 1);\n\n          decodedParams[objectKey] = decodedParams[objectKey] || {};\n          decodedParams[objectKey][objectElementKey] = value;\n        } else {\n          decodedParams[key] = value;\n        }\n      });\n\n      return decodedParams;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceRest) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceRest = AngularJsonAPISourceRest;\n\n    return $jsonapi;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi']);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .factory('AngularJsonAPISourceLocal', AngularJsonAPISourceLocalWrapper);\n\n  function AngularJsonAPISourceLocalWrapper(\n    AngularJsonAPISourcePrototype,\n    $window,\n    $q\n  ) {\n    var size = {\n      max: 0,\n      all: 0,\n      limit: 5200000,\n      list: {}\n    };\n\n    AngularJsonAPISourceLocal.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceLocal.prototype.constructor = AngularJsonAPISourceLocal;\n\n    return {\n      create: AngularJsonAPISourceLocalFactory,\n      size: size\n    };\n\n    function AngularJsonAPISourceLocalFactory(name, prefix) {\n      return new AngularJsonAPISourceLocal(name, prefix);\n    }\n\n    function AngularJsonAPISourceLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        var key = prefix + '.' + type;\n\n        size.all -= size.list[key];\n        delete size.list[key];\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.removeItem(key);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        var json = cache.toJson();\n        var key = prefix + '.' + type;\n\n        size.list[key] = size.list[key] === undefined ? 0 : size.list[key];\n        size.all += json.length - size.list[key];\n        size.list[key] = json.length;\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.setItem(key, json);\n      }\n\n      function objectMaxKey(object) {\n        return Object.keys(object).reduce(function(m, k) {\n          return object[k] > object[m] ? k : m;\n        }, Object.keys(object)[0]);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceLocal) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceLocal = AngularJsonAPISourceLocal;\n\n    return $jsonapi;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target, form);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target, form);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, form);\n        return [];\n      } else {\n        return __processRemove(object, key, target, form);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target, form);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema === undefined) {\n        $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n        $log.error('For one side relationships set schema.reflection to false');\n        return [];\n      } else if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object, form)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target, form);\n        __addHasMany(target, reflectionKey, object, form);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target, form);\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema !== undefined) {\n          if (oldReflectionSchema.type === 'hasOne') {\n            __removeHasOne(oldReflection, reflectionKey, object, form);\n          } else if (oldReflectionSchema.type === 'hasMany') {\n            __removeHasMany(oldReflection, reflectionKey, object, form);\n          }\n\n          result.push(__wrapResults(oldReflection, reflectionKey, object));\n        } else {\n          $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n          $log.error('For one side relationships set schema.reflection to false');\n        }\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n        if (reflectionSchema !== undefined) {\n          if (reflectionSchema.type === 'hasOne') {\n            __addHasOne(target, reflectionKey, object, form);\n          } else if (reflectionSchema.type === 'hasMany') {\n            __addHasMany(target, reflectionKey, object, form);\n          }\n\n          result.push(__wrapResults(target, reflectionKey, object));\n        } else {\n          $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n          $log.error('For one side relationships set schema.reflection to false');\n        }\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target, form) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target, form);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target, form);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema !== undefined) {\n        if (reflectionSchema.type === 'hasOne') {\n          __removeHasOne(target, reflectionKey, object, form);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __removeHasMany(target, reflectionKey, object, form);\n        }\n      } else {\n        $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n        $log.error('For one side relationships set schema.reflection to false');\n        return [];\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, form) {\n      $log.debug('addHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, form) {\n      $log.debug('addHasMany', object, key, target);\n\n      var linkData = toLinkData(target);\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, form) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, form) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (form === false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n      params = params || {};\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this)).filter(filter);\n\n      function filter(argument) {\n        var filterParams  = params.filter;\n        var valid = true;\n\n        angular.forEach(filterParams, function(constraint) {\n          valid = valid && argument.data.attributes[constraint.key] === constraint.value;\n        });\n\n        return valid;\n      }\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && _this.resource.schema.id.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && _this.resource.schema.id.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this.parent, key, target, oneWay, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this.parent, key, target, oneWay, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.promise = $q.resolve(_this);\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(response.data.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response.data.meta);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSourceError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = _this.data;\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        deferred.resolve();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve();\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve();\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!object.schema.id.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      object.data.links = validatedData.links;\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          if (object.data.relationships[key] === undefined) {\n            object.data.relationships[key] = {data: undefined};\n          }\n\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSourceError', AngularJsonAPIModelSourceErrorWrapper);\n\n  function AngularJsonAPIModelSourceErrorWrapper() {\n    SourceError.prototype = Object.create(Error.prototype);\n    SourceError.prototype.constructor = SourceError;\n    SourceError.prototype.name = 'SourceError';\n\n    return {\n      create: SourceErrorFactory\n    };\n\n    function SourceErrorFactory(message, source, code, action) {\n      return new SourceError(message, source, code, action);\n    }\n\n    function SourceError(message, source, code, action) {\n      var _this = this;\n\n      _this.message = message;\n      _this.context = {\n        source: source,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('namedFunction', namedFunction);\n\n  function namedFunction(name, fn) {\n    return new Function('fn',\n      'return function ' + name + '(){ return fn.apply(this,arguments)}'\n    )(fn);\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$q', decorator);\n  }\n\n  function decorator($delegate) {\n    var $q = $delegate;\n\n    $q.allSettled = $q.allSettled || allSettled;\n\n    function allSettled(promises, resolvedCallback, rejectedCallback) {\n      // Implementation of allSettled function from Kris Kowal's Q:\n      // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n      // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n      var wrapped = angular.isArray(promises) ? [] : {};\n\n      angular.forEach(promises, function(promise, key) {\n        if (!wrapped.hasOwnProperty(key)) {\n          wrapped[key] = wrap(promise);\n        }\n      });\n\n      return $q.all(wrapped);\n\n      function wrap(promise) {\n        return $q.resolve(promise)\n          .then(function(value) {\n            if (angular.isFunction(resolvedCallback)) {\n              resolvedCallback(value);\n            }\n\n            return { success: true, value: value };\n          },\n\n          function(reason) {\n            if (angular.isFunction(rejectedCallback)) {\n              rejectedCallback(reason);\n            }\n\n            return { success: false, reason: reason };\n          });\n      }\n    }\n\n    return $q;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISourcePrototype', AngularJsonAPISourcePrototypeWrapper);\n\n  function AngularJsonAPISourcePrototypeWrapper() {\n    AngularJsonAPISourcePrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISourcePrototype.prototype.after = afterSynchro;\n    AngularJsonAPISourcePrototype.prototype.begin = begin;\n    AngularJsonAPISourcePrototype.prototype.finish = finish;\n    AngularJsonAPISourcePrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISourcePrototype;\n\n    function AngularJsonAPISourcePrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(sources) {\n      return new AngularJsonAPISynchronizerSimple(sources);\n    }\n\n    function AngularJsonAPISynchronizerSimple(sources) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, sources);\n\n      angular.forEach(sources, function(source) {\n        source.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data || {}, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data || {}, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(sources) {\n      var _this = this;\n\n      _this.sources = sources;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper(\n    $log,\n    pluralize,\n    uuid4,\n    AngularJsonAPISchemaLink\n  ) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      if (schema.id === 'uuid4') {\n        schema.id = uuid4;\n      } else if (schema.id === 'int') {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.isNumber\n        };\n      } else if (angular.isObject(schema.id)) {\n        if (!angular.isFunction(schema.id.generate)) {\n          schema.id.generate = angular.noop;\n        }\n      } else {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.identity.bind(null, true)\n        };\n      }\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get;\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!_this.schema.id.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.promise = object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = angular.extend({}, _this.schema.params.all, params);\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.promise = collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: _this.schema.id.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.modelFactory(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(\n    AngularJsonAPIAbstractModel,\n    AngularJsonAPISchema,\n    namedFunction,\n    pluralize,\n    $log\n  ) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var constructorName = pluralize.plural(schemaObj.type, 1);\n\n      var Model = namedFunction(constructorName, function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      });\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params || {};\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      _this.promise = $q.resolve(_this);\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {string} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.links = response.data.links;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n        _this.pristine = false;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory(\n      $log,\n      AngularJsonAPIResource,\n      AngularJsonAPISynchronizerSimple\n    ) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n        synchronizerSimple: AngularJsonAPISynchronizerSimple,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronizer) {\n        var resource = AngularJsonAPIResource.create(schema, synchronizer);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n          return;\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else if (results.data !== undefined) {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}