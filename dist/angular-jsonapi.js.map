{"version":3,"sources":["sources/rest/source-rest.module.js","sources/rest/source-rest.factory.js","sources/rest/source-rest.decorator.js","sources/parse/source-parse.module.js","sources/parse/source-parse.factory.js","sources/parse/source-parse.decorator.js","sources/local/source-local.module.js","sources/local/source-local.factory.js","sources/local/source-local.decorator.js","jsonapi.module.js","resource/resource-cache/resource-cache.factory.js","model/model-linker/model-linker.js","model/model-form/model-form.factory.js","model/abstract-model/abstract-model.js","errors/validation-error/validation-error.factory.js","errors/source-error/source-error.factory.js","errors/errors-manager/errors-manager.factory.js","utils/named-function.js","utils/lazy-property.js","utils/kebab-case.js","utils/all-settled.js","synchronizers/synchronizer-simple.factory.js","synchronizers/synchronizer-prototype.js","sources/source-prototype.js","schema/schema.factory.js","schema/schema-link.factory.js","resource/resource.factory.js","model/model-factory.factory.js","collection/collection.factory.js","jsonapi.provider.js","jsonapi.config.js"],"names":[],"mappings":"AAAA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO,wBAAwB,CAAC;;;AAG1C;ACNA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,4BAA4B;;EAErC,SAAS;IACP;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,yBAAyB,YAAY,OAAO,OAAO,8BAA8B;IACjF,yBAAyB,UAAU,cAAc;;IAEjD,OAAO;MACL,QAAQ;MACR,cAAc;MACd,cAAc;;;IAGhB,SAAS,gCAAgC,MAAM,KAAK;MAClD,OAAO,IAAI,yBAAyB,MAAM;;;IAG5C,SAAS,yBAAyB,MAAM,KAAK;MAC3C,IAAI,QAAQ;MACZ,IAAI,UAAU;QACZ,UAAU;QACV,gBAAgB;;;MAGlB,8BAA8B,MAAM,OAAO;;MAE3C,MAAM,gBAAgB,UAAU;MAChC,MAAM,gBAAgB,UAAU;MAChC,MAAM,gBAAgB,QAAQ;MAC9B,MAAM,gBAAgB,UAAU;MAChC,MAAM,gBAAgB,OAAO;MAC7B,MAAM,gBAAgB,OAAO;MAC7B,MAAM,gBAAgB,OAAO;MAC7B,MAAM,gBAAgB,WAAW;;MAEjC,SAAS,IAAI,QAAQ;QACnB,OAAO,MAAM;UACX,QAAQ;UACR,SAAS;UACT,KAAK;UACL,QAAQ,aAAa,OAAO;WAC3B,KAAK,aAAa,WAAW,KAAK,MAAM;;;MAG7C,SAAS,IAAI,QAAQ;QACnB,OAAO,MAAM;UACX,QAAQ;UACR,SAAS;UACT,KAAK,MAAM,MAAM,OAAO,OAAO,KAAK;UACpC,QAAQ,aAAa,OAAO;WAC3B,KAAK,aAAa,WAAW,KAAK,MAAM;;;MAG7C,SAAS,OAAO,QAAQ;QACtB,OAAO,MAAM;UACX,QAAQ;UACR,SAAS;UACT,KAAK,MAAM,MAAM,OAAO,OAAO,KAAK;WACnC,KAAK,aAAa,WAAW,KAAK,MAAM;;;MAG7C,SAAS,OAAO,QAAQ;QACtB,IAAI,WAAW,GAAG;QAClB,IAAI,SAAS,OAAO,OAAO,OAAO,cAAc,OAAO;;QAEvD,IAAI,OAAO,OAAO,YAAY,MAAM;UAClC,SAAS,OAAO,+BAA+B,OAAO,2BAA2B,OAAO,GAAG;eACtF,IAAI,OAAO,WAAW,aAAa,OAAO,OAAO,KAAK,OAAO,WAAW;UAC7E,SAAS,OAAO,+BAA+B,OAAO,qDAAqD,OAAO,GAAG;eAChH,IAAI,OAAO,SAAS,UAAU;UACnC,MAAM;YACJ,QAAQ;YACR,SAAS;YACT,KAAK,MAAM,MAAM,OAAO,OAAO,KAAK,KAAK,oBAAoB,OAAO;aACnE,KAAK,aAAa,WAAW,KAAK,MAAM,QAAQ,KAAK,SAAS,SAAS,SAAS;eAC9E,IAAI,OAAO,SAAS,WAAW;UACpC,IAAI,OAAO,WAAW,WAAW;YAC/B,MAAM;cACJ,QAAQ;cACR,SAAS;cACT,MAAM,CAAC,MAAM;cACb,KAAK,MAAM,MAAM,OAAO,OAAO,KAAK,KAAK,oBAAoB,OAAO;eACnE,KAAK,aAAa,WAAW,KAAK,MAAM,WAAW,KAAK,SAAS,SAAS,SAAS;iBACjF;YACL,MAAM;cACJ,QAAQ;cACR,SAAS;cACT,KAAK,MAAM,MAAM,OAAO,OAAO,KAAK,KAAK,oBAAoB,OAAO,MAAM,MAAM,OAAO,OAAO,KAAK;eAClG,KAAK,aAAa,WAAW,KAAK,MAAM,WAAW,KAAK,SAAS,SAAS,SAAS;;;;QAI1F,OAAO,SAAS;;;MAGlB,SAAS,KAAK,QAAQ;QACpB,IAAI,WAAW,GAAG;QAClB,IAAI,SAAS,OAAO,OAAO,OAAO,cAAc,OAAO;;QAEvD,IAAI,OAAO,OAAO,YAAY,MAAM;UAClC,SAAS,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,GAAG,YAAY;eAC7C,IAAI,OAAO,WAAW,aAAa,OAAO,OAAO,KAAK,OAAO,WAAW;UAC7E,SAAS,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,GAAG,YAAY;eAC7C,IAAI,OAAO,SAAS,UAAU;UACnC,MAAM;YACJ,QAAQ;YACR,SAAS;YACT,MAAM,CAAC,MAAM,iCAAiC,WAAW,OAAO;YAChE,KAAK,MAAM,MAAM,OAAO,OAAO,KAAK,KAAK,oBAAoB,OAAO;aACnE,KAAK,aAAa,WAAW,KAAK,MAAM,SAAS,KAAK,SAAS,SAAS,SAAS;eAC/E,IAAI,OAAO,SAAS,WAAW;UACpC,MAAM;YACJ,QAAQ;YACR,SAAS;YACT,MAAM,CAAC,MAAM,CAAC,iCAAiC,WAAW,OAAO;YACjE,KAAK,MAAM,MAAM,OAAO,OAAO,KAAK,KAAK,oBAAoB,OAAO;aACnE,KAAK,aAAa,WAAW,KAAK,MAAM,SAAS,KAAK,SAAS,SAAS,SAAS;;;QAGtF,OAAO,SAAS;;;MAGlB,SAAS,OAAO,QAAQ;QACtB,OAAO,MAAM;UACX,QAAQ;UACR,SAAS;UACT,KAAK,MAAM,MAAM,OAAO,OAAO,KAAK;UACpC,MAAM,OAAO,OAAO,KAAK;WACxB,KAAK,aAAa,WAAW,KAAK,MAAM;;;MAG7C,SAAS,IAAI,QAAQ;QACnB,OAAO,MAAM;UACX,QAAQ;UACR,SAAS;UACT,KAAK;UACL,MAAM,OAAO,OAAO,KAAK;WACxB,KAAK,aAAa,WAAW,KAAK,MAAM;;;MAG7C,SAAS,YAAY,UAAU;QAC7B,OAAO,GAAG,QAAQ,SAAS;;;MAG7B,SAAS,WAAW,QAAQ,UAAU;QACpC,IAAI,WAAW,GAAG;;QAElB,IAAI,SAAS,WAAW,GAAG;UACzB,MAAM;YACJ,QAAQ;YACR,KAAK;aACJ,KAAK,qBAAqB;eACxB;UACL,SAAS,OAAO,+BAA+B,OAAO,SAAS,YAAY,OAAO,SAAS,QAAQ;;;QAGrG,OAAO,SAAS;;QAEhB,SAAS,oBAAoB,UAAU;UACrC,SAAS,OAAO,+BAA+B,OAAO,qBAAqB,OAAO,SAAS,QAAQ;;;QAGrG,SAAS,qBAAqB;UAC5B,SAAS,OAAO,+BAA+B,OAAO,0BAA0B,OAAO,SAAS,QAAQ;;;;;IAK9G,SAAS,aAAa,QAAQ;MAC5B,IAAI,gBAAgB;;MAEpB,IAAI,WAAW,WAAW;QACxB,OAAO;;;MAGT,QAAQ,QAAQ,QAAQ,SAAS,YAAY,UAAU;QACrD,IAAI,QAAQ,QAAQ,aAAa;UAC/B,cAAc,YAAY,YAAY;eACjC,IAAI,QAAQ,SAAS,aAAa;UACvC,QAAQ,QAAQ,YAAY,SAAS,iBAAiB,eAAe;YACnE,cAAc,WAAW,MAAM,gBAAgB,OAAO,YAAY;;eAE/D;UACL,cAAc,YAAY;;;;MAI9B,OAAO;;MAEP,SAAS,YAAY,UAAU;QAC7B,IAAI,QAAQ,QAAQ,WAAW;UAC7B,OAAO,SAAS,KAAK;eAChB;UACL,OAAO;;;;;IAKb,SAAS,aAAa,QAAQ;MAC5B,IAAI,gBAAgB;;MAEpB,QAAQ,QAAQ,QAAQ,SAAS,OAAO,KAAK;QAC3C,IAAI,iBAAiB,IAAI,QAAQ;QACjC,QAAQ,MAAM,MAAM;;QAEpB,IAAI,iBAAiB,CAAC,GAAG;UACvB,IAAI,YAAY,IAAI,OAAO,GAAG;UAC9B,IAAI,mBAAmB,IAAI,OAAO,iBAAiB,GAAG,IAAI,QAAQ,OAAO,iBAAiB;;UAE1F,cAAc,aAAa,cAAc,cAAc;UACvD,cAAc,WAAW,oBAAoB;eACxC;UACL,cAAc,OAAO;;;;MAIzB,OAAO;;;;;AAIb;ACvOA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,OAAO;;EAER,SAAS,QAAQ,UAAU;IACzB,SAAS,UAAU,YAAY;;;;EAGjC,SAAS,UAAU,WAAW,0BAA0B;IACtD,IAAI,WAAW;;IAEf,SAAS,aAAa;;IAEtB,OAAO;;;;AAGX;AClBA,CAAC,WAAW;EACV;;;EAGA,QAAQ,OAAO,yBAAyB,CAAC;KACtC,SAAS,SAAS;;AAEvB;ACPA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,6BAA6B;;EAEtC,SAAS;IACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,0BAA0B,YAAY,OAAO,OAAO,8BAA8B;IAClF,0BAA0B,UAAU,cAAc;IAClD,0BAA0B,UAAU,aAAa;;IAEjD,OAAO;MACL,QAAQ;;;IAGV,SAAS,iCAAiC,MAAM,OAAO;MACrD,OAAO,IAAI,0BAA0B,MAAM;;;IAG7C,SAAS,0BAA0B,MAAM,OAAO;MAC9C,IAAI,QAAQ;;MAEZ,MAAM,cAAc,MAAM,OAAO,OAAO;MACxC,MAAM,OAAO,UAAU,OAAO,OAAO,GAAG,gBAAgB,UAAU,OAAO,MAAM;;MAE/E,8BAA8B,MAAM,OAAO;;MAE3C,MAAM,gBAAgB,UAAU;MAChC,MAAM,gBAAgB,UAAU;MAChC,MAAM,gBAAgB,OAAO;MAC7B,MAAM,gBAAgB,OAAO;MAC7B,MAAM,gBAAgB,OAAO;MAC7B,MAAM,gBAAgB,WAAW;;MAEjC,SAAS,IAAI,QAAQ;QACnB,IAAI,QAAQ,IAAI,MAAM,MAAM,MAAM;;QAElC,IAAI,OAAO,OAAO,UAAU,WAAW;UACrC,MAAM,MAAM,OAAO,OAAO;;;QAG5B,QAAQ,QAAQ,OAAO,OAAO,QAAQ,SAAS,QAAQ;UACrD,MAAM,QAAQ,OAAO,KAAK,OAAO;;;QAGnC,OAAO,MAAM,OAAO,KAAK,cAAc,YAAY,KAAK,MAAM;;;MAGhE,SAAS,IAAI,QAAQ;QACnB,IAAI,QAAQ,IAAI,MAAM,MAAM,MAAM;QAClC,OAAO,MAAM,IAAI,OAAO,OAAO,KAAK,IAAI,KAAK,cAAc,YAAY,KAAK,MAAM;;;MAGpF,SAAS,OAAO,QAAQ;QACtB,IAAI,SAAS,IAAI,MAAM;QACvB,OAAO,IAAI,MAAM,OAAO,OAAO,KAAK;QACpC,OAAO,OAAO,UAAU,KAAK,cAAc,YAAY,KAAK,MAAM;;;MAGpE,SAAS,OAAO,QAAQ;QACtB,IAAI,SAAS,cAAc,OAAO;QAClC,OAAO,OAAO,KAAK,MAAM,KAAK,cAAc,YAAY,KAAK,MAAM;;;MAGrE,SAAS,cAAc,QAAQ;QAC7B,IAAI,cAAc,IAAI,MAAM;QAC5B,QAAQ,QAAQ,OAAO,KAAK,KAAK,YAAY,SAAS,WAAW,KAAK;UACpE,YAAY,IAAI,KAAK;;;QAGvB,QAAQ,QAAQ,OAAO,OAAO,eAAe,SAAS,cAAc,KAAK;UACvE,IAAI,aAAa,SAAS;eACrB,OAAO,KAAK,KAAK,cAAc,KAAK,SAAS;eAC7C,OAAO,KAAK,KAAK,cAAc,KAAK,SAAS;YAChD;YACA,IAAI,QAAQ,UAAU,KAAK,GAAG,OAAO,GAAG,gBAAgB,UAAU,KAAK,GAAG,MAAM;YAChF,IAAI,eAAe,KAAK,MAAM,OAAO,OAAO;YAC5C,aAAa,IAAI,MAAM,OAAO,KAAK,KAAK,cAAc,KAAK,KAAK;YAChE,YAAY,IAAI,KAAK;;;;QAIzB,OAAO;;;MAGT,SAAS,gBAAgB,QAAQ;QAC/B,IAAI,gBAAgB,MAAM,aAAa,SAAS,OAAO;QACvD,OAAO,OAAO,MAAM;QACpB,OAAO,gBAAgB,OAAO,iBAAiB;QAC/C,QAAQ,QAAQ,eAAe,SAAS,cAAc,KAAK;UACzD,IAAI,OAAO,WAAW,QAAQ,aAAa,SAAS,UAAU;YAC5D,OAAO,cAAc,OAAO;cAC1B,MAAM;gBACJ,MAAM,aAAa;gBACnB,IAAI,OAAO,WAAW,KAAK;;;;;;QAMnC,OAAO;;;MAGT,SAAS,aAAa,UAAU;QAC9B,IAAI,QAAQ,QAAQ,WAAW;UAC7B,QAAQ,QAAQ,UAAU,SAAS,MAAM,KAAK;YAC5C,SAAS,OAAO,gBAAgB;;eAE7B,IAAI,QAAQ,SAAS,WAAW;UACrC,WAAW,gBAAgB;;;QAG7B,OAAO,GAAG,QAAQ;UAChB,MAAM;;;;MAIV,SAAS,YAAY,QAAQ,UAAU;QACrC,KAAK,MAAM,mBAAmB,QAAQ;QACtC,OAAO,GAAG,OAAO;;;;IAIrB,SAAS,WAAW,OAAO,OAAO;MAChC,MAAM,WAAW,OAAO;;;;;AAI9B;ACzIA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,OAAO;;EAER,SAAS,QAAQ,UAAU;IACzB,SAAS,UAAU,YAAY;;;;EAGjC,SAAS,UAAU,WAAW,2BAA2B;IACvD,IAAI,WAAW;;IAEf,SAAS,cAAc;;IAEvB,OAAO;;;;AAGX;AClBA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO,yBAAyB,CAAC;;;AAG3C;ACNA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,6BAA6B;;EAEtC,SAAS;IACP;IACA;IACA;IACA;IACA,IAAI,OAAO;MACT,KAAK;MACL,KAAK;MACL,OAAO;MACP,MAAM;;;IAGR,0BAA0B,YAAY,OAAO,OAAO,8BAA8B;IAClF,0BAA0B,UAAU,cAAc;;IAElD,OAAO;MACL,QAAQ;MACR,MAAM;;;IAGR,SAAS,iCAAiC,MAAM,QAAQ;MACtD,OAAO,IAAI,0BAA0B,MAAM;;;IAG7C,SAAS,0BAA0B,MAAM,QAAQ;MAC/C,IAAI,QAAQ;;MAEZ,SAAS,UAAU;;MAEnB,MAAM,kBAAkB;;MAExB,8BAA8B,MAAM,OAAO;;MAE3C,MAAM,gBAAgB,QAAQ;;MAE9B,MAAM,MAAM,cAAc;;MAE1B,MAAM,OAAO,QAAQ;MACrB,MAAM,OAAO,cAAc;MAC3B,MAAM,OAAO,UAAU;MACvB,MAAM,OAAO,WAAW;MACxB,MAAM,OAAO,UAAU;MACvB,MAAM,OAAO,oBAAoB;MACjC,MAAM,OAAO,QAAQ;MACrB,MAAM,OAAO,kBAAkB;MAC/B,MAAM,OAAO,UAAU;MACvB,MAAM,OAAO,OAAO;MACpB,MAAM,OAAO,OAAO;MACpB,MAAM,OAAO,OAAO;MACpB,MAAM,OAAO,WAAW;;MAExB,SAAS,OAAO;QACd,IAAI,OAAO,MAAM,aAAa,SAAS,OAAO;QAC9C,OAAO,GAAG,QAAQ,QAAQ,aAAa,QAAQ,SAAS,MAAM;;;MAGhE,SAAS,QAAQ;QACf,IAAI,OAAO,MAAM,aAAa,SAAS,OAAO;QAC9C,IAAI,MAAM,SAAS,MAAM;;QAEzB,KAAK,OAAO,KAAK,KAAK;QACtB,OAAO,KAAK,KAAK;QACjB,KAAK,MAAM,aAAa,KAAK;QAC7B,KAAK,WAAW,KAAK,KAAK,KAAK,OAAO,KAAK,QAAQ;;QAEnD,QAAQ,aAAa,WAAW;;;MAGlC,SAAS,gBAAgB;QACvB,IAAI,OAAO,MAAM,aAAa,SAAS,OAAO;QAC9C,IAAI,QAAQ,MAAM,aAAa,SAAS;QACxC,IAAI,OAAO,MAAM;QACjB,IAAI,MAAM,SAAS,MAAM;;QAEzB,KAAK,KAAK,OAAO,KAAK,KAAK,SAAS,YAAY,IAAI,KAAK,KAAK;QAC9D,KAAK,OAAO,KAAK,SAAS,KAAK,KAAK;QACpC,KAAK,KAAK,OAAO,KAAK;QACtB,KAAK,MAAM,aAAa,KAAK;QAC7B,KAAK,WAAW,KAAK,KAAK,KAAK,OAAO,KAAK,QAAQ;;QAEnD,QAAQ,aAAa,QAAQ,KAAK;;;MAGpC,SAAS,aAAa,QAAQ;QAC5B,OAAO,OAAO,KAAK,QAAQ,OAAO,SAAS,GAAG,GAAG;UAC/C,OAAO,OAAO,KAAK,OAAO,KAAK,IAAI;WAClC,OAAO,KAAK,QAAQ;;;;;;AAK/B;ACjGA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,OAAO;;EAER,SAAS,QAAQ,UAAU;IACzB,SAAS,UAAU,YAAY;;;;EAGjC,SAAS,UAAU,WAAW,2BAA2B;IACvD,IAAI,WAAW;;IAEf,SAAS,cAAc;;IAEvB,OAAO;;;;AAGX;AClBA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO,mBAAmB,CAAC;;GAElC,SAAS,aAAa;GACtB,SAAS,cAAc;;AAE1B;ACRA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,+BAA+B;;EAExC,SAAS;IACP;IACA;IACA;;IAEA,4BAA4B,UAAU,MAAM;IAC5C,4BAA4B,UAAU,QAAQ;IAC9C,4BAA4B,UAAU,cAAc;IACpD,4BAA4B,UAAU,cAAc;;IAEpD,4BAA4B,UAAU,WAAW;IACjD,4BAA4B,UAAU,SAAS;IAC/C,4BAA4B,UAAU,QAAQ;;IAE9C,4BAA4B,UAAU,SAAS;IAC/C,4BAA4B,UAAU,eAAe;IACrD,4BAA4B,UAAU,eAAe;;IAErD,OAAO;MACL,QAAQ;;;IAGV,SAAS,mCAAmC,UAAU;MACpD,OAAO,IAAI,4BAA4B;;;;;;IAMzC,SAAS,4BAA4B,UAAU;MAC7C,IAAI,QAAQ;;MAEZ,MAAM,WAAW;MACjB,MAAM,OAAO;MACb,MAAM,UAAU;MAChB,MAAM,OAAO;;MAEb,MAAM,WAAW;;;;;;;;IAQnB,SAAS,YAAY,eAAe,QAAQ,WAAW;MACrD,IAAI,QAAQ;MACZ,IAAI,KAAK,cAAc;;MAEvB,IAAI,OAAO,WAAW;QACpB,KAAK,MAAM,+BAA+B;QAC1C;;;MAGF,IAAI,MAAM,KAAK,QAAQ,WAAW;QAChC,MAAM,KAAK,MAAM,MAAM,SAAS,aAAa,eAAe,QAAQ;QACpE,MAAM,QAAQ;aACT;QACL,MAAM,KAAK,IAAI,OAAO,eAAe,CAAC,OAAO,KAAK,OAAO;;;MAG3D,OAAO,MAAM,KAAK;;;;;;;;;IASpB,SAAS,SAAS,MAAM;MACtB,IAAI,QAAQ;MACZ,IAAI,aAAa,QAAQ,SAAS;;MAElC,IAAI,SAAS;QACX,KAAK;QACL,cAAc;QACd,QAAQ;QACR,UAAU;QACV,gBAAgB;;;MAGlB,IAAI,QAAQ,SAAS,eAAe,WAAW,SAAS,WAAW;QACjE,MAAM,YAAY,WAAW;QAC7B,MAAM,WAAW,WAAW;;QAE5B,QAAQ,QAAQ,WAAW,MAAM,SAAS,YAAY;UACpD,IAAI,OAAO,WAAW;UACtB,MAAM,YAAY,MAAM,QAAQ,WAAW;;;;;;;;;IASjD,SAAS,SAAS;MAChB,IAAI,QAAQ;MACZ,IAAI,OAAO;QACT,MAAM;QACN,WAAW,MAAM;QACjB,UAAU,MAAM;;;MAGlB,QAAQ,QAAQ,MAAM,MAAM,SAAS,QAAQ;QAC3C,IAAI,OAAO,gBAAgB,OAAO;UAChC,KAAK,KAAK,KAAK,OAAO;;;;MAI1B,OAAO,QAAQ,OAAO;;;;;;;IAOxB,SAAS,QAAQ;MACf,IAAI,QAAQ;;MAEZ,MAAM,WAAW;MACjB,MAAM,OAAO;MACb,MAAM,UAAU;;;;;;;;IAQlB,SAAS,IAAI,IAAI;MACf,IAAI,QAAQ;;MAEZ,IAAI,OAAO;QACT,IAAI;QACJ,MAAM,MAAM,SAAS,OAAO;;;MAG9B,IAAI,SAAS;QACX,KAAK;QACL,cAAc;QACd,QAAQ;QACR,UAAU;;;MAGZ,IAAI,MAAM,KAAK,QAAQ,WAAW;QAChC,MAAM,KAAK,MAAM,MAAM,SAAS,aAAa,MAAM;;;MAGrD,OAAO,MAAM,KAAK;;;;;;;;IAQpB,SAAS,MAAM,QAAQ;MACrB,IAAI,QAAQ;MACZ,SAAS,UAAU;;MAEnB,IAAI,MAAM,aAAa,WAAW;QAChC,OAAO,MAAM;;;MAGf,OAAO,MAAM,SAAS,IAAI,MAAM,IAAI,KAAK,QAAQ,OAAO;;MAExD,SAAS,OAAO,UAAU;QACxB,IAAI,gBAAgB,OAAO;QAC3B,IAAI,QAAQ;;QAEZ,QAAQ,QAAQ,cAAc,SAAS,YAAY;UACjD,QAAQ,SAAS,SAAS,KAAK,WAAW,WAAW,SAAS,WAAW;;;QAG3E,OAAO;;;;;;;;IAQX,SAAS,YAAY,OAAO;MAC1B,IAAI,QAAQ;;MAEZ,MAAM,WAAW;;MAEjB,QAAQ,QAAQ,OAAO,SAAS,SAAS;QACvC,IAAI,QAAQ,SAAS,YAAY,MAAM,SAAS,OAAO,GAAG,SAAS,UAAU;UAC3E,MAAM,SAAS,KAAK;eACf,IAAI,QAAQ,SAAS,YAAY,MAAM,SAAS,OAAO,GAAG,SAAS,QAAQ,KAAK,KAAK;UAC1F,MAAM,SAAS,KAAK,QAAQ,KAAK;;;;;;;;;;;IAWvC,SAAS,OAAO,IAAI;MAClB,IAAI,QAAQ;;MAEZ,IAAI,MAAM,KAAK,QAAQ,WAAW;QAChC,MAAM,QAAQ,MAAM,MAAM,KAAK;QAC/B,OAAO,MAAM,KAAK;QAClB,MAAM,QAAQ;;;MAGhB,OAAO,MAAM,QAAQ;;;;;;;;;IASvB,SAAS,aAAa,IAAI;MACxB,IAAI,QAAQ;;MAEZ,IAAI,MAAM,QAAQ,QAAQ,WAAW;QACnC,MAAM,KAAK,MAAM,MAAM,QAAQ;QAC/B,OAAO,MAAM,QAAQ;QACrB,MAAM,QAAQ;;;MAGhB,OAAO,MAAM,KAAK;;;;;;;;IAQpB,SAAS,aAAa,IAAI;MACxB,IAAI,QAAQ;;MAEZ,OAAO,MAAM,QAAQ;;;;;AAI3B;AC5PA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,oCAAoC;;EAE7C,SAAS,iCAAiC,MAAM;IAC9C,IAAI,QAAQ;;IAEZ,MAAM,aAAa;;IAEnB,MAAM,OAAO;IACb,MAAM,SAAS;;IAEf,OAAO;;;;;;;IAOP,SAAS,WAAW,QAAQ;MAC1B,IAAI,WAAW,MAAM;QACnB,OAAO;;;MAGT,OAAO,CAAC,MAAM,OAAO,KAAK,MAAM,IAAI,OAAO,KAAK;;;;;;;;;;IAUlD,SAAS,KAAK,QAAQ,KAAK,QAAQ,QAAQ,MAAM;MAC/C,IAAI;MACJ,OAAO,SAAS,YAAY,QAAQ;;MAEpC,IAAI,WAAW,WAAW;QACxB,KAAK,MAAM,0CAA0C,QAAQ,KAAK;QAClE,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,QAAQ;QACnB,OAAO;;;MAGT,SAAS,OAAO,OAAO,cAAc;;MAErC,IAAI,WAAW,WAAW;QACxB,KAAK,MAAM,mCAAmC,QAAQ,KAAK,QAAQ;QACnE,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,QAAQ;QACnB,KAAK,MAAM,WAAW;QACtB,OAAO;;;MAGT,IAAI,WAAW,WAAW;QACxB,KAAK,MAAM,0CAA0C,QAAQ,KAAK,QAAQ;QAC1E,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,QAAQ;QACnB,KAAK,MAAM,WAAW;QACtB,OAAO;;;MAGT,IAAI,WAAW,QAAQ,OAAO,gBAAgB,SAAS,OAAO,UAAU,OAAO,KAAK,MAAM;QACxF,KAAK,MAAM,iDAAiD,OAAO,QAAQ,iBAAiB,OAAO,KAAK;QACxG,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,QAAQ;QACnB,KAAK,MAAM,WAAW;QACtB,OAAO;;;MAGT,IAAI,OAAO,SAAS,WAAW;QAC7B,IAAI,WAAW,MAAM;UACnB,aAAa,QAAQ,KAAK,QAAQ;UAClC,OAAO;eACF;UACL,OAAO,oBAAoB,QAAQ,KAAK,QAAQ;;aAE7C,IAAI,OAAO,SAAS,UAAU;QACnC,IAAI,WAAW,MAAM;UACnB,YAAY,QAAQ,KAAK,QAAQ;UACjC,OAAO;eACF;UACL,OAAO,mBAAmB,QAAQ,KAAK,QAAQ;;;;;;;;;;;;IAYrD,SAAS,OAAO,QAAQ,KAAK,QAAQ,QAAQ,MAAM;MACjD,IAAI;MACJ,OAAO,SAAS,YAAY,QAAQ;;MAEpC,IAAI,WAAW,WAAW;QACxB,KAAK,MAAM,+CAA+C,QAAQ,KAAK;QACvE,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,QAAQ;QACnB,OAAO;;;MAGT,SAAS,OAAO,OAAO,cAAc;;MAErC,IAAI,WAAW,WAAW;QACxB,KAAK,MAAM,6CAA6C,QAAQ,KAAK,QAAQ;QAC7E,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,WAAW,OAAO,KAAK,MAAM;QACxC,KAAK,MAAM,QAAQ;QACnB,KAAK,MAAM,WAAW;QACtB,OAAO;;;MAGT,IAAI,WAAW,MAAM;QACnB,gBAAgB,QAAQ,KAAK,QAAQ;QACrC,OAAO;aACF;QACL,OAAO,gBAAgB,QAAQ,KAAK,QAAQ;;;;;;;;IAQhD,SAAS,oBAAoB,QAAQ,KAAK,QAAQ,MAAM;MACtD,IAAI,gBAAgB,OAAO,OAAO,cAAc,KAAK;MACrD,IAAI;;MAEJ,IAAI,kBAAkB,OAAO;QAC3B,aAAa,QAAQ,KAAK,QAAQ;QAClC,OAAO;;;MAGT,mBAAmB,OAAO,OAAO,cAAc;;MAE/C,IAAI,qBAAqB,WAAW;QAClC,KAAK,MAAM,6BAA6B,KAAK,oBAAoB,OAAO,KAAK,MAAM,MAAM,OAAO,KAAK;QACrG,KAAK,MAAM;QACX,OAAO;aACF,IAAI,iBAAiB,SAAS,UAAU;QAC7C,OAAO;UACL,cAAc,QAAQ,KAAK;UAC3B,cAAc,QAAQ,eAAe;UACrC,mBAAmB,QAAQ,eAAe,QAAQ;;aAE/C,IAAI,iBAAiB,SAAS,WAAW;QAC9C,aAAa,QAAQ,KAAK,QAAQ;QAClC,aAAa,QAAQ,eAAe,QAAQ;QAC5C,OAAO,CAAC,cAAc,QAAQ,eAAe;;;;IAIjD,SAAS,mBAAmB,QAAQ,KAAK,QAAQ,MAAM;MACrD,IAAI,gBAAgB,OAAO,OAAO,cAAc,KAAK;MACrD,IAAI,gBAAgB,OAAO,cAAc;MACzC,IAAI;MACJ,IAAI;MACJ,IAAI,SAAS;;MAEb,YAAY,QAAQ,KAAK,QAAQ;;MAEjC,IAAI,kBAAkB,OAAO;QAC3B,OAAO;;;MAGT,IAAI,kBAAkB,aAAa,kBAAkB,MAAM;QACzD,sBAAsB,cAAc,OAAO,cAAc;;QAEzD,IAAI,wBAAwB,WAAW;UACrC,IAAI,oBAAoB,SAAS,UAAU;YACzC,eAAe,eAAe,eAAe,QAAQ;iBAChD,IAAI,oBAAoB,SAAS,WAAW;YACjD,gBAAgB,eAAe,eAAe,QAAQ;;;UAGxD,OAAO,KAAK,cAAc,eAAe,eAAe;eACnD;UACL,KAAK,MAAM,6BAA6B,KAAK,oBAAoB,OAAO,KAAK,MAAM,MAAM,OAAO,KAAK;UACrG,KAAK,MAAM;;;;MAIf,IAAI,WAAW,aAAa,WAAW,QAAQ,kBAAkB,OAAO;QACtE,mBAAmB,OAAO,OAAO,cAAc;QAC/C,IAAI,qBAAqB,WAAW;UAClC,IAAI,iBAAiB,SAAS,UAAU;YACtC,YAAY,QAAQ,eAAe,QAAQ;iBACtC,IAAI,iBAAiB,SAAS,WAAW;YAC9C,aAAa,QAAQ,eAAe,QAAQ;;;UAG9C,OAAO,KAAK,cAAc,QAAQ,eAAe;eAC5C;UACL,KAAK,MAAM,6BAA6B,KAAK,oBAAoB,OAAO,KAAK,MAAM,MAAM,OAAO,KAAK;UACrG,KAAK,MAAM;;;;MAIf,OAAO;;;IAGT,SAAS,gBAAgB,QAAQ,KAAK,QAAQ,MAAM;MAClD,IAAI,SAAS,OAAO,OAAO,cAAc;MACzC,IAAI,gBAAgB,OAAO;MAC3B,IAAI;;MAEJ,IAAI,OAAO,SAAS,WAAW;QAC7B,gBAAgB,QAAQ,KAAK,QAAQ;aAChC,IAAI,OAAO,SAAS,UAAU;QACnC,eAAe,QAAQ,KAAK,QAAQ;;;MAGtC,IAAI,kBAAkB,OAAO;QAC3B,OAAO;;;MAGT,mBAAmB,OAAO,OAAO,cAAc;;MAE/C,IAAI,qBAAqB,WAAW;QAClC,IAAI,iBAAiB,SAAS,UAAU;UACtC,eAAe,QAAQ,eAAe,QAAQ;eACzC,IAAI,iBAAiB,SAAS,WAAW;UAC9C,gBAAgB,QAAQ,eAAe,QAAQ;;aAE5C;QACL,KAAK,MAAM,6BAA6B,KAAK,oBAAoB,OAAO,KAAK,MAAM,MAAM,OAAO,KAAK;QACrG,KAAK,MAAM;QACX,OAAO;;;MAGT,OAAO,CAAC,cAAc,QAAQ,eAAe;;;IAG/C,SAAS,YAAY,QAAQ,KAAK,QAAQ,MAAM;MAC9C,KAAK,MAAM,aAAa,QAAQ,KAAK;;MAErC,IAAI,SAAS,MAAM;QACjB,SAAS,OAAO;;;MAGlB,OAAO,cAAc,OAAO;MAC5B,OAAO,KAAK,cAAc,KAAK,OAAO,WAAW;;MAEjD,IAAI,SAAS,OAAO;QAClB,OAAO,MAAM;;;MAGf,OAAO;;;IAGT,SAAS,aAAa,QAAQ,KAAK,QAAQ,MAAM;MAC/C,KAAK,MAAM,cAAc,QAAQ,KAAK;;MAEtC,IAAI,WAAW,WAAW;MAC1B,IAAI,SAAS,MAAM;QACjB,SAAS,OAAO;;;MAGlB,IAAI,QAAQ,QAAQ,OAAO,cAAc,SAAS,OAAO,cAAc,KAAK,QAAQ,UAAU,CAAC,GAAG;QAChG,OAAO;;;MAGT,OAAO,cAAc,OAAO,OAAO,cAAc,QAAQ;MACzD,OAAO,KAAK,cAAc,KAAK,OAAO,OAAO,KAAK,cAAc,KAAK,QAAQ;;MAE7E,OAAO,cAAc,KAAK,KAAK;MAC/B,OAAO,KAAK,cAAc,KAAK,KAAK,KAAK;;MAEzC,IAAI,SAAS,OAAO;QAClB,OAAO,MAAM;;;MAGf,OAAO;;;IAGT,SAAS,eAAe,QAAQ,KAAK,QAAQ,MAAM;MACjD,KAAK,MAAM,gBAAgB,QAAQ,KAAK;;MAExC,IAAI,SAAS,MAAM;QACjB,SAAS,OAAO;;;MAGlB,IAAI,WAAW,aAAa,OAAO,cAAc,SAAS,QAAQ;QAChE,OAAO;;;MAGT,OAAO,cAAc,OAAO;MAC5B,OAAO,KAAK,cAAc,KAAK,OAAO;;MAEtC,IAAI,SAAS,OAAO;QAClB,OAAO,MAAM;;;MAGf,OAAO;;;IAGT,SAAS,gBAAgB,QAAQ,KAAK,QAAQ,MAAM;MAClD,KAAK,MAAM,iBAAiB,QAAQ,KAAK;;MAEzC,IAAI,SAAS,MAAM;QACjB,SAAS,OAAO;;;MAGlB,IAAI,OAAO,cAAc,SAAS,WAAW;QAC3C;;;MAGF,IAAI,WAAW,WAAW;QACxB,OAAO,cAAc,OAAO;QAC5B,OAAO,KAAK,cAAc,KAAK,OAAO;QACtC,IAAI,SAAS,OAAO;UAClB,OAAO,MAAM;;;QAGf,OAAO;;;MAGT,IAAI,QAAQ,OAAO,cAAc,KAAK,QAAQ;;MAE9C,IAAI,UAAU,CAAC,GAAG;QAChB,OAAO;;;MAGT,OAAO,cAAc,KAAK,OAAO,OAAO;MACxC,OAAO,KAAK,cAAc,KAAK,KAAK,OAAO,OAAO;;MAElD,IAAI,SAAS,OAAO;QAClB,OAAO,MAAM;;;MAGf,OAAO;;;IAGT,SAAS,cAAc,QAAQ,KAAK,QAAQ;MAC1C,OAAO;QACL,QAAQ;QACR,KAAK;QACL,QAAQ;;;;IAIZ,SAAS,cAAc,OAAO,UAAU,OAAO;MAC7C,IAAI,QAAQ,CAAC;MACb,QAAQ,QAAQ,OAAO,SAAS,MAAM,GAAG;QACvC,IAAI,KAAK,WAAW,MAAM,UAAU,KAAK,QAAQ,MAAM,OAAO,KAAK,WAAW,MAAM,QAAQ;UAC1F,QAAQ;;;;MAIZ,IAAI,QAAQ,CAAC,GAAG;QACd,MAAM,SAAS;aACV;QACL,MAAM,KAAK;;;MAGb,OAAO;;;;;AAIb;ACnXA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,2BAA2B;;EAEpC,SAAS;IACP;IACA;IACA;IACA;IACA;;IAEA,wBAAwB,UAAU,OAAO;IACzC,wBAAwB,UAAU,QAAQ;IAC1C,wBAAwB,UAAU,WAAW;;IAE7C,wBAAwB,UAAU,OAAO;IACzC,wBAAwB,UAAU,SAAS;;IAE3C,wBAAwB,UAAU,SAAS;;IAE3C,OAAO;MACL,QAAQ;;;IAGV,SAAS,+BAA+B,QAAQ;MAC9C,OAAO,IAAI,wBAAwB;;;IAGrC,SAAS,wBAAwB,QAAQ;MACvC,IAAI,QAAQ;;MAEZ,MAAM,OAAO;QACX,IAAI,OAAO,KAAK;QAChB,MAAM,OAAO,KAAK;QAClB,YAAY;QACZ,eAAe;;;MAGjB,MAAM,gBAAgB;MACtB,MAAM,SAAS;MACf,MAAM,SAAS,OAAO;MACtB,MAAM;;;;;;;IAOR,SAAS,SAAS;MAChB,IAAI,QAAQ;MACZ,IAAI,OAAO,QAAQ,KAAK,MAAM;MAC9B,IAAI,gBAAgB;;MAEpB,QAAQ,QAAQ,KAAK,eAAe,SAAS,OAAO,KAAK;QACvD,IAAI,MAAM,SAAS,WAAW;UAC5B,cAAc,OAAO;;;;MAIzB,KAAK,gBAAgB;;MAErB,OAAO;QACL,MAAM;;;;;;;;IAQV,SAAS,OAAO;MACd,IAAI,QAAQ;;MAEZ,OAAO,MAAM,OAAO;;;;;;;IAOtB,SAAS,MAAM,MAAM;MACnB,IAAI,QAAQ;;MAEZ,QAAQ,QAAQ,MAAM,OAAO,eAAe,SAAS,MAAM,KAAK;QAC9D,MAAM,KAAK,cAAc,OAAO,QAAQ,KAAK,MAAM,OAAO,KAAK,cAAc,SAAS;QACtF,IAAI,QAAQ,QAAQ,MAAM,cAAc,OAAO;UAC7C,MAAM,cAAc,OAAO,MAAM,OAAO,cAAc,KAAK;eACtD;UACL,MAAM,cAAc,OAAO,MAAM,OAAO,cAAc;;;;MAI1D,IAAI,SAAS,QAAQ,MAAM,OAAO,iBAAiB,MAAM;QACvD;;;MAGF,QAAQ,QAAQ,MAAM,OAAO,YAAY,SAAS,WAAW,KAAK;QAChE,MAAM,KAAK,WAAW,OAAO,QAAQ,KAAK,MAAM,OAAO,KAAK,WAAW;;;MAGzE,MAAM,OAAO,OAAO,WAAW;;;;;;;;IAQjC,SAAS,SAAS,KAAK;MACrB,IAAI,QAAQ;MACZ,IAAI;MACJ,IAAI;MACJ,IAAI,WAAW,GAAG;;MAElB,IAAI,QAAQ,WAAW;QACrB,oBAAoB,MAAM,KAAK;QAC/B,qBAAqB,MAAM,OAAO;aAC7B;QACL,oBAAoB;QACpB,qBAAqB;;QAErB,kBAAkB,OAAO,MAAM,KAAK,WAAW;QAC/C,mBAAmB,OAAO,MAAM,OAAO,WAAW;;;MAGpD,WAAW;QACT;QACA;QACA,KAAK,SAAS;;MAEhB,SAAS,UAAU;QACjB,IAAI,QAAQ,WAAW;UACrB,MAAM,OAAO,OAAO,WAAW;eAC1B;UACL,MAAM,OAAO,OAAO,WAAW,MAAM;;;QAGvC,SAAS;;;MAGX,SAAS,OAAO,WAAW;QACzB,MAAM,OAAO,QAAQ;QACrB,IAAI,QAAQ,WAAW;UACrB,MAAM,OAAO,OAAO,WAAW;eAC1B;UACL,MAAM,OAAO,OAAO,WAAW,MAAM;;;QAGvC,QAAQ,QAAQ,WAAW,SAAS,QAAQ,WAAW;UACrD,QAAQ,QAAQ,QAAQ,SAAS,OAAO;YACtC,MAAM,OAAO,OAAO,WAAW,IAAI,WAAW,mCAAmC,OAAO,OAAO;;;;QAInG,SAAS,OAAO,MAAM,OAAO,OAAO;;;MAGtC,OAAO,SAAS;;;;;;;;;IASlB,SAAS,KAAK,KAAK,QAAQ,QAAQ;MACjC,IAAI,QAAQ;MACZ,SAAS,WAAW,YAAY,QAAQ;;MAExC,OAAO,GAAG,QAAQ,iCAAiC,KAAK,MAAM,QAAQ,KAAK,QAAQ,QAAQ;;;;;;;;;IAS7F,SAAS,OAAO,KAAK,QAAQ,QAAQ;MACnC,IAAI,QAAQ;MACZ,SAAS,WAAW,YAAY,QAAQ;;MAExC,OAAO,GAAG,QAAQ,iCAAiC,OAAO,MAAM,QAAQ,KAAK,QAAQ,QAAQ;;;;;AAInG;AC7LA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,+BAA+B;;EAExC,SAAS;IACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,4BAA4B,UAAU,UAAU;IAChD,4BAA4B,UAAU,SAAS;IAC/C,4BAA4B,UAAU,QAAQ;IAC9C,4BAA4B,UAAU,OAAO;;IAE7C,4BAA4B,UAAU,SAAS;;IAE/C,4BAA4B,UAAU,OAAO;IAC7C,4BAA4B,UAAU,SAAS;IAC/C,4BAA4B,UAAU,YAAY;;IAElD,4BAA4B,UAAU,SAAS;;IAE/C,4BAA4B,UAAU,YAAY;;IAElD,OAAO;;;;;;;IAOP,SAAS,4BAA4B,MAAM,QAAQ,WAAW;MAC5D,IAAI,QAAQ;;MAEZ,KAAK,gBAAgB,KAAK,iBAAiB;;;;;;MAM3C,MAAM,MAAM,OAAO,QAAQ,YAAY,QAAQ,OAAO;;;;;;MAMtD,MAAM,SAAS,OAAO,WAAW,YAAY,OAAO,OAAO;;;;;;MAM3D,MAAM,eAAe,OAAO,iBAAiB,YAAY,OAAO,OAAO;;;;;;MAMvE,MAAM,WAAW,OAAO,aAAa,YAAY,OAAO,OAAO;;MAE/D,MAAM,UAAU;MAChB,MAAM,UAAU;MAChB,MAAM,SAAS;MACf,MAAM,YAAY,MAAM,iBAAiB,OAAO,KAAK,QAAQ;;MAE7D,MAAM,eAAe;MACrB,MAAM,cAAc;;MAEpB,MAAM,OAAO;QACX,eAAe;QACf,YAAY;;MAEd,MAAM,gBAAgB;;MAEtB,QAAQ,QAAQ,MAAM,OAAO,eAAe,SAAS,QAAQ,KAAK;QAChE,MAAM,cAAc,OAAO;;;MAG7B,MAAM,SAAS;QACb,YAAY,iCAAiC;UAC3C;UACA;UACA;;QAEF,iBAAiB,iCAAiC;UAChD;UACA;UACA;;;;MAIJ,MAAM,UAAU,GAAG,QAAQ;;MAE3B,UAAU,OAAO;;MAEjB,MAAM,OAAO,wBAAwB,OAAO;;;;;;;IAO9C,SAAS,OAAO;MACd,IAAI,QAAQ;MACZ,IAAI,WAAW,GAAG;MAClB,IAAI,SAAS;QACX,QAAQ,MAAM,QAAQ,OAAO,QAAQ;QACrC,QAAQ;;;MAGV,MAAM,KAAK,WAAW;QACpB;QACA,SAAS;QACT,QAAQ,yBAAyB,KAAK,OAAO;;MAE/C,yBAAyB;;MAEzB,OAAO,SAAS;;MAEhB,SAAS,cAAc;QACrB,MAAM,YAAY,QAAQ,KAAK,SAAS,QAAQ;;;MAGlD,SAAS,QAAQ,UAAU;QACzB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,aAAa,OAAO,QAAQ,YAAY,OAAO;QACtG,MAAM,OAAO,SAAS,KAAK;;QAE3B,IAAI,MAAM,QAAQ,MAAM;UACtB,MAAM,SAAS,MAAM,WAAW,MAAM,SAAS,MAAM,YAAY;UACjE,MAAM,SAAS,MAAM,SAAS,KAAK,MAAM,KAAK;;;QAGhD,MAAM,eAAe;QACrB,MAAM,MAAM;QACZ,MAAM,WAAW;QACjB,MAAM,SAAS;;QAEf,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;QAC7C,SAAS,QAAQ,SAAS,KAAK;;;MAGjC,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,gBAAgB,YAAY,OAAO;;QAE1F,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;QAC7C,SAAS,OAAO;;;MAGlB,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,gBAAgB,UAAU,OAAO;;QAExF,SAAS,OAAO;;;;;;;;IAQpB,SAAS,QAAQ;MACf,IAAI,QAAQ;;MAEZ,IAAI,MAAM,SAAS,WAAW;QAC5B,MAAM,KAAK;;;;;;;;IAQf,SAAS,QAAQ,QAAQ;MACvB,IAAI,WAAW,UAAU,IAAI;MAC7B,IAAI,WAAW,GAAG;MAClB,IAAI,QAAQ;MACZ,SAAS,WAAW,YAAY,MAAM,OAAO,OAAO,MAAM;;MAE1D,IAAI,SAAS;QACX,QAAQ;QACR,QAAQ;QACR,QAAQ;;;MAGV,IAAI,MAAM,QAAQ,MAAM;QACtB,IAAI,QAAQ,+BAA+B,OAAO,6BAA6B,MAAM,GAAG;QACxF,MAAM,OAAO,gBAAgB,IAAI,WAAW;QAC5C,SAAS,OAAO;aACX;QACL,0BAA0B;;QAE1B,MAAM,YAAY;WACf,KAAK,SAAS,QAAQ;WACtB,QAAQ,0BAA0B,KAAK,OAAO;;;MAGnD,OAAO,SAAS;;MAEhB,SAAS,QAAQ,UAAU;QACzB,IAAI,UAAU,SAAS,iBAAiB,SAAS;QACjD,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,mBAAmB,YAAY,OAAO;QAC7F,GAAG,WAAW,QAAQ,SAAS,IAAI,sBAAsB,KAAK,iBAAiB,SAAS;;QAExF,MAAM,eAAe;QACrB,MAAM,SAAS;QACf,MAAM,WAAW;;QAEjB,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;;QAE7C,SAAS,oBAAoB,QAAQ;UACnC,0BAA0B;;UAE1B,OAAO,OAAO,YAAY;YACxB,QAAQ;YACR,QAAQ;aACP,QAAQ,0BAA0B,KAAK,QAAQ;;;QAGpD,SAAS,gBAAgB,kBAAkB;UACzC,QAAQ,QAAQ,kBAAkB,SAAS,WAAW,KAAK;YACzD,IAAI,UAAU,YAAY,MAAM;cAC9B,WAAW,MAAM,oBAAoB,QAAQ,SAAS,KAAK,KAAK,OAAO,mBAAmB,YAAY,QAAQ,SAAS,MAAM;cAC7H,UAAU,MAAM;;;;UAIpB,SAAS,QAAQ,SAAS,KAAK;;;;MAInC,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,mBAAmB,YAAY,OAAO;;QAE7F,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;QAC7C,SAAS,OAAO;;;MAGlB,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,mBAAmB,UAAU,OAAO;;QAE3F,SAAS,OAAO;;;;;;;;IAQpB,SAAS,SAAS;MAChB,IAAI,QAAQ;MACZ,IAAI,OAAO,MAAM;MACjB,IAAI,gBAAgB;;MAEpB,QAAQ,QAAQ,KAAK,eAAe,SAAS,OAAO,KAAK;QACvD,IAAI,MAAM,SAAS,WAAW;UAC5B,cAAc,OAAO;;;;MAIzB,KAAK,gBAAgB;;MAErB,OAAO;QACL,MAAM;QACN,WAAW,MAAM;;;;;;;;IAQrB,SAAS,SAAS;MAChB,IAAI,QAAQ;MACZ,IAAI,WAAW,GAAG;;MAElB,IAAI,SAAS;QACX,QAAQ;QACR,QAAQ;;;MAGV,MAAM,SAAS,MAAM,OAAO,MAAM,KAAK;;MAEvC,IAAI,MAAM,QAAQ,MAAM;QACtB,SAAS;aACJ;QACL,yBAAyB;;QAEzB,MAAM,YAAY;WACf,KAAK,SAAS,QAAQ;WACtB,QAAQ,yBAAyB,KAAK,OAAO;;;MAGlD,OAAO,SAAS;;MAEhB,SAAS,QAAQ,UAAU;QACzB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,kBAAkB,YAAY,OAAO;QAC5F,MAAM,UAAU;QAChB,MAAM;QACN,MAAM,SAAS,MAAM,aAAa,MAAM,KAAK;;QAE7C,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;;QAE7C,SAAS;;;MAGX,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,kBAAkB,YAAY,OAAO;QAC5F,MAAM,SAAS,MAAM,aAAa,MAAM,KAAK;;QAE7C,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;QAC7C,SAAS,OAAO;;;MAGlB,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,kBAAkB,UAAU,OAAO;;QAE1F,SAAS,OAAO;;;;;;;;IAQpB,SAAS,UAAU,KAAK;MACtB,IAAI,QAAQ;MACZ,IAAI,WAAW,GAAG;;MAElB,0BAA0B;;MAE1B,IAAI,QAAQ,WAAW;QACrB,QAAQ,QAAQ,MAAM,eAAe;aAChC;QACL,WAAW,MAAM,cAAc,MAAM;;;MAGvC,0BAA0B;;MAE1B,OAAO,SAAS;;MAEhB,SAAS,WAAW,UAAU,KAAK;QACjC,IAAI,SAAS,MAAM,OAAO,cAAc;QACxC,IAAI,gBAAgB,OAAO;;QAE3B,IAAI,QAAQ,QAAQ,WAAW;UAC7B,QAAQ,QAAQ,UAAU,qBAAqB,KAAK,WAAW;eAC1D,IAAI,QAAQ,SAAS,WAAW;UACrC,qBAAqB,eAAe;;;QAGtC,IAAI,OAAO,SAAS,UAAU;UAC5B,MAAM,cAAc,OAAO;eACtB,IAAI,OAAO,SAAS,WAAW;UACpC,MAAM,cAAc,OAAO;;;;MAI/B,SAAS,qBAAqB,eAAe,QAAQ;QACnD,IAAI,mBAAmB,OAAO,OAAO,cAAc;QACnD,IAAI,SAAS;UACX,QAAQ;UACR,QAAQ;UACR,QAAQ;UACR,KAAK;;;QAGP,0BAA0B;QAC1B,iCAAiC,OAAO,QAAQ,eAAe,OAAO;;QAEtE,OAAO,YAAY;WAChB,KAAK,SAAS,QAAQ;WACtB,QAAQ,0BAA0B,KAAK,QAAQ;;QAElD,SAAS,QAAQ,UAAU;UACzB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,4BAA4B,WAAW,OAAO;;UAErG,SAAS;UACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;UAC7C,SAAS;;;QAGX,SAAS,OAAO,UAAU;UACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,4BAA4B,YAAY,OAAO;;UAEtG,SAAS;UACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;UAC7C,SAAS,OAAO;;;QAGlB,SAAS,OAAO,UAAU;UACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,4BAA4B,UAAU,OAAO;;UAEpG,SAAS;UACT,SAAS,OAAO;;;;;;;;;;;IAWtB,SAAS,KAAK,KAAK,QAAQ;MACzB,IAAI,WAAW,GAAG;MAClB,IAAI,QAAQ;MACZ,IAAI;MACJ,IAAI,SAAS;QACX,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,KAAK;;;MAGP,IAAI,WAAW,WAAW;QACxB,QAAQ,+BAA+B,OAAO,yBAAyB,MAAM,GAAG;QAChF,MAAM,OAAO,gBAAgB,IAAI,QAAQ;QACzC,SAAS,OAAO;aACX,IAAI,MAAM,QAAQ,MAAM;QAC7B,QAAQ,+BAA+B,OAAO,0BAA0B,MAAM,GAAG;QACjF,MAAM,OAAO,gBAAgB,IAAI,QAAQ;QACzC,SAAS,OAAO;aACX;QACL,yBAAyB;;QAEzB,MAAM,YAAY;WACf,KAAK,SAAS,QAAQ;WACtB,QAAQ,yBAAyB,KAAK,OAAO;;;MAGlD,OAAO,SAAS;;MAEhB,SAAS,QAAQ,UAAU;QACzB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,gBAAgB,YAAY,OAAO;;QAE1F,IAAI,UAAU,iCAAiC,KAAK,OAAO,KAAK;;QAEhE,MAAM,SAAS;QACf,MAAM,WAAW;QACjB,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;;QAE7C,GAAG,WAAW,QAAQ,IAAI;WACvB,KAAK,mBAAmB,SAAS;;QAEpC,SAAS,YAAY,QAAQ;UAC3B,0BAA0B;;UAE1B,OAAO,OAAO,YAAY;YACxB,QAAQ;YACR,QAAQ,OAAO;YACf,QAAQ,OAAO;YACf,KAAK,OAAO;aACX,QAAQ,0BAA0B,KAAK,QAAQ;;;QAGpD,SAAS,kBAAkB,UAAU;UACnC,QAAQ,QAAQ,UAAU,SAAS,WAAW,KAAK;YACjD,IAAI,UAAU,YAAY,MAAM;cAC9B,WAAW,MAAM,oBAAoB,QAAQ,KAAK,OAAO,KAAK,OAAO,0BAA0B,YAAY,QAAQ,MAAM;cACzH,UAAU,MAAM;;;;UAIpB,SAAS,QAAQ,SAAS,KAAK;;;;MAInC,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,gBAAgB,YAAY,OAAO;;QAE1F,SAAS,OAAO,SAAS;QACzB,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;QAC7C,SAAS,OAAO;;;MAGlB,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,gBAAgB,UAAU,OAAO;;QAExF,SAAS,OAAO;;;;;;;;;;IAUpB,SAAS,OAAO,KAAK,QAAQ;MAC3B,IAAI,WAAW,GAAG;MAClB,IAAI,QAAQ;MACZ,IAAI;MACJ,IAAI,SAAS;QACX,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,KAAK;;;MAGP,IAAI,WAAW,WAAW;QACxB,QAAQ,+BAA+B,OAAO,2BAA2B,MAAM,GAAG;QAClF,MAAM,OAAO,gBAAgB,IAAI,UAAU;QAC3C,SAAS,OAAO;aACX,IAAI,MAAM,QAAQ,MAAM;QAC7B,QAAQ,+BAA+B,OAAO,4BAA4B,MAAM,GAAG;QACnF,MAAM,OAAO,gBAAgB,IAAI,UAAU;QAC3C,SAAS,OAAO;aACX;QACL,yBAAyB;;QAEzB,MAAM,YAAY;WACf,KAAK,SAAS,QAAQ;WACtB,QAAQ,yBAAyB,KAAK,OAAO;;;MAGlD,OAAO,SAAS;;MAEhB,SAAS,QAAQ,UAAU;QACzB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,kBAAkB,YAAY,OAAO;;QAE5F,IAAI,UAAU,iCAAiC,KAAK,OAAO,KAAK;;QAEhE,MAAM,SAAS;QACf,MAAM,WAAW;QACjB,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;;QAE7C,GAAG,WAAW,QAAQ,IAAI;WACvB,KAAK,mBAAmB,SAAS;;QAEpC,SAAS,YAAY,QAAQ;UAC3B,0BAA0B;;UAE1B,OAAO,OAAO,YAAY;YACxB,QAAQ;YACR,QAAQ,OAAO;YACf,QAAQ,OAAO;YACf,KAAK,OAAO;aACX,QAAQ,0BAA0B,KAAK,QAAQ;;;QAGpD,SAAS,kBAAkB,UAAU;UACnC,QAAQ,QAAQ,UAAU,SAAS,WAAW;YAC5C,IAAI,UAAU,YAAY,MAAM;cAC9B,WAAW,MAAM,oBAAoB,QAAQ,KAAK,KAAK,OAAO,4BAA4B,YAAY,QAAQ,MAAM;cACpH,SAAS,MAAM;;;;UAInB,SAAS;;;;MAIb,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,kBAAkB,YAAY,OAAO;;QAE5F,SAAS,OAAO,SAAS;QACzB,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;QAC7C,SAAS,OAAO;;;MAGlB,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,kBAAkB,UAAU,OAAO;;QAE1F,SAAS,OAAO;;;;;;;;;IASpB,SAAS,OAAO,eAAe,MAAM,gBAAgB;MACnD,IAAI,QAAQ;;MAEZ,0BAA0B;;MAE1B,UAAU,OAAO;MACjB,MAAM,MAAM;MACZ,MAAM,eAAe,mBAAmB,OAAO,QAAQ;MACvD,MAAM,SAAS,mBAAmB,OAAO,QAAQ;MACjD,MAAM,YAAY,KAAK;;MAEvB,0BAA0B;;;;;;;IAO5B,SAAS,YAAY;MACnB,IAAI,QAAQ;MACZ,IAAI,SAAS;;MAEb,QAAQ,QAAQ,MAAM,QAAQ,SAAS,OAAO;QAC5C,SAAS,MAAM,eAAe;;;MAGhC,OAAO;;;;;;;;;;;;;IAaT,SAAS,UAAU,QAAQ,eAAe;;MAExC,IAAI,WAAW,UAAU,IAAI;MAC7B,IAAI,SAAS,OAAO;;MAEpB,OAAO,KAAK,KAAK,cAAc;MAC/B,OAAO,KAAK,OAAO,cAAc;;MAEjC,IAAI,OAAO,SAAS,OAAO,SAAS,cAAc,MAAM;QACtD,KAAK,MAAM,gCAAgC,OAAO,SAAS,OAAO,MAAM;QACxE,OAAO;;;MAGT,IAAI,CAAC,OAAO,OAAO,GAAG,SAAS,OAAO,KAAK,KAAK;QAC9C,KAAK,MAAM;QACX,OAAO;;;MAGT,OAAO,KAAK,QAAQ,cAAc;MAClC,cAAc,aAAa,cAAc,cAAc;MACvD,cAAc,gBAAgB,cAAc,iBAAiB;;MAE7D,QAAQ,QAAQ,OAAO,YAAY;MACnC,QAAQ,QAAQ,OAAO,eAAe;;MAEtC,OAAO;;MAEP,SAAS,cAAc,YAAY,KAAK;QACtC,OAAO,KAAK,WAAW,OAAO,cAAc,WAAW;;;MAGzD,SAAS,iBAAiB,QAAQ,KAAK;QACrC,IAAI,mBAAmB,cAAc,cAAc;;QAEnD,IAAI,qBAAqB,WAAW;UAClC,IAAI,OAAO,KAAK,cAAc,SAAS,WAAW;YAChD,OAAO,KAAK,cAAc,OAAO,CAAC,MAAM;;;UAG1C;;;QAGF,OAAO,KAAK,cAAc,OAAO,OAAO,KAAK,cAAc,QAAQ;QACnE,OAAO,KAAK,cAAc,KAAK,QAAQ,iBAAiB;;QAExD,IAAI,OAAO,SAAS,UAAU;UAC5B,QAAQ,QAAQ,KAAK,iBAAiB;eACjC,IAAI,OAAO,SAAS,WAAW;UACpC,IAAI,QAAQ,QAAQ,iBAAiB,OAAO;YAC1C,IAAI,iBAAiB,KAAK,WAAW,GAAG;cACtC,OAAO,KAAK,cAAc,KAAK,OAAO;cACtC,OAAO,UAAU;mBACZ;cACL,QAAQ;gBACN,OAAO,cAAc;gBACrB,UAAU,KAAK,WAAW,QAAQ,KAAK,iBAAiB;;cAE1D,QAAQ;gBACN,iBAAiB;gBACjB,QAAQ,KAAK,WAAW,QAAQ;;;;;;;MAO1C,SAAS,QAAQ,QAAQ,KAAK,MAAM;QAClC,IAAI;;QAEJ,IAAI,SAAS,MAAM;UACjB,iCAAiC,KAAK,QAAQ,KAAK;UACnD;;;QAGF,IAAI,SAAS,WAAW;UACtB;;;QAGF,WAAW,SAAS,YAAY,KAAK;;QAErC,IAAI,aAAa,WAAW;UAC1B,KAAK,MAAM,qBAAqB,KAAK,MAAM;UAC3C;;;QAGF,IAAI,SAAS,SAAS,MAAM,IAAI,KAAK;;QAErC,iCAAiC,KAAK,QAAQ,KAAK;;;MAGrD,SAAS,UAAU,QAAQ,KAAK,kBAAkB,QAAQ;QACxD,IAAI,iBAAiB,QAAQ,OAAO,KAAK,MAAM,CAAC,GAAG;UACjD;;;QAGF,iCAAiC,OAAO,QAAQ,KAAK;;;;;;;;;;EAS3D,SAAS,0BAA0B,QAAQ;IACzC,SAAS,WAAW,YAAY,OAAO;IACvC,OAAO,gBAAgB;IACvB,OAAO,UAAU;;;EAGnB,SAAS,0BAA0B,QAAQ;IACzC,SAAS,WAAW,YAAY,OAAO;IACvC,OAAO,gBAAgB;IACvB,OAAO,UAAU,OAAO,eAAe;;;EAGzC,SAAS,yBAAyB,QAAQ;IACxC,SAAS,WAAW,YAAY,OAAO;IACvC,OAAO,eAAe;IACtB,OAAO,SAAS;;;EAGlB,SAAS,yBAAyB,QAAQ;IACxC,SAAS,WAAW,YAAY,OAAO;IACvC,OAAO,eAAe;IACtB,OAAO,SAAS,OAAO,cAAc;;;AAGzC;ACrvBA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,sCAAsC;;EAE/C,SAAS,4CAA4C;IACnD,gBAAgB,YAAY,OAAO,OAAO,MAAM;IAChD,gBAAgB,UAAU,cAAc;IACxC,gBAAgB,UAAU,OAAO;;IAEjC,OAAO;MACL,QAAQ;;;IAGV,SAAS,uBAAuB,SAAS,WAAW;MAClD,OAAO,IAAI,gBAAgB,SAAS;;;IAGtC,SAAS,gBAAgB,SAAS,WAAW;MAC3C,IAAI,QAAQ;;MAEZ,MAAM,UAAU;MAChB,MAAM,UAAU;QACd,WAAW;;;;;AAKnB;AC7BA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,kCAAkC;;EAE3C,SAAS,wCAAwC;IAC/C,YAAY,YAAY,OAAO,OAAO,MAAM;IAC5C,YAAY,UAAU,cAAc;IACpC,YAAY,UAAU,OAAO;;IAE7B,OAAO;MACL,QAAQ;;;IAGV,SAAS,mBAAmB,SAAS,QAAQ,MAAM,QAAQ;MACzD,OAAO,IAAI,YAAY,SAAS,QAAQ,MAAM;;;IAGhD,SAAS,YAAY,SAAS,QAAQ,MAAM,QAAQ;MAClD,IAAI,QAAQ;;MAEZ,MAAM,UAAU;MAChB,MAAM,UAAU;QACd,QAAQ;QACR,MAAM;QACN,QAAQ;;;;;AAKhB;AC/BA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,oCAAoC;;EAE7C,SAAS,0CAA0C;IACjD,cAAc,UAAU,cAAc;IACtC,cAAc,UAAU,SAAS;IACjC,cAAc,UAAU,QAAQ;IAChC,cAAc,UAAU,MAAM;IAC9B,cAAc,UAAU,YAAY;;IAEpC,OAAO;MACL,QAAQ;;;IAGV,SAAS,qBAAqB,MAAM,aAAa,kBAAkB,eAAe;MAChF,OAAO,IAAI,cAAc,MAAM,aAAa,kBAAkB;;;IAGhE,SAAS,cAAc,MAAM,aAAa,kBAAkB,eAAe;MACzE,IAAI,QAAQ;MACZ,MAAM,OAAO;MACb,MAAM,cAAc;;MAEpB,MAAM,mBAAmB;MACzB,MAAM,SAAS;MACf,MAAM,gBAAgB,iBAAiB,WAAW,EAAE,OAAO;;;IAG7D,SAAS,MAAM,KAAK;MAClB,IAAI,QAAQ;;MAEZ,IAAI,QAAQ,WAAW;QACrB,QAAQ,QAAQ,MAAM,QAAQ,SAAS,KAAK,KAAK;UAC/C,MAAM,OAAO,OAAO;;aAEjB;QACL,MAAM,OAAO,OAAO;;;;IAIxB,SAAS,IAAI,KAAK,OAAO;MACvB,IAAI,QAAQ;;MAEZ,MAAM,OAAO,OAAO,MAAM,OAAO,QAAQ;MACzC,MAAM,OAAO,KAAK,KAAK;;;IAGzB,SAAS,OAAO,QAAQ;MACtB,IAAI,QAAQ;;MAEZ,QAAQ,QAAQ,QAAQ,SAAS,OAAO;QACtC,MAAM,OAAO,MAAM,OAAO;;;MAG5B,QAAQ,QAAQ,QAAQ,SAAS,OAAO;QACtC,MAAM,OAAO,MAAM,KAAK,KAAK,MAAM;;;;;IAKvC,SAAS,UAAU,KAAK;MACtB,IAAI,QAAQ;;MAEZ,IAAI,QAAQ,WAAW;QACrB,IAAI,SAAS;;QAEb,QAAQ,QAAQ,MAAM,QAAQ,SAAS,OAAO;UAC5C,SAAS,UAAU,MAAM,SAAS;;;QAGpC,OAAO;aACF;QACL,OAAO,MAAM,OAAO,SAAS,aAAa,MAAM,OAAO,KAAK,SAAS;;;;;AAK7E;AChFA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;KACZ,SAAS,iBAAiB;;EAE7B,SAAS,cAAc,MAAM,IAAI;IAC/B,OAAO,IAAI,SAAS;MAClB,qBAAqB,OAAO;MAC5B;;;AAGN;ACZA;AACA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;KACZ,SAAS,gBAAgB,SAAS,QAAQ,cAAc,UAAU;MACjE,IAAI;MACJ,IAAI;MACJ,OAAO,eAAe,QAAQ,cAAc;QAC1C,KAAK,WAAW;UACd,IAAI,CAAC,MAAM;;YAET,OAAO;YACP,SAAS,SAAS,KAAK;;;UAGzB,OAAO;;;;QAIT,YAAY;QACZ,cAAc;;;;;AAKtB;AC1BA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;KACZ,SAAS,eAAe,SAAS,KAAK;MACrC,OAAO,IAAI,QAAQ,mBAAmB,SAAS;;;;AAIrD;ACTA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,OAAO;;EAER,SAAS,QAAQ,UAAU;IACzB,SAAS,UAAU,MAAM;;;;EAG3B,SAAS,UAAU,WAAW;IAC5B,IAAI,KAAK;;IAET,GAAG,aAAa,GAAG,cAAc;;IAEjC,SAAS,WAAW,UAAU,kBAAkB,kBAAkB;;;;;MAKhE,IAAI,UAAU,QAAQ,QAAQ,YAAY,KAAK;;MAE/C,QAAQ,QAAQ,UAAU,SAAS,SAAS,KAAK;QAC/C,IAAI,CAAC,QAAQ,eAAe,MAAM;UAChC,QAAQ,OAAO,KAAK;;;;MAIxB,OAAO,GAAG,IAAI;;MAEd,SAAS,KAAK,SAAS;QACrB,OAAO,GAAG,QAAQ;WACf,KAAK,SAAS,OAAO;YACpB,IAAI,QAAQ,WAAW,mBAAmB;cACxC,iBAAiB;;;YAGnB,OAAO,EAAE,SAAS,MAAM,OAAO;;;UAGjC,SAAS,QAAQ;YACf,IAAI,QAAQ,WAAW,mBAAmB;cACxC,iBAAiB;;;YAGnB,OAAO,EAAE,SAAS,OAAO,QAAQ;;;;;IAKzC,OAAO;;;;AAGX;ACrDA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,oCAAoC;;EAE7C,SAAS,wCAAwC,qCAAqC,IAAI,MAAM;;IAE9F,iCAAiC,YAAY,OAAO,OAAO,oCAAoC;IAC/F,iCAAiC,UAAU,cAAc;;IAEzD,iCAAiC,UAAU,cAAc;;IAEzD,OAAO;MACL,QAAQ;;;IAGV,SAAS,wCAAwC,SAAS;MACxD,OAAO,IAAI,iCAAiC;;;IAG9C,SAAS,iCAAiC,SAAS;MACjD,IAAI,QAAQ;;MAEZ,MAAM,QAAQ;;MAEd,oCAAoC,KAAK,OAAO;;MAEhD,QAAQ,QAAQ,SAAS,SAAS,QAAQ;QACxC,OAAO,eAAe;;;;IAI1B,SAAS,YAAY,QAAQ;MAC3B,IAAI,QAAQ;MACZ,IAAI,WAAW;MACf,IAAI,WAAW,GAAG;MAClB,IAAI,SAAS,OAAO;;MAEpB,oCAAoC,UAAU,YAAY,KAAK,OAAO;;MAEtE,QAAQ,QAAQ,MAAM,SAAS,SAAS,QAAQ;QAC9C,QAAQ,QAAQ,OAAO,WAAW,SAAS,SAAS,MAAM;UACxD,SAAS,OAAO,CAAC,MAAM,SAAS,MAAM,KAAK,KAAK,OAAO;;;;MAI3D,QAAQ,QAAQ,MAAM,SAAS,SAAS,QAAQ;QAC9C,QAAQ,QAAQ,OAAO,YAAY,SAAS,SAAS,MAAM;UACzD,SAAS,OAAO,CAAC,MAAM,UAAU,MAAM,KAAK,KAAK,OAAO;;;;MAI5D,QAAQ,QAAQ,MAAM,SAAS,SAAS,QAAQ;QAC9C,QAAQ,QAAQ,OAAO,qBAAqB,SAAS,SAAS,MAAM;UAClE,SAAS,KAAK,KAAK,KAAK,OAAO;;;;MAInC,GAAG,WAAW,UAAU,kBAAkB,kBAAkB,KAAK,UAAU;;MAE3E,SAAS,iBAAiB,OAAO;QAC/B,SAAS,OAAO,CAAC,MAAM,mBAAmB,MAAM;;;MAGlD,SAAS,iBAAiB,QAAQ;QAChC,SAAS,OAAO,CAAC,MAAM,mBAAmB,QAAQ;;;MAGpD,SAAS,SAAS,SAAS;QACzB,MAAM,MAAM,UAAU,MAAM,MAAM,WAAW;QAC7C,MAAM,MAAM,QAAQ,UAAU;;QAE9B,QAAQ,QAAQ,SAAS,SAAS,QAAQ;UACxC,IAAI,OAAO,YAAY,OAAO;YAC5B,MAAM,MAAM,QAAQ,UAAU;;;;QAIlC,QAAQ,QAAQ,MAAM,SAAS,SAAS,QAAQ;UAC9C,QAAQ,QAAQ,OAAO,WAAW,SAAS,SAAS,MAAM;YACxD,SAAS,OAAO,CAAC,MAAM,SAAS,QAAQ,KAAK,KAAK,OAAO,QAAQ;;;;QAIrE,IAAI;QACJ,IAAI,SAAS;;QAEb,QAAQ,QAAQ,SAAS,SAAS,QAAQ;UACxC,IAAI,OAAO,YAAY,MAAM;YAC3B,OAAO,OAAO;iBACT;YACL,OAAO,KAAK;cACV,KAAK;cACL,QAAQ,OAAO;;;;;QAKrB,IAAI,OAAO,SAAS,GAAG;UACrB,SAAS,OAAO,CAAC,MAAM,QAAQ,IAAI,QAAQ,QAAQ,QAAQ;eACtD;UACL,SAAS,QAAQ,CAAC,MAAM,QAAQ,IAAI,QAAQ,QAAQ,QAAQ;;;;MAIhE,SAAS,SAAS;QAChB,QAAQ,QAAQ,MAAM,SAAS,SAAS,QAAQ;UAC9C,QAAQ,QAAQ,OAAO,YAAY,SAAS,SAAS,MAAM;YACzD,SAAS,OAAO,CAAC,MAAM,UAAU,QAAQ,KAAK,KAAK,OAAO;;;;;MAKhE,SAAS,SAAS,QAAQ;QACxB,KAAK,MAAM;;QAEX,SAAS,OAAO,CAAC,QAAQ,QAAQ,MAAM,QAAQ;;;MAGjD,OAAO,SAAS;;;;;AAItB;AC5HA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,uCAAuC;;EAEhD,SAAS,2CAA2C,MAAM;;IAExD,oCAAoC,UAAU,cAAc;;IAE5D,OAAO;;IAEP,SAAS,oCAAoC,SAAS;MACpD,IAAI,QAAQ;;MAEZ,MAAM,UAAU;;;IAGlB,SAAS,YAAY,QAAQ;MAC3B,IAAI,QAAQ;;MAEZ,KAAK,MAAM,sBAAsB,MAAM,SAAS,OAAO,MAAM;;MAE7D,IAAI,OAAO,WAAW,WAAW;QAC/B,KAAK,MAAM,uCAAuC;;;;;;AAK1D;AC7BA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,iCAAiC;;EAE1C,SAAS,uCAAuC;IAC9C,8BAA8B,UAAU,SAAS;IACjD,8BAA8B,UAAU,QAAQ;IAChD,8BAA8B,UAAU,QAAQ;IAChD,8BAA8B,UAAU,SAAS;IACjD,8BAA8B,UAAU,kBAAkB;;IAE1D,OAAO;;IAEP,SAAS,8BAA8B,MAAM;MAC3C,IAAI,QAAQ;MACZ,IAAI,WAAW;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;;MAGF,MAAM,OAAO;MACb,MAAM,QAAQ;;MAEd,MAAM,aAAa;MACnB,MAAM,cAAc;MACpB,MAAM,uBAAuB;MAC7B,MAAM,aAAa;MACnB,MAAM,cAAc;;MAEpB,MAAM,UAAU;;MAEhB,QAAQ,QAAQ,UAAU,SAAS,UAAU;QAC3C,MAAM,WAAW,YAAY;QAC7B,MAAM,YAAY,YAAY;QAC9B,MAAM,qBAAqB,YAAY;QACvC,MAAM,WAAW,YAAY;QAC7B,MAAM,YAAY,YAAY;QAC9B,MAAM,MAAM,YAAY;UACtB,SAAS;UACT,SAAS;;;;;IAKf,SAAS,MAAM,QAAQ,UAAU;MAC/B,IAAI,QAAQ;;MAEZ,MAAM,WAAW,QAAQ,KAAK;;;IAGhC,SAAS,OAAO,QAAQ,UAAU;MAChC,IAAI,QAAQ;;MAEZ,MAAM,YAAY,QAAQ,KAAK;;;IAGjC,SAAS,cAAc,QAAQ,UAAU;MACvC,IAAI,QAAQ;;MAEZ,MAAM,YAAY,QAAQ,KAAK;;;IAGjC,SAAS,aAAa,QAAQ,UAAU;MACtC,IAAI,QAAQ;;MAEZ,MAAM,WAAW,QAAQ,KAAK;;;IAGhC,SAAS,gBAAgB,QAAQ,UAAU;MACzC,IAAI,QAAQ;;MAEZ,MAAM,qBAAqB,QAAQ,KAAK;;;;;AAK9C;ACzFA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,wBAAwB;;EAEjC,SAAS;IACP;IACA;IACA;IACA;IACA;;IAEA,OAAO;MACL,QAAQ;;;IAGV,SAAS,4BAA4B,QAAQ;MAC3C,OAAO,IAAI,qBAAqB;;;IAGlC,SAAS,qBAAqB,QAAQ;MACpC,IAAI,QAAQ;MACZ,IAAI,UAAU,OAAO,WAAW;MAChC,OAAO,UAAU;MACjB,QAAQ,MAAM,OAAO,QAAQ,OAAO;MACpC,QAAQ,MAAM,OAAO,QAAQ,OAAO;;MAEpC,MAAM,SAAS;QACb,KAAK;QACL,KAAK;;;MAGP,IAAI,OAAO,OAAO,SAAS;QACzB,OAAO,KAAK;aACP,IAAI,OAAO,OAAO,OAAO;QAC9B,OAAO,KAAK;UACV,UAAU,QAAQ;UAClB,UAAU,QAAQ;;aAEf,IAAI,QAAQ,SAAS,OAAO,KAAK;QACtC,IAAI,CAAC,QAAQ,WAAW,OAAO,GAAG,WAAW;UAC3C,OAAO,GAAG,WAAW,QAAQ;;aAE1B;QACL,OAAO,KAAK;UACV,UAAU,QAAQ;UAClB,UAAU,QAAQ,SAAS,KAAK,MAAM;;;;MAI1C,QAAQ,QAAQ,OAAO,eAAe,SAAS,YAAY,UAAU;QACnE,IAAI,gBAAgB,yBAAyB,OAAO,YAAY,UAAU,OAAO;QACjF,OAAO,cAAc,YAAY;QACjC,IAAI,cAAc,aAAa,MAAM;UACnC,QAAQ,IAAI,KAAK;UACjB,IAAI,cAAc,SAAS,UAAU;YACnC,QAAQ,IAAI,KAAK;;;;;MAKvB,QAAQ,OAAO,OAAO;;MAEtB,IAAI,QAAQ,IAAI,SAAS,GAAG;QAC1B,MAAM,OAAO,IAAI,UAAU,QAAQ;;;MAGrC,IAAI,QAAQ,IAAI,SAAS,GAAG;QAC1B,MAAM,OAAO,IAAI,UAAU,QAAQ;;;;;;;AAM3C;AC3EA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,4BAA4B;;EAErC,SAAS,gCAAgC,MAAM,WAAW;;IAExD,OAAO;MACL,QAAQ;;;IAGV,SAAS,gCAAgC,YAAY,UAAU,MAAM;MACnE,OAAO,IAAI,yBAAyB,YAAY,UAAU;;;IAG5D,SAAS,yBAAyB,YAAY,UAAU,MAAM;MAC5D,IAAI,QAAQ;;MAEZ,IAAI,QAAQ,SAAS,aAAa;QAChC,MAAM,QAAQ,UAAU,OAAO;QAC/B,MAAM,OAAO;QACb,MAAM,cAAc;QACpB,MAAM,aAAa;aACd;QACL,IAAI,WAAW,SAAS,WAAW;UACjC,KAAK,MAAM,mCAAmC,YAAY;;;QAG5D,IAAI,WAAW,SAAS,aAAa,WAAW,SAAS,UAAU;UACjE,KAAK,MAAM,oCAAoC,WAAW,MAAM;;;QAGlE,MAAM,QAAQ,WAAW,SAAS,UAAU,OAAO;QACnD,MAAM,OAAO,WAAW;QACxB,MAAM,cAAc,WAAW,eAAe;;QAE9C,IAAI,WAAW,eAAe,WAAW;UACvC,MAAM,aAAa,MAAM,SAAS,YAAY,UAAU,SAAS,QAAQ;eACpE;UACL,MAAM,aAAa,WAAW;;;QAGhC,MAAM,WAAW,WAAW,YAAY;;;;;;;AAMhD;ACjDA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,0BAA0B;;EAEnC,SAAS;IACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,uBAAuB,UAAU,MAAM;IACvC,uBAAuB,UAAU,MAAM;IACvC,uBAAuB,UAAU,SAAS;IAC1C,uBAAuB,UAAU,aAAa;;IAE9C,uBAAuB,UAAU,aAAa;;IAE9C,OAAO;MACL,QAAQ;;;IAGV,SAAS,8BAA8B,QAAQ,cAAc;MAC3D,OAAO,IAAI,uBAAuB,QAAQ;;;;;;;;IAQ5C,SAAS,uBAAuB,QAAQ,cAAc;MACpD,IAAI,QAAQ;MACZ,IAAI,SAAS;QACX,QAAQ;;;MAGV,MAAM,SAAS,qBAAqB,OAAO;MAC3C,MAAM,QAAQ,4BAA4B,OAAO;;MAEjD,MAAM,eAAe;MACrB,MAAM,aAAa,WAAW;;MAE9B,MAAM,eAAe,oBAAoB;QACvC,MAAM;QACN;;;MAGF,MAAM,cAAc;MACpB,MAAM,OAAO,MAAM,OAAO;;MAE1B,aAAa,WAAW;;MAExB,MAAM,aAAa,YAAY,QAAQ,KAAK,SAAS,QAAQ;;MAE7D,SAAS,QAAQ,UAAU;QACzB,WAAW,MAAM,oBAAoB,MAAM,OAAO,kBAAkB,YAAY;QAChF,MAAM,MAAM,SAAS,SAAS;QAC9B,MAAM,cAAc;;QAEpB,SAAS;;;MAGX,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,OAAO,kBAAkB,YAAY;QAChF,SAAS;QACT,MAAM,cAAc;;;MAGtB,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,OAAO,kBAAkB,UAAU;;;;;;;;;IASlF,SAAS,IAAI,IAAI,QAAQ;MACvB,IAAI,QAAQ;;MAEZ,IAAI,CAAC,MAAM,OAAO,GAAG,SAAS,KAAK;QACjC,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,GAAG,YAAY;;;MAGrD,IAAI,SAAS,MAAM,MAAM,IAAI;;MAE7B,OAAO,UAAU,OAAO,QAAQ;;MAEhC,OAAO;;;;;;;;IAQT,SAAS,IAAI,QAAQ;MACnB,IAAI,QAAQ;MACZ,SAAS,QAAQ,OAAO,IAAI,MAAM,OAAO,OAAO,KAAK;;MAErD,IAAI,aAAa,yBAAyB;QACxC;QACA;;;MAGF,WAAW,UAAU,WAAW;;MAEhC,OAAO;;;;;;;;;IAST,SAAS,OAAO,IAAI;MAClB,IAAI,QAAQ;MACZ,IAAI,SAAS,MAAM,MAAM,OAAO;;MAEhC,OAAO,OAAO;;;;;;;IAOhB,SAAS,aAAa;MACpB,IAAI,QAAQ;MACZ,IAAI,gBAAgB;;MAEpB,QAAQ,QAAQ,MAAM,OAAO,eAAe,SAAS,oBAAoB,kBAAkB;QACzF,IAAI,mBAAmB,SAAS,UAAU;UACxC,cAAc,oBAAoB;YAChC,MAAM;;eAEH,IAAI,mBAAmB,SAAS,WAAW;UAChD,cAAc,oBAAoB;YAChC,MAAM;;;;;MAKZ,IAAI,OAAO;QACT,MAAM,MAAM;QACZ,IAAI,MAAM,OAAO,GAAG;QACpB,YAAY;QACZ,eAAe;;;MAGjB,IAAI,SAAS;QACX,KAAK;QACL,cAAc;QACd,QAAQ;QACR,UAAU;QACV,gBAAgB;;;MAGlB,IAAI,SAAS,MAAM,aAAa,MAAM;;MAEtC,WAAW,MAAM,oBAAoB,MAAM,OAAO,wBAAwB,YAAY;;MAEtF,OAAO;;;;;;;IAOT,SAAS,aAAa;MACpB,IAAI,QAAQ;MACZ,IAAI,WAAW,GAAG;MAClB,IAAI,SAAS;QACX,QAAQ;;;MAGV,MAAM,MAAM;;MAEZ,MAAM,aAAa,YAAY,QAAQ,KAAK,SAAS,QAAQ;;MAE7D,OAAO;;MAEP,SAAS,QAAQ,UAAU;QACzB,WAAW,MAAM,oBAAoB,MAAM,OAAO,wBAAwB,YAAY;QACtF,SAAS;;QAET,SAAS,QAAQ;;;MAGnB,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,OAAO,wBAAwB,YAAY;QACtF,SAAS;;QAET,SAAS,OAAO;;;MAGlB,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,OAAO,wBAAwB,UAAU;;QAEpF,SAAS,OAAO;;;;;;AAKxB;AClNA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,uBAAuB;;EAEhC,SAAS;IACP;IACA;IACA;IACA;IACA;IACA;;IAEA,OAAO;MACL,cAAc;;;IAGhB,SAAS,mBAAmB,WAAW,UAAU;MAC/C,IAAI,kBAAkB,UAAU,OAAO,UAAU,MAAM;;MAEvD,IAAI,QAAQ,cAAc,iBAAiB,SAAS,MAAM,QAAQ,WAAW;QAC3E,IAAI,QAAQ;;QAEZ,IAAI,KAAK,SAAS,MAAM,OAAO,MAAM;UACnC,KAAK,MAAM,6CAA6C,KAAK,MAAM,gBAAgB,MAAM,OAAO;;;QAGlG,4BAA4B,KAAK,OAAO,MAAM,QAAQ;;QAEtD,MAAM,KAAK,SAAS;;;MAGtB,MAAM,YAAY,OAAO,OAAO,4BAA4B;MAC5D,MAAM,UAAU,cAAc;;MAE9B,MAAM,UAAU,SAAS;MACzB,MAAM,UAAU,WAAW;MAC3B,MAAM,UAAU,cAAc,SAAS,aAAa,YAAY,KAAK,SAAS;;MAE9E,QAAQ,QAAQ,UAAU,WAAW,SAAS,cAAc,kBAAkB;QAC5E,MAAM,UAAU,oBAAoB,WAAW;UAC7C,OAAO,aAAa,MAAM,MAAM;;;;MAIpC,OAAO;;MAEP,SAAS,aAAa,MAAM,WAAW,OAAO;QAC5C,OAAO,IAAI,MAAM,MAAM,WAAW;;;;;;AAK1C;ACtDA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,QAAQ,4BAA4B;;EAErC,SAAS;IACP;IACA;IACA;IACA;IACA;IACA;;IAEA,yBAAyB,UAAU,QAAQ;IAC3C,yBAAyB,UAAU,UAAU;IAC7C,yBAAyB,UAAU,MAAM;IACzC,yBAAyB,UAAU,YAAY;;IAE/C,OAAO;MACL,QAAQ;;;IAGV,SAAS,gCAAgC,UAAU,QAAQ;MACzD,OAAO,IAAI,yBAAyB,UAAU;;;;;;;;IAQhD,SAAS,yBAAyB,UAAU,QAAQ;MAClD,IAAI,QAAQ;;MAEZ,MAAM,WAAW;MACjB,MAAM,OAAO,SAAS,OAAO;MAC7B,MAAM,SAAS,UAAU;;MAEzB,MAAM,SAAS;QACb,iBAAiB,iCAAiC;UAChD;UACA;UACA;;;;MAIJ,MAAM,OAAO,MAAM,SAAS,MAAM,MAAM,MAAM;;MAE9C,MAAM,UAAU;MAChB,MAAM,eAAe;MACrB,MAAM,eAAe;MACrB,MAAM,WAAW,MAAM,SAAS;;MAEhC,MAAM,UAAU,GAAG,QAAQ;;MAE3B,IAAI,iBAAiB,WAAW,IAAI,oBAAoB,MAAM,OAAO,kBAAkB;MACvF,IAAI,iBAAiB,WAAW,IAAI,oBAAoB,MAAM,OAAO,wBAAwB;MAC7F,IAAI,cAAc,WAAW,IAAI,oBAAoB,MAAM,OAAO,eAAe;;MAEjF,WAAW,IAAI,YAAY;;MAE3B,SAAS,OAAO,OAAO,QAAQ,QAAQ;QACrC,IAAI;;QAEJ,IAAI,WAAW,cAAc,MAAM,SAAS,WAAW;UACrD,QAAQ,MAAM,KAAK,QAAQ;UAC3B,IAAI,QAAQ,CAAC,GAAG;YACd,MAAM,KAAK,OAAO,OAAO;YACzB,MAAM,SAAS,MAAM,YAAY,MAAM;;;;;MAK7C,SAAS,QAAQ;QACf,MAAM,OAAO;QACb,MAAM,WAAW;;;MAGnB,SAAS,IAAI,OAAO,QAAQ,QAAQ;QAClC,IAAI,WAAW,YAAY;UACzB,MAAM,OAAO,MAAM,QAAQ;UAC3B,MAAM,KAAK,KAAK;;;;MAIpB,SAAS,gBAAgB;QACvB;QACA;QACA;;;;;;;;IAQJ,SAAS,YAAY;MACnB,IAAI,QAAQ;MACZ,IAAI,SAAS;;MAEb,QAAQ,QAAQ,MAAM,QAAQ,SAAS,OAAO;QAC5C,SAAS,MAAM,eAAe;;;MAGhC,OAAO;;;;;;;;IAQT,SAAS,IAAI,IAAI,QAAQ;MACvB,IAAI,QAAQ;;MAEZ,OAAO,MAAM,SAAS,IAAI,IAAI;;;;;;;IAOhC,SAAS,QAAQ;MACf,IAAI,QAAQ;MACZ,IAAI,WAAW,GAAG;MAClB,IAAI,WAAW,UAAU,IAAI;MAC7B,IAAI,SAAS;QACX,QAAQ;QACR,QAAQ,MAAM;;;MAGhB,0BAA0B;;MAE1B,QAAQ,QAAQ,MAAM,MAAM;;MAE5B,MAAM,SAAS,aAAa,YAAY;SACrC,KAAK,SAAS,QAAQ;SACtB,QAAQ,0BAA0B,KAAK,OAAO;;MAEjD,OAAO,SAAS;;MAEhB,SAAS,QAAQ,UAAU;QACzB,IAAI,UAAU,SAAS,iBAAiB,SAAS;QACjD,WAAW,MAAM,oBAAoB,MAAM,OAAO,qBAAqB,YAAY,OAAO;QAC1F,GAAG,WAAW,QAAQ,SAAS,IAAI,sBAAsB,KAAK,iBAAiB,SAAS;;QAExF,QAAQ,QAAQ,MAAM,MAAM;;QAE5B,MAAM,OAAO,QAAQ;QACrB,MAAM,QAAQ,SAAS,KAAK;;QAE5B,MAAM,YAAY,KAAK;QACvB,MAAM,eAAe;QACrB,MAAM,WAAW;;QAEjB,MAAM,SAAS,MAAM,YAAY,MAAM;QACvC,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;;QAE7C,SAAS,oBAAoB,QAAQ;UACnC,0BAA0B;;UAE1B,OAAO,OAAO,YAAY;YACxB,QAAQ;YACR,QAAQ;aACP,QAAQ,0BAA0B,KAAK,QAAQ;;;QAGpD,SAAS,gBAAgB,kBAAkB;UACzC,QAAQ,QAAQ,kBAAkB,SAAS,WAAW,KAAK;YACzD,IAAI,UAAU,YAAY,MAAM;cAC9B,WAAW,MAAM,oBAAoB,QAAQ,SAAS,KAAK,KAAK,OAAO,mBAAmB,YAAY,QAAQ,SAAS,MAAM;;cAE7H,UAAU,MAAM;;;;UAIpB,SAAS,QAAQ,SAAS,KAAK;;;;MAInC,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,OAAO,qBAAqB,YAAY,OAAO;;QAE1F,QAAQ,QAAQ,MAAM,MAAM;QAC5B,SAAS;QACT,MAAM,OAAO,gBAAgB,OAAO,SAAS;QAC7C,SAAS,OAAO;;;MAGlB,SAAS,OAAO,UAAU;QACxB,WAAW,MAAM,oBAAoB,MAAM,OAAO,qBAAqB,UAAU,OAAO;;QAExF,SAAS,OAAO;;;;;;EAKtB,SAAS,0BAA0B,QAAQ;IACzC,SAAS,WAAW,YAAY,OAAO;IACvC,OAAO,gBAAgB;IACvB,OAAO,UAAU;;;EAGnB,SAAS,0BAA0B,QAAQ;IACzC,SAAS,WAAW,YAAY,OAAO;IACvC,OAAO,gBAAgB;IACvB,OAAO,UAAU,OAAO,eAAe;;;AAG3C;ACnNA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,SAAS,YAAY;;EAEtB,SAAS,gBAAgB,YAAY;IACnC,IAAI,SAAS;IACb,IAAI,QAAQ;IACZ,KAAK,OAAO;;IAEZ,SAAS;MACP;MACA;MACA;MACA;MACA,OAAO;QACL,aAAa;QACb,aAAa;QACb,YAAY;QACZ,cAAc;QACd,eAAe;QACf,cAAc;QACd,oBAAoB;;QAEpB,kBAAkB;;;MAGpB,SAAS,YAAY,QAAQ,cAAc;QACzC,IAAI,WAAW,uBAAuB,OAAO,QAAQ;;QAErD,OAAO,OAAO,QAAQ;QACtB,MAAM,KAAK,OAAO;;;MAGpB,SAAS,YAAY,MAAM;QACzB,OAAO,OAAO;;;MAGhB,SAAS,eAAe;QACtB,OAAO;;;MAGT,SAAS,gBAAgB;QACvB,OAAO;;;MAGT,SAAS,aAAa;QACpB,QAAQ,QAAQ,QAAQ,SAAS,UAAU;UACzC,SAAS;;;;MAIb,SAAS,aAAa,MAAM,WAAW;QACrC,IAAI,CAAC,QAAQ,SAAS,OAAO;UAC3B,KAAK,MAAM,kCAAkC;UAC7C;eACK,IAAI,WAAW,WAAW,UAAU,WAAW;UACpD,KAAK,KAAK,yBAAyB;;;QAGrC,WAAW,WAAW,QAAQ;;;MAGhC,SAAS,iBAAiB,SAAS;QACjC,IAAI,UAAU;UACZ,MAAM;UACN,UAAU;;;QAGZ,IAAI,YAAY,WAAW;UACzB,KAAK,MAAM,4BAA4B;UACvC;;;QAGF,IAAI,SAAS;UACX,KAAK;UACL,cAAc;UACd,QAAQ;UACR,UAAU;UACV,gBAAgB;;;QAGlB,QAAQ,QAAQ,QAAQ,UAAU,SAAS,MAAM;UAC/C,QAAQ,SAAS,KAAK,YAAY,KAAK,MAAM,MAAM,YAAY,MAAM;;;QAGvE,IAAI,QAAQ,QAAQ,QAAQ,OAAO;UACjC,QAAQ,QAAQ,QAAQ,MAAM,SAAS,MAAM;YAC3C,QAAQ,KAAK,KAAK,YAAY,KAAK,MAAM,MAAM,YAAY,MAAM;;eAE9D,IAAI,QAAQ,SAAS,WAAW;UACrC,QAAQ,KAAK,KAAK,YAAY,QAAQ,KAAK,MAAM,MAAM,YAAY,QAAQ,MAAM;;;QAGnF,OAAO;;;;;;;;;AAOf;ACtGA,CAAC,WAAW;EACV;;EAEA,QAAQ,OAAO;GACd,wBAAO,SAAS,cAAc;IAC7B,aAAa,aAAa;;GAE3B,yBAAI,SAAS,YAAY,IAAI;IAC5B,WAAW,UAAU;;;AAGzB","file":"angular-jsonapi.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi']);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .factory('AngularJsonAPISourceRest', AngularJsonAPISourceRestWrapper);\n\n  function AngularJsonAPISourceRestWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISourceRest.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceRest.prototype.constructor = AngularJsonAPISourceRest;\n\n    return {\n      create: AngularJsonAPISourceRestFactory,\n      encodeParams: encodeParams,\n      decodeParams: decodeParams\n    };\n\n    function AngularJsonAPISourceRestFactory(name, url) {\n      return new AngularJsonAPISourceRest(name, url);\n    }\n\n    function AngularJsonAPISourceRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PATCH',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PATCH',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PATCH',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSourceError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSourceError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n\n    function encodeParams(params) {\n      var encodedParams = {};\n\n      if (params === undefined) {\n        return {};\n      }\n\n      angular.forEach(params, function(paramValue, paramKey) {\n        if (angular.isArray(paramValue)) {\n          encodedParams[paramKey] = encodeValue(paramValue);\n        } else if (angular.isObject(paramValue)) {\n          angular.forEach(paramValue, function(paramInnerValue, paramInnerKey) {\n            encodedParams[paramKey + '[' + paramInnerKey + ']'] = encodeValue(paramInnerValue);\n          });\n        } else {\n          encodedParams[paramKey] = paramValue;\n        }\n      });\n\n      return encodedParams;\n\n      function encodeValue(argument) {\n        if (angular.isArray(argument)) {\n          return argument.join(',');\n        } else {\n          return argument;\n        }\n      }\n    }\n\n    function decodeParams(params) {\n      var decodedParams = {};\n\n      angular.forEach(params, function(value, key) {\n        var objectKeyStart = key.indexOf('[');\n        value = value.split(',');\n\n        if (objectKeyStart > -1) {\n          var objectKey = key.substr(0, objectKeyStart);\n          var objectElementKey = key.substr(objectKeyStart + 1, key.indexOf(']') - objectKeyStart - 1);\n\n          decodedParams[objectKey] = decodedParams[objectKey] || {};\n          decodedParams[objectKey][objectElementKey] = value;\n        } else {\n          decodedParams[key] = value;\n        }\n      });\n\n      return decodedParams;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceRest) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceRest = AngularJsonAPISourceRest;\n\n    return $jsonapi;\n  }\n})();\n","(function() {\n  'use strict';\n\n  /* global Parse: false */\n  angular.module('angular-jsonapi-parse', ['angular-jsonapi'])\n    .constant('Parse', Parse);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-parse')\n  .factory('AngularJsonAPISourceParse', AngularJsonAPISourceParseWrapper);\n\n  function AngularJsonAPISourceParseWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    pluralize,\n    Parse,\n    $log,\n    $q\n  ) {\n\n    AngularJsonAPISourceParse.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceParse.prototype.constructor = AngularJsonAPISourceParse;\n    AngularJsonAPISourceParse.prototype.initialize = initialize;\n\n    return {\n      create: AngularJsonAPISourceParseFactory\n    };\n\n    function AngularJsonAPISourceParseFactory(name, table) {\n      return new AngularJsonAPISourceParse(name, table);\n    }\n\n    function AngularJsonAPISourceParse(name, table) {\n      var _this = this;\n\n      _this.ParseObject = Parse.Object.extend(table);\n      _this.type = pluralize(table).charAt(0).toLowerCase() + pluralize(table).slice(1);\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('update', update);\n      _this.synchronization('add', update);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        var query = new Parse.Query(_this.ParseObject);\n\n        if (config.params.limit !== undefined) {\n          query.limit(config.params.limit);\n        }\n\n        angular.forEach(config.params.filter, function(filter) {\n          query.equalTo(filter.key, filter.value);\n        });\n\n        return query.find().then(resolveParse, rejectParse.bind(null, 'all'));\n      }\n\n      function get(config) {\n        var query = new Parse.Query(_this.ParseObject);\n        return query.get(config.object.data.id).then(resolveParse, rejectParse.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        var object = new _this.ParseObject();\n        object.set('id', config.object.data.id);\n        return object.destroy().then(resolveParse, rejectParse.bind(null, 'remove'));\n      }\n\n      function update(config) {\n        var object = toParseObject(config.object);\n        return object.save(null).then(resolveParse, rejectParse.bind(null, 'update'));\n      }\n\n      function toParseObject(object) {\n        var parseObject = new _this.ParseObject();\n        angular.forEach(object.form.data.attributes, function(attribute, key) {\n          parseObject.set(key, attribute);\n        });\n\n        angular.forEach(object.schema.relationships, function(relationship, key) {\n          if (relationship.type === 'hasOne'\n            && object.form.data.relationships[key].data !== null\n            && object.form.data.relationships[key].data !== undefined\n          ) {\n            var table = pluralize(key, 1).charAt(0).toUpperCase() + pluralize(key, 1).slice(1);\n            var parsePointer = new (Parse.Object.extend(table))();\n            parsePointer.set('id', object.form.data.relationships[key].data.id);\n            parseObject.set(key, parsePointer);\n          }\n        });\n\n        return parseObject;\n      }\n\n      function fromParseObject(object) {\n        var relationships = _this.synchronizer.resource.schema.relationships;\n        object.type = _this.type;\n        object.relationships = object.relationships || [];\n        angular.forEach(relationships, function(relationship, key) {\n          if (object.attributes[key] && relationship.type === 'hasOne') {\n            object.relationships[key] = {\n              data: {\n                type: relationship.model,\n                id: object.attributes[key].id\n              }\n            };\n          }\n        });\n\n        return object;\n      }\n\n      function resolveParse(response) {\n        if (angular.isArray(response)) {\n          angular.forEach(response, function(elem, key) {\n            response[key] = fromParseObject(elem);\n          });\n        } else if (angular.isObject(response)) {\n          response = fromParseObject(response);\n        }\n\n        return $q.resolve({\n          data: response\n        });\n      }\n\n      function rejectParse(action, response) {\n        $log.error('Parse error for', action, response);\n        return $q.reject(response);\n      }\n    }\n\n    function initialize(appId, jsKey) {\n      Parse.initialize(appId, jsKey);\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-parse')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceParse) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceLocal = AngularJsonAPISourceParse;\n\n    return $jsonapi;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi']);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .factory('AngularJsonAPISourceLocal', AngularJsonAPISourceLocalWrapper);\n\n  function AngularJsonAPISourceLocalWrapper(\n    AngularJsonAPISourcePrototype,\n    $window,\n    $q\n  ) {\n    var size = {\n      max: 0,\n      all: 0,\n      limit: 5200000,\n      list: {}\n    };\n\n    AngularJsonAPISourceLocal.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceLocal.prototype.constructor = AngularJsonAPISourceLocal;\n\n    return {\n      create: AngularJsonAPISourceLocalFactory,\n      size: size\n    };\n\n    function AngularJsonAPISourceLocalFactory(name, prefix) {\n      return new AngularJsonAPISourceLocal(name, prefix);\n    }\n\n    function AngularJsonAPISourceLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        var key = prefix + '.' + type;\n\n        size.all -= size.list[key];\n        delete size.list[key];\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.removeItem(key);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        var json = cache.toJson();\n        var key = prefix + '.' + type;\n\n        size.list[key] = size.list[key] === undefined ? 0 : size.list[key];\n        size.all += json.length - size.list[key];\n        size.list[key] = json.length;\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.setItem(key, json);\n      }\n\n      function objectMaxKey(object) {\n        return Object.keys(object).reduce(function(m, k) {\n          return object[k] > object[m] ? k : m;\n        }, Object.keys(object)[0]);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceLocal) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceLocal = AngularJsonAPISourceLocal;\n\n    return $jsonapi;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n      params = params || {};\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this)).filter(filter);\n\n      function filter(argument) {\n        var filterParams  = params.filter;\n        var valid = true;\n\n        angular.forEach(filterParams, function(constraint) {\n          valid = valid && argument.data.attributes[constraint.key] === constraint.value;\n        });\n\n        return valid;\n      }\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && _this.resource.schema.id.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && _this.resource.schema.id.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target, form);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target, form);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, form);\n        return [];\n      } else {\n        return __processRemove(object, key, target, form);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target, form);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema === undefined) {\n        $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n        $log.error('For one side relationships set schema.reflection to false');\n        return [];\n      } else if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object, form)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target, form);\n        __addHasMany(target, reflectionKey, object, form);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target, form);\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema !== undefined) {\n          if (oldReflectionSchema.type === 'hasOne') {\n            __removeHasOne(oldReflection, reflectionKey, object, form);\n          } else if (oldReflectionSchema.type === 'hasMany') {\n            __removeHasMany(oldReflection, reflectionKey, object, form);\n          }\n\n          result.push(__wrapResults(oldReflection, reflectionKey, object));\n        } else {\n          $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n          $log.error('For one side relationships set schema.reflection to false');\n        }\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n        if (reflectionSchema !== undefined) {\n          if (reflectionSchema.type === 'hasOne') {\n            __addHasOne(target, reflectionKey, object, form);\n          } else if (reflectionSchema.type === 'hasMany') {\n            __addHasMany(target, reflectionKey, object, form);\n          }\n\n          result.push(__wrapResults(target, reflectionKey, object));\n        } else {\n          $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n          $log.error('For one side relationships set schema.reflection to false');\n        }\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target, form) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target, form);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target, form);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema !== undefined) {\n        if (reflectionSchema.type === 'hasOne') {\n          __removeHasOne(target, reflectionKey, object, form);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __removeHasMany(target, reflectionKey, object, form);\n        }\n      } else {\n        $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n        $log.error('For one side relationships set schema.reflection to false');\n        return [];\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, form) {\n      $log.debug('addHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, form) {\n      $log.debug('addHasMany', object, key, target);\n\n      var linkData = toLinkData(target);\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, form) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, form) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (form === false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this.parent, key, target, oneWay, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this.parent, key, target, oneWay, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.promise = $q.resolve(_this);\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(response.data.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response.data.meta);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSourceError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = _this.data;\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        deferred.resolve();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve();\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve();\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!object.schema.id.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      object.data.links = validatedData.links;\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          if (object.data.relationships[key] === undefined) {\n            object.data.relationships[key] = {data: undefined};\n          }\n\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSourceError', AngularJsonAPIModelSourceErrorWrapper);\n\n  function AngularJsonAPIModelSourceErrorWrapper() {\n    SourceError.prototype = Object.create(Error.prototype);\n    SourceError.prototype.constructor = SourceError;\n    SourceError.prototype.name = 'SourceError';\n\n    return {\n      create: SourceErrorFactory\n    };\n\n    function SourceErrorFactory(message, source, code, action) {\n      return new SourceError(message, source, code, action);\n    }\n\n    function SourceError(message, source, code, action) {\n      var _this = this;\n\n      _this.message = message;\n      _this.context = {\n        source: source,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('namedFunction', namedFunction);\n\n  function namedFunction(name, fn) {\n    return new Function('fn',\n      'return function ' + name + '(){ return fn.apply(this,arguments)}'\n    )(fn);\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$q', decorator);\n  }\n\n  function decorator($delegate) {\n    var $q = $delegate;\n\n    $q.allSettled = $q.allSettled || allSettled;\n\n    function allSettled(promises, resolvedCallback, rejectedCallback) {\n      // Implementation of allSettled function from Kris Kowal's Q:\n      // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n      // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n      var wrapped = angular.isArray(promises) ? [] : {};\n\n      angular.forEach(promises, function(promise, key) {\n        if (!wrapped.hasOwnProperty(key)) {\n          wrapped[key] = wrap(promise);\n        }\n      });\n\n      return $q.all(wrapped);\n\n      function wrap(promise) {\n        return $q.resolve(promise)\n          .then(function(value) {\n            if (angular.isFunction(resolvedCallback)) {\n              resolvedCallback(value);\n            }\n\n            return { success: true, value: value };\n          },\n\n          function(reason) {\n            if (angular.isFunction(rejectedCallback)) {\n              rejectedCallback(reason);\n            }\n\n            return { success: false, reason: reason };\n          });\n      }\n    }\n\n    return $q;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(sources) {\n      return new AngularJsonAPISynchronizerSimple(sources);\n    }\n\n    function AngularJsonAPISynchronizerSimple(sources) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, sources);\n\n      angular.forEach(sources, function(source) {\n        source.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data || {}, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data || {}, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(sources) {\n      var _this = this;\n\n      _this.sources = sources;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISourcePrototype', AngularJsonAPISourcePrototypeWrapper);\n\n  function AngularJsonAPISourcePrototypeWrapper() {\n    AngularJsonAPISourcePrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISourcePrototype.prototype.after = afterSynchro;\n    AngularJsonAPISourcePrototype.prototype.begin = begin;\n    AngularJsonAPISourcePrototype.prototype.finish = finish;\n    AngularJsonAPISourcePrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISourcePrototype;\n\n    function AngularJsonAPISourcePrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper(\n    $log,\n    pluralize,\n    uuid4,\n    AngularJsonAPISchemaLink\n  ) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      if (schema.id === 'uuid4') {\n        schema.id = uuid4;\n      } else if (schema.id === 'int') {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.isNumber\n        };\n      } else if (angular.isObject(schema.id)) {\n        if (!angular.isFunction(schema.id.generate)) {\n          schema.id.generate = angular.noop;\n        }\n      } else {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.identity.bind(null, true)\n        };\n      }\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get;\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!_this.schema.id.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.promise = object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = angular.extend({}, _this.schema.params.all, params);\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.promise = collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: _this.schema.id.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.modelFactory(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(\n    AngularJsonAPIAbstractModel,\n    AngularJsonAPISchema,\n    namedFunction,\n    pluralize,\n    $log\n  ) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var constructorName = pluralize.plural(schemaObj.type, 1);\n\n      var Model = namedFunction(constructorName, function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      });\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params || {};\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      _this.promise = $q.resolve(_this);\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {string} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.links = response.data.links;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n        _this.pristine = false;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory(\n      $log,\n      AngularJsonAPIResource,\n      AngularJsonAPISynchronizerSimple\n    ) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n        synchronizerSimple: AngularJsonAPISynchronizerSimple,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronizer) {\n        var resource = AngularJsonAPIResource.create(schema, synchronizer);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n          return;\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else if (results.data !== undefined) {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}
